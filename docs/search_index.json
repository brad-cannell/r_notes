[
["index.html", "R Notes Welcome Organization", " R Notes Brad Cannell 2021-07-11 Welcome Welcome to Brad Cannell‚Äôs R Notes! This is a Bookdown version Brad Cannell‚Äôs R Notes. I‚Äôm really making this ‚Äúbook‚Äù for me, but even better if you find it useful too! Why am I doing this (as opposed to just keeping notes locally)? Better organized (e.g., chapter structure and search) Easy access ‚Äì just click on the bookmark on web browser Practice using bookdown Might help with R4Epi ‚Äì This can be sort of a sandbox for developing before I add things to R4Epi. This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License. Organization These notes are loosely organized into the following parts: Programming: Things that have to do with optimizing code, writing functions, creating packages, and repeated operations. Working with external files: Things like data transfer, web scraping, PDF scraping, and using Officer to scrape Microsoft Office documents. Data management: Things related to manipulating/transforming/filtering data that is already in R. Data analysis: Things related to creating numerical summaries of data. Data visualization: Things related to graphical summaries of data. A lot of this will be about ggplot. Presenting results: Things related to making numerical and graphical summaries accessible outside of R. This can include webpages, static dashboards, PDF documents, Microsoft Office documents, ect. This does not include Shiny apps. Shiny: Things related to using Shiny to create interactive web apps. Eventually, this may need its own Bookdown project. "],
["my-package-notes.html", "1 Packages: Quick Start 1.1 ‚≠êÔ∏èOverview 1.2 üåéUseful websites 1.3 Step 1: Create the package project 1.4 Step 3: Writing help pages 1.5 Step 4: Synchronize with GitHub 1.6 Step 5: Testing 1.7 Vignettes 1.8 Adding and documenting data 1.9 Errors, warnings, notes", " 1 Packages: Quick Start 1.1 ‚≠êÔ∏èOverview This chapter is my quick start guide for creating packages. Using packages to create reproducible analyses This is proposed in the Robert Flight‚Äôs Blog. I played around with it, but have decided that it‚Äôs better to do analysis as a project rather than a package. You can get most of the benefits of this technique - including Git and Packrat - using a project. Just share the entire project folder with a collaborator and / or post on Github. Packages require a bunch of extra work on the front end and are harder to keep up to date. 1.2 üåéUseful websites Hadley Wickham and Jenny Bryan‚Äôs R Packages book RStudio Tutorial devtools package usethis package 1.3 Step 1: Create the package project File &gt; New Project New Directory &gt; R Package Give the package a new (Hadley‚Äôs naming strategies) If you have R scripts written already, and wish to add them to the package, you can do so using the dialogue box titled ‚ÄúCreate package based on source files‚Äù Check ‚ÄúCreate a git repository‚Äù (You can add later) At this point RStudio should automatically open up the Rproj file we just created. Make sure you have the latest version of R, then run the following code to get the packages you‚Äôll need: install.packages(c(&quot;devtools&quot;, &quot;roxygen2&quot;, &quot;testthat&quot;, &quot;knitr&quot;)) Use the following code to access new devtools functions as I develop them. This is particularly important during the development of the book. devtools::install_github(&quot;hadley/devtools&quot;) library(devtools) has_devel() 1.3.1 Step 2: Modify the description file Open the description file and make some changes. Here is an example: Package: freqtables Type: Package Title: Make Quick Descriptive Tables For Categorical Variables Description: Quickly make tables of descriptive statistics (i.e., counts, percentages, confidence intervals) for categorical variables. This package is designed to work in a tidyverse pipeline, and consideration has been given to get results from R to Microsoft Word ¬Æ with minimal pain. Version: 0.1.0 Authors@R: person(&quot;Brad&quot;, &quot;Cannell&quot;, email = &quot;brad.cannell@gmail.com&quot;, role = c(&quot;aut&quot;, &quot;cre&quot;)) Maintainer: Brad Cannell &lt;brad.cannell@gmail.com&gt; URL: https://github.com/brad-cannell/freqtables BugReports: https://github.com/brad-cannell/freqtables/issues License: MIT + file LICENSE Encoding: UTF-8 LazyData: true RoxygenNote: 7.0.2 Imports: dplyr Remember that Title Case is required for the Title Do Not use library(package) in R scripts - instead add package dependencies to the Imports or Remotes field in the DESCRIPTION. Do use library(package) in vignette .Rmd files, and do not add these package dependencies to the DESCRIPTION If we added R scripts to the package in Step 1, bullet 4 above, we need to open them now and make sure to remove all the library functions. Note that these R scripts are not linked to the original R scripts. In other words, if I make a change to props.R inside my package, those changes are reflected in the original props.R script. If you use MIT license, remember to add the license file (without file extension) to the main package directory. When adding CRAN packages to imports, you must first make sure they are installed. Instructions for installing dependencies from sources other than CRAN are given here. 1.3.2 Working with R scripts Don‚Äôt write or alter your functions in the console as you would in a typical interactive session. If you do, it‚Äôs easy for the version you‚Äôre using interactively and the version you are actually including in your package to get out of sync. Instead, load the package. Click the build tab &gt; More &gt; Load All, or devtools::load_all, or shift + cmd + L 1.4 Step 3: Writing help pages Help pages are contained in .Rd files saved in the man folder. It‚Äôs best practice to use roxygen with your script files to automatically generate the .Rd files. Doing so helps to keep your scripts and your help pages in sync. To use roxygen: Make sure the R script you want to document is active. Click Project Options &gt; Build Tools &gt; Generate documentation with Roxygen Place your cursor in the function you want to document Insert a Roxygen skeleton with the keyboard shortcut cmd + alt + shift + R After you‚Äôve filled in the skeleton click Build &gt; More &gt; Document, or use the keyboard shortcut shift + cmd + D. RStudio will then automatically generate the help pages in your man folder. Click the build tab &gt; More &gt; Load All, or devtools::load_all, or shift + cmd + L Check your help page by typing ?function_name in the console. 1.4.1 Example roxygen header #&#39; @title Compact Table of Summary Statistics #&#39; #&#39; @description Based on Stata&#39;s &quot;tabstat&quot; command. &quot;tabstat displays summary #&#39; statistics for a series of numeric variables in one table. It allows you #&#39; to specify the list of statistics to be displayed. Statistics can be #&#39; calculated (conditioned on) another variable. tabstat allows substantial #&#39; flexibility in terms of the statistics presented and the format of the #&#39; table&quot; (Stata, 2016). #&#39; #&#39; @param x A continuous variable. #&#39; @param digits Rounds the values returned to the specified number of decimal #&#39; places (default 3). #&#39; @param stats Return specified statistics. Options include: #&#39; \\describe{ #&#39; \\item{n}{Count of nonmissing values of x} #&#39; \\item{nmiss}{Count of missing values of x} #&#39; \\item{ci}{95 percent confidence interval for the mean of x} #&#39; \\item{sum}{Sum of x} #&#39; \\item{max}{Maximum value of x} #&#39; \\item{min}{Minimum value of x} #&#39; \\item{range}{(Maximum value of x) - (minimum value of x)} #&#39; \\item{sd}{Standard deviation of x} #&#39; \\item{var}{Variance of x} #&#39; \\item{cv}{Coefficient of variation (sd / mean) of x} #&#39; \\item{sem}{Standard error of the mean of x} #&#39; \\item{skew}{Skewness of x} #&#39; \\item{kurt}{Kurtosis of x} #&#39; \\item{p1}{1st percentile of x} #&#39; \\item{p5}{5th percentile of x} #&#39; \\item{p10}{10th percentile of x} #&#39; \\item{p25}{25th percentile of x} #&#39; \\item{p50}{Median value of x} #&#39; \\item{median}{Median value of x} #&#39; \\item{p75}{75th percentile of x} #&#39; \\item{p90}{90th percentile of x} #&#39; \\item{p95}{95th percentile of x} #&#39; \\item{p99}{99th percentile of x} #&#39; \\item{iqr}{Interquartile range (p75 - p25)} #&#39; \\item{q}{Equivalent to specifying p25 p50 p75} #&#39; } #&#39; #&#39; @return A data frame. By default, the data frame contains the variable name #&#39; and mean. #&#39; @export #&#39; #&#39; @references Stata 14 help for tabstat #&#39; \\url{http://www.stata.com/help.cgi?tabstat} #&#39; #&#39; @examples #&#39; data(mtcars) #&#39; #&#39; # Single univariate analysis with Defaults #&#39; tabstat(mtcars$mpg) #&#39; #&#39; # Single univariate analysis with all stats #&#39; tabstat(mtcars$mpg, stats = c(&quot;n&quot;, &quot;nmiss&quot;, &quot;ci&quot;, &quot;sum&quot;, &quot;max&quot;, &quot;min&quot;, #&#39; &quot;range&quot;, &quot;sd&quot;, &quot;var&quot;, &quot;cv&quot;, &quot;sem&quot;, &quot;skew&quot;, &quot;kurt&quot;, &quot;p1&quot;, &quot;p5&quot;, &quot;p10&quot;, #&#39; &quot;p25&quot;, &quot;p50&quot;, &quot;median&quot;, &quot;p75&quot;, &quot;p90&quot;, &quot;p95&quot;, &quot;p99&quot;, &quot;iqr&quot;, &quot;q&quot;)) 1.4.2 Documenting Package: You can use roxygen to provide a help page for your package as a whole. More information is available from Hadley here. At this point, you have a usable package 1.4.3 Once package is complete (ish) Update documentation (help pages). Build &gt; More &gt; Document, or shift + cmd + D. Check the package by clicking Build &gt; Check. This will look for common package problems Click Build &gt; Build &amp; Reload. That will build the package and install it in your local package directory If you want to copy the package to send to someone else, click Build &gt; More &gt; Build source package. RStudio will build the package and save it as a .tar.gz file. You can then send it to another user to be installed on their system. If you are using GitHub, you need to commit changes and then push them to GitHub. More information about using Git and GitHub are available here. Other users can install your package directly from GitHub with install.packages(\"devtools\") followed by devtools::install_github(\"username/packagename\"). 1.4.4 Notes about package notes: Because packages are almost always a work in progress, you will want to add notes to yourself about the project in the source package that you don‚Äôt want others to see. You can do this by creating a notes directory, and then listing that directory in .Rbuildignore. You can add to buildignore using usethis::use_build_ignore(\"notes\"). More information is available here. Also make sure to add NOTES to .gitignore with usethis::use_git_ignore(\"notes\") Use NOTES for notes, but not tasks. Why or how, but not what. Tasks go into issues. There is a NOTES template in R/Templates. 1.5 Step 4: Synchronize with GitHub Again, details are available in Hadley Wickham‚Äôs Book. Note: to exculde files from add them to .gitignore manually, or by clicking Git &gt; More &gt; Ignore. If you didn‚Äôt check ‚ÄúCreate a git repository‚Äù in step 1, you‚Äôll need to create one now. Do so by clicking Project Options &gt; Git/SVN &gt; Version Control System. May need to restart R Create a README.md file (devtools::use_readme_rmd()) Note: This only works if you set up the project as a package. Do this, even if you don‚Äôt intend to create a package. There are just nice extra tools avaialable when you select project type &gt; R Package. Create a new repo on GitHub: https://github.com/new. Give it the same name as your package, and include the package title as the repo description. Leave all the other options as is, then click Submit. Open a shell, then type git remote add origin https://github.com/mbcann01/dataclean.git Modify DESCRIPTION to add URL and BugReports fields that link to your new GitHub site. Save the file and commit (with the message ‚ÄúUpdating DESCRIPTION to add links to GitHub site‚Äù) Open a shell, then type git push -u origin master Enter username mbcann01 and password asdf1234 Go to your GitHub page and look at the DESCRIPTION 1.5.1 Example: Modify Description URL: https://github.com/mbcann01/dataclean BugReports: https://github.com/mbcann01/dataclean/issues 1.5.2 Example Installation instructions for README: All files can be viewed directly on Github. To install this package locally, simply use devtools: library(devtools) devtools::install_github(&quot;mbcann01/detectPilotTest&quot;) library(detectPilotTest) browseVignettes(&quot;detectPilotTest&quot;) 1.6 Step 5: Testing Testing is an important part of programming. For detailed information on testing see the appropriate chapter in Hadley Wickham‚Äôs Book. Further guidance is available at the R Journal. Get started with devtools::use_testthat(). Create test file. Must be in tests/testhat. File name should start with test_ and the function name. For example, test_check_catvars. Modify your code or tests Test your package with Ctrl/Cmd + Shift + T or devtools::test(). Repeat until all tests pass. 1.7 Vignettes There are some great vignette resources on the internet: Chapter on vignettes in Hadley‚Äôs Package book Leisch‚Äôs creating R packages tutorial Flight‚Äôs article on creating an analysis as a package and vignette 1.7.1 To create a vignette: run usethis::use_vignette(\"my-vignette\") Open vignettes/my-vignette.Rmd Create the vignette Unlike R scripts, install and load packages directly in the vignettes. Knit the vignette - The default action will be to create a version of the vignette that can be viewed in RStudio. However, devtools::install_github() (and friends) will not build vignettes by default because they‚Äôre time consuming and may require additional packages. So, in order to be able to view the vignette in RStudio, you must use vignettes = TRUE, e.g., devtools::install_github(‚Äúbrad-cannell/bfuncs,‚Äù build_vignettes = TRUE) instead. Use devtools::build_vignettes() to create an html version of the vignette in inst/doc that you can provide a link to on your Github README page. By default, these folders will be added to .gitignore. Remove them from .gitignore to be able to view/use them on Github. Create a rawgit version of the html vignette file, and providea link to it on README. use use devtools::build() to create a package bundle with the vignettes included. RStudio‚Äôs ‚ÄúBuild &amp; reload‚Äù does not build vignettes to save time. When you add or update vignettes, push to Github again. 1.7.2 Vignette Notes: This builds the vignettes, and is probably fine for a regular package of functions. However, when using packages as a means for reproducible, self-contained analysis projects, the vignettes have greater importance, and by default are not easily accessible. Need to find a way to make the vignettes more ‚Äúfront and center‚Äù Create a help page for the entire package that includes links to the vignettes? Include links to the README.md file and upload to GitHub (with the data sets excluded)? Remember to use system.file() when reading in data inside a code chunk. If you have trouble getting it to work, try build &amp; reload. To save a data frame to data/ inside a vignette, you can use the rprojroot package. use rprojroot::find_root(\"DESCRIPTION\") 1.8 Adding and documenting data The explanation in the R Packages book is good, short, and easy to follow. 1.9 Errors, warnings, notes Below are some common errors, warnings and notes I‚Äôve encountered during build tests. W checking for unstated dependencies in examples ‚Ä¶ ‚Äòlibrary‚Äô or ‚Äòrequire‚Äô call not declared from: ‚Äòtidyverse‚Äô E checking examples (707ms) Running examples in ‚Äòfreqtables-Ex.R‚Äô failed The error most likely occurred in: I got this error because I had library(tidyverse) in theexamples? section of my roxygen2 header in one of my R scripts, but I did not have tidyverse in the Imports section of my DESCRIPTION file. I could add tidyverse to the DESCRIPTION file (usethis::use_package(\"tidyverse\", type = \"Imports\")). However, in this case I chose to use library(dplyr), which was already in the Imports section of my DESCRIPTION file, instead. W checking dependencies in R code (369ms) ‚Äò::‚Äô or ‚Äò:::‚Äô import not declared from: ‚Äòrlang‚Äô To fix this one simply run the following code in the console: usethis::use_package(\"rlang\", type = \"Imports\") Warning: ‚Äòinst/doc‚Äô files ‚Ä¶ ignored as vignettes have been rebuilt. Just ignore this one. Warning in strptime(xx, f &lt;- ‚Äú%Y-%m-%d %H:%M:%OS,‚Äù tz = tz) : unknown timezone ‚Äòzone/tz/2017c.1.0/zoneinfo/America/Chicago‚Äô Just ingnore this one. It‚Äôs a problem with my computer, not with the package code. Non-standard files/directories found at top level: ‚Äòdevelop_test_table.Rmd‚Äô ‚Äòdevelop_test_table.nb.html‚Äô Need to delete these files when I‚Äôm done developing chi-square test. Prevents R CMD check: ‚Äúno visible binding for global variable ‚Äò.‚Äô‚Äù Put the following (for example) directly inside the function definition in the R script where the function is defined: # ------------------------------------------------------------------ # Prevents R CMD check: &quot;no visible binding for global variable ‚Äò.‚Äô&quot; # ------------------------------------------------------------------ n = n_total = prop = t_crit = se = lcl_wald = ucl_wald = percent = NULL N checking R code for possible problems (1.8s) get_group_n: no visible global function definition for ‚Äò%&gt;%‚Äô Undefined global functions or variables: %&gt;% Info on fixing this issue Short answer: Add the following directly inside the roxygen2 header in the R script where the function is defined: @importFrom dplyr %&gt;%. You must also make sure that it gets to the NAMESPACE. Run usethis::use_namespace() and then devtools::document() to get it into NAMESPACE. ## R version 4.0.5 (2021-03-31) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached): ## [1] compiler_4.0.5 magrittr_2.0.1 bookdown_0.18 tools_4.0.5 ## [5] htmltools_0.5.0 rstudioapi_0.13 yaml_2.2.1 stringi_1.5.3 ## [9] rmarkdown_2.6 knitr_1.30 stringr_1.4.0 xfun_0.19 ## [13] digest_0.6.25 rlang_0.4.10 evaluate_0.14 "],
["creating-rmd-templates.html", "2 Creating Rmd Templates 2.1 ‚≠êÔ∏èOverview 2.2 üåéUseful websites 2.3 Create a package 2.4 Add a template to your package", " 2 Creating Rmd Templates 2.1 ‚≠êÔ∏èOverview This file contains notes on creating Rmd templates for RStudio. In RStudio, click on the ‚Äúnew file‚Äù button. Click ‚ÄúR Markdown‚Ä¶‚Äù Click ‚ÄúFrom Template‚Äù in the left sidebar menu. A list of Rmd templates appears in the ‚ÄúTemplate:‚Äù list. You can create your own templates and add them to this menu, which can be really handy! Below, I describe how to do that. Important: Rmd templates can only be added to RStudio‚Äôs template list by adding the Rmd template to a package and then installing that package on your computer. Read Hadley Wickham and Jenny Bryan‚Äôs R Packages book for an overview of creating R packages. 2.2 üåéUseful websites https://bookdown.org/yihui/rmarkdown/document-templates.html https://r-pkgs.org/ 2.3 Create a package See R Packages and/or my R packages notes. 2.4 Add a template to your package Step 1. Create directory for template Templates are located within the inst/rmarkdown/templates directory of a package. This structure can be generated automatically with the use_rmarkdown_template() function from the usethis package. It is possible to contain multiple templates in a single package, with each template stored in a separate sub-directory. Step 2. For example, the ‚ÄúNo Output‚Äù Rmd template can be viewed at: https://github.com/brad-cannell/templates/blob/master/inst/rmarkdown/templates/no_output/skeleton/skeleton.Rmd Step 3. Change the name of the folder in inst/rmarkdown/templates from template-name. For example, no_output. Step 4. Open the folder you just renamed and update template.yaml. The value you pass to the name: parameter will determine how the template is listed in RStudio‚Äôs template list. For example, name: No Output. The value you pass to the description: parameter appear as a tool tip when you hover your mouse over the template‚Äôs name in RStudio‚Äôs template list. For, example, Brad Cannell's template for an Rmd file with no output. Step 5. Create (or copy and paste) your Rmd template file into skeleton/skeleton.Rmd. üóíSide Note: If you already have a template in your package, you can create another one by pasting usethis::use_rmarkdown_template() in the console again and following the steps above. ## R version 4.0.5 (2021-03-31) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached): ## [1] compiler_4.0.5 magrittr_2.0.1 bookdown_0.18 tools_4.0.5 ## [5] htmltools_0.5.0 rstudioapi_0.13 yaml_2.2.1 stringi_1.5.3 ## [9] rmarkdown_2.6 knitr_1.30 stringr_1.4.0 xfun_0.19 ## [13] digest_0.6.25 rlang_0.4.10 png_0.1-7 evaluate_0.14 "],
["arranging-columns-with-across.html", "3 Arranging Columns with Across 3.1 Solution by LMc:", " 3 Arranging Columns with Across I‚Äôm trying to arrange calculated columns immediately after source columns when using dplyr column-wise operations. https://stackoverflow.com/questions/67076974/arrange-calculated-columns-immediately-after-source-columns-when-using-dplyr-col/67077122#67077122 https://community.rstudio.com/t/arrange-calculated-columns-immediately-after-source-columns-when-using-dplyr-column-wise-operations/101726 library(dplyr) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union Example data df &lt;- tibble( id = c(1, 2, 2), id_row = c(1, 1, 2), name_first = c(&quot;John&quot;, &quot;Jane&quot;, &quot;Jane&quot;), city = c(&quot;NY&quot;, &quot;DAL&quot;, &quot;HOU&quot;), x = c(0, 1, 0) ) df ## # A tibble: 3 x 5 ## id id_row name_first city x ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 1 John NY 0 ## 2 2 1 Jane DAL 1 ## 3 2 2 Jane HOU 0 Within ID, the values of name_first and city should be constant. The values for id_row and x need not be constant. I want to test for and inspect differing values of name_first and city within-id. One convenient way to do this is with mutate() and across(). df %&gt;% group_by(id) %&gt;% mutate( across( .cols = c(name_first, city), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) ## # A tibble: 3 x 7 ## # Groups: id [2] ## id id_row name_first city x name_first_all_match city_all_match ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;lgl&gt; &lt;lgl&gt; ## 1 1 1 John NY 0 TRUE TRUE ## 2 2 1 Jane DAL 1 TRUE FALSE ## 3 2 2 Jane HOU 0 TRUE FALSE The issue is that the ‚Äúall_match‚Äù (calculated) columns are added to the far right of the data frame rather than immediately after their source column. This makes it difficult to visually inspect differing values for the columns of interest. Of course, in this small data frame, we could easily rearrange the columns using select(). df %&gt;% group_by(id) %&gt;% mutate( across( .cols = c(name_first, city), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) %&gt;% select(id, id_row, starts_with(&quot;name_first&quot;), starts_with(&quot;city&quot;), x) ## # A tibble: 3 x 7 ## # Groups: id [2] ## id id_row name_first name_first_all_match city city_all_match x ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 1 1 John TRUE NY TRUE 0 ## 2 2 1 Jane TRUE DAL FALSE 1 ## 3 2 2 Jane TRUE HOU FALSE 0 The issue with that approach is that it quickly becomes pretty cumbersome with more columns. A more tractable approach would be to sort the names alphabetically‚Ä¶ df %&gt;% group_by(id) %&gt;% mutate( across( .cols = c(name_first, city), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) %&gt;% select(sort(names(.))) ## # A tibble: 3 x 7 ## # Groups: id [2] ## city city_all_match id id_row name_first name_first_all_match x ## &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 NY TRUE 1 1 John TRUE 0 ## 2 DAL FALSE 2 1 Jane TRUE 1 ## 3 HOU FALSE 2 2 Jane TRUE 0 ‚Ä¶but in my situation I need to preserve the original column order. I‚Äôd also prefer to stick with Tidyverse solutions if possible. Any ideas are appreciated! 3.1 Solution by LMc: # Use select because it allows for more complex column selection when working # with more complex data frames. inspect_cols &lt;- df %&gt;% select(name_first, city) %&gt;% names() # Set column order ahead of time. This assumes that you know the names of each # of the columns you want to inspect col_order &lt;- purrr::map( names(df), function(x) { if (x %in% inspect_cols) { c(x, paste0(x, &quot;_all_match&quot;)) } else { x } } ) %&gt;% unlist() df %&gt;% group_by(id) %&gt;% mutate( across( .cols = all_of(inspect_cols), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) %&gt;% dplyr::select(all_of(col_order)) ## # A tibble: 3 x 7 ## # Groups: id [2] ## id id_row name_first name_first_all_match city city_all_match x ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 1 1 John TRUE NY TRUE 0 ## 2 2 1 Jane TRUE DAL FALSE 1 ## 3 2 2 Jane TRUE HOU FALSE 0 ## R version 4.0.5 (2021-03-31) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] dplyr_1.0.6 ## ## loaded via a namespace (and not attached): ## [1] rstudioapi_0.13 knitr_1.30 magrittr_2.0.1 tidyselect_1.1.0 ## [5] R6_2.4.1 rlang_0.4.10 fansi_0.4.1 stringr_1.4.0 ## [9] tools_4.0.5 xfun_0.19 png_0.1-7 utf8_1.1.4 ## [13] cli_2.4.0 DBI_1.1.0 htmltools_0.5.0 ellipsis_0.3.1 ## [17] assertthat_0.2.1 yaml_2.2.1 digest_0.6.25 tibble_3.1.1 ## [21] lifecycle_1.0.0 crayon_1.4.1 bookdown_0.18 purrr_0.3.4 ## [25] vctrs_0.3.7 glue_1.4.2 evaluate_0.14 rmarkdown_2.6 ## [29] stringi_1.5.3 compiler_4.0.5 pillar_1.6.0 generics_0.1.0 ## [33] pkgconfig_2.0.3 "],
["column-names-prepping-many-for-merge.html", "4 Column Names: Prepping Many for Merge 4.1 ‚≠êÔ∏èOverview 4.2 üåéUseful websites 4.3 üì¶Load packages 4.4 üî¢Simulate data 4.5 Get the existing column names 4.6 Standardize new column names 4.7 Turn this into a function 4.8 Manual changes to column names 4.9 Have R write out the rename code 4.10 Rename the columns 4.11 Repeat the process for V2 4.12 Repeat the process for V3 4.13 Merge all 3 visits 4.14 Final data cleaning", " 4 Column Names: Prepping Many for Merge 4.1 ‚≠êÔ∏èOverview The inspiration for this chapter came about when I was trying to merge the QDS vist 1 through visit 5 files that were part of the Link2Care project. All of the QDS files (plus some other files) needed to be merged together into a final analysis data set. However, not all questions were asked at all visits and column names were inconsistently used across visits. Even when the names were almost the same, a visit number was attached to the name (e.g., TODAY_V1, TODAY_V2, TODAY_V3, etc.). Finally, each data set contained 800+ columns, which made renaming them all manually tedious and error prone. So, I‚Äôm trying to come up with a better way. One method I came up with was reading in the variable names from the Word codebooks and then modifying them. Using this method required making some custom styles in Word and applying those styles to the column names. This seemed to work pretty well at first, but then Joe and James made some changes to QDS, which rendered the codebooks I‚Äôd made all the changes to obsolete. This left me with two options: Have some of the variable name adjustments pulled from the codebook and some of the variable name adjustments done manually in the R code (e.g., T26, visit type). Keep all of the adjustments in the codebook, which means converting the new codebooks to word documents, and going back through them to format all of the old column names again. Neither of these options seems very robust or future-proof. While it might be a lot of work upfront, I‚Äôm starting to think that just doing all of the variable renaming in the R code might be the way to go. Below, I‚Äôm going to play around with how to automate as much of this process as possible. 4.2 üåéUseful websites GitHub issue 4.3 üì¶Load packages library(dplyr) library(stringr) library(testthat) library(tidyr) 4.4 üî¢Simulate data Simulate 3 QDS data sets. Don‚Äôt worry about the values much. They really aren‚Äôt the issue for this example. SUBJECT: No change in column name across visits. TODAY_V and VISIT_V: The _V1, _V2, _V3 part changes. SQ_2: Only exists in v1, and the name is altered. GROUP: Only exists in v3. WEIGHT and WEIGHT3: Doesn‚Äôt exist in v2 and doesn‚Äôt follow any naming convention. DEMO16G and DEM14GV3: The variable was named incorrectly in v1. DS10A_V2: Only asked in v2 and doesn‚Äôt follow typical naming convention. DEM15V1: Only asked in v1 and I want to change the name completely. T26A_V1: Only exists in v1 and v3. Also, it needs to be renamed. T26A_V1A and T26A_V1B: Only exists in v1 and v3. Needs to be renamed, and it requires using the dummy variable naming convention. Additionally, we want to convert all column names to lower case and follow these naming conventions: The typical way that variables are named in these data sets is: [optionally:dummy_variable_lettered] For example: BPM1_V1, LSN3_V1 _[optionally:dummy_variable_lettered] For example: Screening Question 2 is named: SQ_2 OR: The dummy variable for the ‚ÄúEMAIL‚Äù Response to Screening Question 18 is: SQ_18A Many questions also have the visit number embedded in the name. For example: Demographics question 1 is: DEM1V1. However, there are some exceptions to this rule - intentional or not. For example, the fifth MMSE question is: MMS4V In order to improve consistency in the variable names, we will adopt the following convention: _[optionally:dummy_variable_lettered] dummy variables will be numbered a-z For example, sq_12, t_14a We will drop visit number from the variable name an use an explicit visit variable. Exceptions: Demographic variables that almost anyone should be reasonably able to understand without the codebook will be given intuitive, descriptive names (e.g., age, race, gender, marital_status, etc.). I‚Äôm also going to change ‚ÄúSUBJECT‚Äù to ‚Äúid.‚Äù v1 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V1 = as.Date(c(&quot;2018-04-07&quot;, &quot;2018-05-03&quot;)), VISIT_V1 = 1, SQ_2 = c(1, 0), WEIGHT = c(179, 194), DEMO16G = c(0, 1), DEM15V1 = c(1, 0), T26A_V1 = c(2, 4), T26A_V1A = c(0, 0), T26A_V1B = c(1, 0) ) v2 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V2 = as.Date(c(&quot;2018-04-30&quot;, &quot;2018-05-07&quot;)), VISIT_V2 = 2 ) v3 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V3 = as.Date(c(&quot;2018-05-31&quot;, &quot;2018-06-08&quot;)), VISIT_V3 = 3, GROUP = c(1, 2), WEIGHT3 = c(179, 194), DEM14GV3 = c(2, 3), T26A_V3 = c(2, 4), T26A_V3A = c(0, 0), T26A_V3B = c(1, 0) ) 4.5 Get the existing column names v1_old_names &lt;- names(v1) v1_old_names ## [1] &quot;SUBJECT&quot; &quot;TODAY_V1&quot; &quot;VISIT_V1&quot; &quot;SQ_2&quot; &quot;WEIGHT&quot; &quot;DEMO16G&quot; ## [7] &quot;DEM15V1&quot; &quot;T26A_V1&quot; &quot;T26A_V1A&quot; &quot;T26A_V1B&quot; 4.6 Standardize new column names Remove _v{1, 2, 3} and v{1, 2, 3} from column names Replace spaces with underscores Convert to lower case Add underscore in-between the abbreviated tool name and question number This won‚Äôt be perfect, but it will drastically reduce the number of manual changes we have to make. # Remove _v1 from column name # Remove v1 at end of column name (e.g., DEM1v3) v1_new_names &lt;- stringr::str_replace(v1_old_names, &quot;_V1|V1&quot;, &quot;&quot;) # Replace spaces with underscores v1_new_names &lt;- stringr::str_replace_all(v1_new_names, &quot; &quot;, &quot;_&quot;) # Convert to lower case v1_new_names &lt;- stringr::str_to_lower(v1_new_names) # Add underscore in-between the abbreviated tool name and question number v1_new_names &lt;- stringr::str_replace(v1_new_names, &quot;([a-z])(\\\\d)&quot;, &quot;\\\\1_\\\\2&quot;) v1_new_names ## [1] &quot;subject&quot; &quot;today&quot; &quot;visit&quot; &quot;sq_2&quot; &quot;weight&quot; &quot;demo_16g&quot; ## [7] &quot;dem_15&quot; &quot;t_26a&quot; &quot;t_26aa&quot; &quot;t_26ab&quot; 4.7 Turn this into a function standardize_col_names &lt;- function(.data) { # Get the existing column names old_names &lt;- names(.data) # Create a string that contains _V1 through _V5 and V1 through V5 to pass to # the regular expression below v_num &lt;- paste0(&quot;_V&quot;, 1:5, collapse = &quot;|&quot;) vnum &lt;- paste0(&quot;V&quot;, 1:5, collapse = &quot;|&quot;) v_pattern &lt;- paste(paste(v_num, vnum, sep = &quot;|&quot;), collapse = &quot;|&quot;) # Remove _v{1, 2, 3} from column name # Remove v{1, 2, 3} at end of column name (e.g., DEM1v3) new_names &lt;- stringr::str_replace(old_names, v_pattern, &quot;&quot;) # Replace spaces with underscores new_names &lt;- stringr::str_replace_all(new_names, &quot; &quot;, &quot;_&quot;) # Convert to lower case new_names &lt;- stringr::str_to_lower(new_names) # Add underscore in-between the abbreviated tool name and question number new_names &lt;- stringr::str_replace(new_names, &quot;([a-z])(\\\\d)&quot;, &quot;\\\\1_\\\\2&quot;) # Return character vector of standardized column names new_names } # For testing # standardize_col_names(v1) 4.7.1 Make a unit test for the function test_that(&quot;standardize_col_names produces the expected column names.&quot;, { v1_test &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V1 = as.Date(c(&quot;2018-04-07&quot;, &quot;2018-05-03&quot;)), VISIT_V1 = 1, SQ_2 = c(1, 0), WEIGHT = c(179, 194), DEMO16G = c(0, 1), DEM15V1 = c(1, 0), T26A_V1 = c(2, 4), T26A_V1A = c(0, 0), T26A_V1B = c(1, 0), TEST_V8 = 0 ) new_names &lt;- standardize_col_names(v1_test) expceted_new_names &lt;- c( &quot;subject&quot;, &quot;today&quot;, &quot;visit&quot;, &quot;sq_2&quot;, &quot;weight&quot;, &quot;demo_16g&quot;, &quot;dem_15&quot;, &quot;t_26a&quot;, &quot;t_26aa&quot;, &quot;t_26ab&quot;, &quot;test_v_8&quot; ) expect_equal(new_names, expceted_new_names) }) ## Test passed üòÄ new_names &lt;- standardize_col_names(v1) 4.8 Manual changes to column names The step above used to standardize column names fixes most of them, but some manual changes to variable names still need to be made. new_names[new_names == &quot;sq_2&quot;] &lt;- &quot;sq_hispanic&quot; # demo_16g was incorrectly numbered when the data was created new_names[new_names == &quot;demo_16g&quot;] &lt;- &quot;dem_14g&quot; new_names[new_names == &quot;dem_15&quot;] &lt;- &quot;dem_veteran&quot; # Take the extra &quot;a&quot; out of all the T26 col names new_names &lt;- str_replace(new_names, &quot;t_26a&quot;, &quot;t_26&quot;) 4.9 Have R write out the rename code So that you don‚Äôt have to type it out by hand. Ideally, you only have to run this code once, copy and paste into the rename code chunk below, and then just make small updates to the rename code chunk if changes are made to QDS. # If needed, run the code below. Copy and paste the output into the rename() # code chunk. Make manual changes as needed. new_old_name_pairs &lt;- paste(new_names, names(v1), sep = &quot; = &quot;) new_old_name_pairs &lt;- paste(new_old_name_pairs, collapse = &quot;, \\n&quot;) cat(new_old_name_pairs) ## subject = SUBJECT, ## today = TODAY_V1, ## visit = VISIT_V1, ## sq_hispanic = SQ_2, ## weight = WEIGHT, ## dem_14g = DEMO16G, ## dem_veteran = DEM15V1, ## t_26 = T26A_V1, ## t_26a = T26A_V1A, ## t_26b = T26A_V1B 4.9.1 Make it a function write_rename &lt;- function(.data, .new_names) { new_old_name_pairs &lt;- paste(.new_names, names(.data), sep = &quot; = &quot;) new_old_name_pairs &lt;- paste(new_old_name_pairs, collapse = &quot;, \\n&quot;) cat(new_old_name_pairs) } # For testing write_rename(v1, new_names) ## subject = SUBJECT, ## today = TODAY_V1, ## visit = VISIT_V1, ## sq_hispanic = SQ_2, ## weight = WEIGHT, ## dem_14g = DEMO16G, ## dem_veteran = DEM15V1, ## t_26 = T26A_V1, ## t_26a = T26A_V1A, ## t_26b = T26A_V1B 4.10 Rename the columns v1 &lt;- v1 %&gt;% rename( subject = SUBJECT, today = TODAY_V1, visit = VISIT_V1, sq_hispanic = SQ_2, weight = WEIGHT, dem_14g = DEMO16G, dem_veteran = DEM15V1, t_26 = T26A_V1, t_26a = T26A_V1A, t_26b = T26A_V1B ) 4.11 Repeat the process for V2 new_names &lt;- standardize_col_names(v2) write_rename(v2, new_names) ## subject = SUBJECT, ## today = TODAY_V2, ## visit = VISIT_V2 v2 &lt;- v2 %&gt;% rename( subject = SUBJECT, today = TODAY_V2, visit = VISIT_V2 ) 4.12 Repeat the process for V3 new_names &lt;- standardize_col_names(v3) new_names[new_names == &quot;weight_3&quot;] &lt;- &quot;weight&quot; new_names[new_names == &quot;dem_15&quot;] &lt;- &quot;dem_veteran&quot; # Take the extra &quot;a&quot; out of all the T26 col names new_names &lt;- str_replace(new_names, &quot;t_26a&quot;, &quot;t_26&quot;) write_rename(v3, new_names) ## subject = SUBJECT, ## today = TODAY_V3, ## visit = VISIT_V3, ## group = GROUP, ## weight = WEIGHT3, ## dem_14g = DEM14GV3, ## t_26 = T26A_V3, ## t_26a = T26A_V3A, ## t_26b = T26A_V3B v3 &lt;- v3 %&gt;% rename( subject = SUBJECT, today = TODAY_V3, visit = VISIT_V3, group = GROUP, weight = WEIGHT3, dem_14g = DEM14GV3, t_26 = T26A_V3, t_26a = T26A_V3A, t_26b = T26A_V3B ) 4.13 Merge all 3 visits Merge all 3 visits into a single data frame qds_all_visits &lt;- v1 %&gt;% bind_rows(v2) %&gt;% bind_rows(v3) %&gt;% arrange(subject, visit) qds_all_visits ## # A tibble: 6 x 11 ## subject today visit sq_hispanic weight dem_14g dem_veteran t_26 t_26a ## &lt;dbl&gt; &lt;date&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2001 2018-04-07 1 1 179 0 1 2 0 ## 2 2001 2018-04-30 2 NA NA NA NA NA NA ## 3 2001 2018-05-31 3 NA 179 2 NA 2 0 ## 4 2002 2018-05-03 1 0 194 1 0 4 0 ## 5 2002 2018-05-07 2 NA NA NA NA NA NA ## 6 2002 2018-06-08 3 NA 194 3 NA 4 0 ## # ‚Ä¶ with 2 more variables: t_26b &lt;dbl&gt;, group &lt;dbl&gt; 4.14 Final data cleaning Make a couple more column name changes Carry forward time-invariant variables qds_all_visits %&gt;% rename(id = subject, date_visit = today) %&gt;% # Carry forward time-invariant variables group_by(id) %&gt;% fill(sq_hispanic, dem_veteran, group, .direction = &quot;downup&quot;) %&gt;% ungroup %&gt;% DT::datatable(options = list(scrollX = TRUE)) ## R version 4.0.5 (2021-03-31) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] tidyr_1.1.3 testthat_3.0.2 stringr_1.4.0 dplyr_1.0.6 ## ## loaded via a namespace (and not attached): ## [1] pillar_1.6.0 compiler_4.0.5 tools_4.0.5 digest_0.6.25 ## [5] pkgload_1.2.1 jsonlite_1.7.2 evaluate_0.14 lifecycle_1.0.0 ## [9] tibble_3.1.1 pkgconfig_2.0.3 png_0.1-7 rlang_0.4.10 ## [13] DBI_1.1.0 cli_2.4.0 rstudioapi_0.13 crosstalk_1.1.0.1 ## [17] yaml_2.2.1 xfun_0.19 withr_2.4.2 knitr_1.30 ## [21] htmlwidgets_1.5.2 generics_0.1.0 desc_1.3.0 vctrs_0.3.7 ## [25] rprojroot_1.3-2 DT_0.15 tidyselect_1.1.0 glue_1.4.2 ## [29] R6_2.4.1 fansi_0.4.1 rmarkdown_2.6 bookdown_0.18 ## [33] purrr_0.3.4 magrittr_2.0.1 backports_1.1.6 ellipsis_0.3.1 ## [37] htmltools_0.5.0 assertthat_0.2.1 utf8_1.1.4 stringi_1.5.3 ## [41] crayon_1.4.1 "],
["book-chapters.html", "5 Bookdown: Creating Book Chapters 5.1 Chapter overview 5.2 Motivating example 5.3 Body 5.4 Cross-references 5.5 Citations 5.6 Previewing the chapter 5.7 Additional resources: function to check 5.8 Key terms : function to add to appendix 5.9 Final example code : function to add to appendix", " 5 Bookdown: Creating Book Chapters Chapters should pretty much just be about one distinct idea. Give some more thought to defining this more clearly. I think it will be important as I start incorporating the epidemiology stuff. Also, it should help with making things easier to find. Heading guidelines: * Useful for finding what you are looking for. 5.1 Chapter overview Very brief description of what they can expect. By the end of this chapter, we will be able to: 1. Placeholder 2. Placeholder Awesome if you can start with a funny picture or a cool quote. 5.2 Motivating example Recall that one of my [goals][Goals] is ‚ÄúTo start each concept with the end result and then deconstruct how we arrived at that result, where possible. I find that it is easier for me to understand new concepts when learning them as a component of a final product.‚Äù We won‚Äôt necessarily do this for every chapter (e.g., installing R and RStudio) if doing so doesn‚Äôt make sense. 5.3 Body 5.3.1 Language Use ‚Äúwe‚Äù and ‚Äúour‚Äù language. Make it friendly and informal. 5.3.2 Text conventions Bold text is used to highlight important terms, file names, and file extensions. Not every bolded term needs to go in the glossary. Use your best judgment. Highlighted inline code is used to emphasize small sections of R code and program elements such as variable or function names. 5.3.3 Special sections üóíSide Note: This is an example note. ‚ö†Ô∏èWarning: This is an example warning 5.3.4 Images Don‚Äôt forget to add ‚Äúecho=FALSE‚Äù to the code chunk. To cross-reference figures. Name the figure in the code chunk (e.g., {r console, echo=FALSE}). Then add \\@ref(fig:console) to the text. The figure reference should go outside of punctuation. With a space. Every figure doesn‚Äôt need a caption. It can actually make things look sloppy. The only figures that NEED a caption are those figures that are cross-referenced. Because of the way the files are structured, You won‚Äôt be able to see pictures directly in the Rmd files without including ‚Äú../../‚Äù on the front the file paths. However, having ‚Äú../../‚Äù on the front of the file paths prevents the book from building appropriately. 5.3.5 Code blocks üëÜHere‚Äôs what we did above: Use unordered lists for these sections. It allows for nested lists and code. Add line breaks in between the bullets. &lt;ul&gt; &lt;li&gt;You can type `?mutate` into your R console to view the help documentation for this function and follow along with the explanation below./li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;/ul&gt; 5.4 Cross-references To cross-reference figures. Name the figure in the code chunk (e.g., {r console, echo=FALSE}). Then add \\@ref(fig:console) to the text. The figure reference should go outside of punctuation. With a space. To cross-reference chapters: https://happygitwithr.com/bookdown-cheat-sheet.html Add CSS id the behind the header # How to use odds ratios {#ors} Refer to it like this: The the chapter on odds ratios Capitalize first letter when cross-referencing the chapter by name ‚Äì the Let‚Äôs get programming chapter. Written as ‚Äúthe [Let‚Äôs get programming] chapter.‚Äù Don‚Äôt capitalize the first letter when describing the contents of a chapter in the cross-reference ‚Äì the chapter on exporting data. Written as ‚ÄúWe were first introduced to [factor vectors][Factor vectors] in the chapter..‚Äù 5.5 Citations For more details, see Yihui Xie‚Äôs Bookdown book. Add whatever you want to cite to Paperpile. Navigate to Paperpile. Click on the document/article you want to cite. Click the drop-down arrow next to the ‚ÄúCite‚Äù button. Click the BibTeX option. This will copy a BibTeX citation to your clipboard. In RStudio, open book.bib, which should be in your book‚Äôs root directory. Paste the BibTeX citation into book.bib. Order the citations alphabetically by author‚Äôs last name. Save. For example, here is the book.bib entry for the Yihui Xie‚Äôs bookdown book: Then, to cite that book, type @key where you want the citation to appear ‚Äì the key part of @key is marked in the example above. So, I‚Äôm citing Yihui Xie‚Äôs bookdown book at the end of this sentence by typing @Xie2021-pn after the period with a space in between.1 üóíSide Note: You can change the citation style using the csl: parameter in index.Rmd. I typically use csl: ama.csl, but you can download other formats from https://github.com/citation-style-language/styles. 5.6 Previewing the chapter Supposed to use ‚Äúbookdown::preview_chapter(‚Äù03_what_is_r.Rmd‚Äú)‚Äù to preview chapters. I can‚Äôt get this to work for some reason. I created a new project that I can use a test environment. It‚Äôs in ‚ÄúR4Epi chapters in progress/bookdown_test_environment.‚Äù You have to build the whole book, but it should go fast because I don‚Äôt have all the chapters. 5.6.1 Miscelaneous Make liberal use of emojis. Start making videos to supplement content. 5.7 Additional resources: function to check Links to cheat sheets, websites, and videos. 5.8 Key terms : function to add to appendix Key terms covered in this chapter. 5.9 Final example code : function to add to appendix Succinct recap of the code used in this chapter without any explanation of how it works. You can use this as a quick reference later. We won‚Äôt necessarily do this for every chapter (e.g., installing R and RStudio) if doing so doesn‚Äôt make sense. ## R version 4.0.5 (2021-03-31) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] tidyr_1.1.3 testthat_3.0.2 stringr_1.4.0 dplyr_1.0.6 ## ## loaded via a namespace (and not attached): ## [1] pillar_1.6.0 compiler_4.0.5 tools_4.0.5 digest_0.6.25 ## [5] pkgload_1.2.1 jsonlite_1.7.2 evaluate_0.14 lifecycle_1.0.0 ## [9] tibble_3.1.1 pkgconfig_2.0.3 png_0.1-7 rlang_0.4.10 ## [13] DBI_1.1.0 cli_2.4.0 rstudioapi_0.13 crosstalk_1.1.0.1 ## [17] yaml_2.2.1 xfun_0.19 withr_2.4.2 knitr_1.30 ## [21] htmlwidgets_1.5.2 generics_0.1.0 desc_1.3.0 vctrs_0.3.7 ## [25] rprojroot_1.3-2 DT_0.15 tidyselect_1.1.0 glue_1.4.2 ## [29] R6_2.4.1 fansi_0.4.1 rmarkdown_2.6 bookdown_0.18 ## [33] purrr_0.3.4 magrittr_2.0.1 backports_1.1.6 ellipsis_0.3.1 ## [37] htmltools_0.5.0 assertthat_0.2.1 utf8_1.1.4 stringi_1.5.3 ## [41] crayon_1.4.1 "],
["bookdown-quick-start.html", "6 Bookdown: Quick Start 6.1 ‚≠êÔ∏èOverview 6.2 üåéUseful websites 6.3 Creating the bookdown project locally 6.4 Initiate a git repository 6.5 Create a github repository for the book 6.6 Configuring a publishing source for the GitHub Pages site 6.7 Modify _bookdown.yml 6.8 Modify _output.yml 6.9 Modify style.css 6.10 Modify index.Rmd 6.11 Creating bookdown chapters 6.12 Knitting the book 6.13 Errors and warnings", " 6 Bookdown: Quick Start 6.1 ‚≠êÔ∏èOverview Document the process of creating a bookdown book. Think of it as a quick start guide. Complete documentation at: https://bookdown.org/yihui/bookdown/ 6.2 üåéUseful websites Yihui Xie‚Äôs Bookdown book 6.3 Creating the bookdown project locally Start by clicking New Project -&gt; New Directory -&gt; Book project using Bookdown. Add a NOTES file and add it to .gitignore and .Rbuildignore using usethis: usethis::use_build_ignore(\"NOTES\") usethis::use_git_ignore(\"NOTES\") Delete all Rmd files except index.Rmd Create a folder named chapters. Edit the README file. It can say whatever you want it to. For examples, see here: https://github.com/brad-cannell/r4epi https://github.com/brad-cannell/r_notes Use this website to create a creative commons license Add a license file to the project‚Äôs root directory. Here is an example. This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. 6.4 Initiate a git repository You need to do this in order to connect to GitHub, and you need to connect to GitHub before editing some of the books configuration files because you will need to add links to the repository. Type ‚Äúusethis::use_git(message =‚ÄùInitial commit‚Äú)‚Äù in the R console. 6.5 Create a github repository for the book Go to: https://github.com/orgs/brad-cannell/dashboard Click New Name the repository. For example, ‚Äúr_notes‚Äù Optionally, type in a description. For example, ‚ÄúThis is the repository for my R notes bookdown project.‚Äù Make the repository public Don‚Äôt check the boxes for README, .gitignore, or license Click create repository Follow GitHub‚Äôs instructions for pushing the repository to GitHub. At this point, the GitHub repository should be set up. 6.6 Configuring a publishing source for the GitHub Pages site Useful websites: * https://bookdown.org/yihui/bookdown/github.html * https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site In the repository, click on Settings, then pages (on the left sidebar). Change the source to Branch:master, folder = docs 6.7 Modify _bookdown.yml Start with this example and modify as needed book_filename: &quot;R 4 Epidemiology&quot; repo: https://github.com/brad-cannell/r4epi output_dir: docs delete_merged_file: true language: ui: chapter_name: &quot;&quot; new_session: no rmd_subdir: [&quot;chapters&quot;] 6.8 Modify _output.yml Start with this example and modify as needed bookdown::gitbook: css: style.css config: toc: collapse: section scroll_highlight: yes before: | &lt;li&gt;&lt;a href=&quot;./&quot;&gt;R for Epidemiology&lt;/a&gt;&lt;/li&gt; after: | &lt;li&gt;&lt;a href=&quot;https://github.com/rstudio/bookdown&quot; target=&quot;blank&quot;&gt;Published with bookdown&lt;/a&gt;&lt;/li&gt; 6.9 Modify style.css /****************************************************************************** CSS for the R4Epi textbook ******************************************************************************/ /* CSS that came with bookdown */ p.caption { color: #777; margin-top: 10px; } p code { white-space: inherit; } pre { word-break: normal; word-wrap: normal; } pre code { white-space: inherit; } /* Font Styles */ .large-bold { font-size: 2em; font-weight: bold; } .underline { text-decoration: underline; } .red-text { color: red; } .code { color: #0365C0; font-family: &quot;Courier New&quot;, Courier, monospace; } /* Note styles */ .note { -moz-border-radius: 6px; -webkit-border-radius: 6px; background-color: #f0f7fb; border: solid 1px #3498db; border-radius: 6px; line-height: 18px; overflow: hidden; padding: 15px 15px; } .warning { -moz-border-radius: 6px; -webkit-border-radius: 6px; background-color: #FEFBEA; border: solid 1px #F2E394; border-radius: 6px; line-height: 18px; overflow: hidden; padding: 15px 15px; } 6.10 Modify index.Rmd Delete all the example text. Modify the YAML header. Here is an example: --- title: &quot;R for Epidemiology&quot; author: &quot;Brad Cannell&quot; date: &quot;2021-07-11&quot; site: bookdown::bookdown_site documentclass: book bibliography: [book.bib, packages.bib] link-citations: yes csl: ama.csl github-repo: brad-cannell/r4epi url: &#39;https://brad-cannell.github.io/r4epi/&#39; description: &quot;This is the textbook for Brad Cannell&#39;s Introduction to R Programming for Epidemiologic Research course.&quot; --- The csl: ama.csl part of the YAML header allows you to change the bibliography style. You can find a list of styles here: https://github.com/citation-style-language/styles For AMA, which I frequently want, you can just copy and paste from your templates folder. First-level headers become chapters. Use {-} at the end of the header if you don‚Äôt want the chapter to be numbered. For example # Welcome {-} 6.11 Creating bookdown chapters Each Rmd file is a chapter. Chapters can be broken up into parts. To do so, create a subdirectory for each part inside the chapters folder. The individual Rmd files (i.e.¬†chapters) go inside these folders. I typically prefix each folder name that aligns with the order the parts should appear in. For example 01_getting_started, 02_best_practices, etc. The first Rmd file in each part folder should have only this content: # (PART) Getting Started {-} &lt;!-- This Rmd just creates a part heading in the table of contents --&gt; Name the file 00_part_&lt;part_name&gt; All subsequent content chapters should start with a first level heading only ‚Äì No YAML. For example, # R scripts. For more on chapter content, see Bookdown template chapter 6.12 Knitting the book Click on the build tab, then click ‚ÄúBuild Book.‚Äù Commit the changes and push to GitHub. After a few minutes, you should see the GitHub pages version working. 6.13 Errors and warnings Output created: docs/index.html Warning message: In split_chapters(output, gitbook_page, number_sections, split_by, : You have 3 Rmd input file(s) but only 2 first-level heading(s). Did you forget first-level headings in certain Rmd files? Solution: Just ignore this. tlmgr: Local TeX Live (2019) is older than remote repository (2020). Solution: Run tinytex::reinstall_tinytex() ! LaTeX Error: Cannot determine size of graphic in img/getting_started/01_install_r/download_r_mac.gif (no BoundingBox). Solution: This is from trying to make a pdf document with a gif in it. LaTeX doesn‚Äôt support gifs. Just make a just build the book in gitbook format. 2: The label(s) fig:source1 not found. Solution: Figures must have a caption in order to cross reference them. [WARNING] Citeproc: citation examples not found Solution: I haven‚Äôt found a solution yet, but so far the warning seems ignorable. ## R version 4.0.5 (2021-03-31) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] tidyr_1.1.3 testthat_3.0.2 stringr_1.4.0 dplyr_1.0.6 ## ## loaded via a namespace (and not attached): ## [1] pillar_1.6.0 compiler_4.0.5 tools_4.0.5 digest_0.6.25 ## [5] pkgload_1.2.1 jsonlite_1.7.2 evaluate_0.14 lifecycle_1.0.0 ## [9] tibble_3.1.1 pkgconfig_2.0.3 png_0.1-7 rlang_0.4.10 ## [13] DBI_1.1.0 cli_2.4.0 rstudioapi_0.13 crosstalk_1.1.0.1 ## [17] yaml_2.2.1 xfun_0.19 withr_2.4.2 knitr_1.30 ## [21] htmlwidgets_1.5.2 generics_0.1.0 desc_1.3.0 vctrs_0.3.7 ## [25] rprojroot_1.3-2 DT_0.15 tidyselect_1.1.0 glue_1.4.2 ## [29] R6_2.4.1 fansi_0.4.1 rmarkdown_2.6 bookdown_0.18 ## [33] purrr_0.3.4 magrittr_2.0.1 backports_1.1.6 ellipsis_0.3.1 ## [37] htmltools_0.5.0 assertthat_0.2.1 utf8_1.1.4 stringi_1.5.3 ## [41] crayon_1.4.1 1. Xie Y. Bookdown: Authoring books and technical documents with R markdown. Published online July 2021. "]
]
