[
["index.html", "R Notes Welcome Organization", " R Notes Brad Cannell 2021-07-10 Welcome Welcome to Brad Cannell’s R Notes! This is a Bookdown version Brad Cannell’s R Notes. I’m really making this “book” for me, but even better if you find it useful too! Why am I doing this (as opposed to just keeping notes locally)? Better organized (e.g., chapter structure and search) Easy access – just click on the bookmark on web browser Practice using bookdown Might help with R4Epi – This can be sort of a sandbox for developing before I add things to R4Epi. This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License. Organization These notes are loosely organized into the following parts: Programming: Things that have to do with optimizing code, writing functions, creating packages, and repeated operations. Working with external files: Things like data transfer, web scraping, PDF scraping, and using Officer to scrape Microsoft Office documents. Data management: Things related to manipulating/transforming/filtering data that is already in R. Data analysis: Things related to creating numerical summaries of data. Data visualization: Things related to graphical summaries of data. A lot of this will be about ggplot. Presenting results: Things related to making numerical and graphical summaries accessible outside of R. This can include webpages, static dashboards, PDF documents, Microsoft Office documents, ect. This does not include Shiny apps. Shiny: Things related to using Shiny to create interactive web apps. Eventually, this may need its own Bookdown project. "],
["arranging-columns-with-across.html", "1 Arranging Columns with Across 1.1 Solution by LMc:", " 1 Arranging Columns with Across I’m trying to arrange calculated columns immediately after source columns when using dplyr column-wise operations. https://stackoverflow.com/questions/67076974/arrange-calculated-columns-immediately-after-source-columns-when-using-dplyr-col/67077122#67077122 https://community.rstudio.com/t/arrange-calculated-columns-immediately-after-source-columns-when-using-dplyr-column-wise-operations/101726 library(dplyr) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union Example data df &lt;- tibble( id = c(1, 2, 2), id_row = c(1, 1, 2), name_first = c(&quot;John&quot;, &quot;Jane&quot;, &quot;Jane&quot;), city = c(&quot;NY&quot;, &quot;DAL&quot;, &quot;HOU&quot;), x = c(0, 1, 0) ) df ## # A tibble: 3 x 5 ## id id_row name_first city x ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 1 John NY 0 ## 2 2 1 Jane DAL 1 ## 3 2 2 Jane HOU 0 Within ID, the values of name_first and city should be constant. The values for id_row and x need not be constant. I want to test for and inspect differing values of name_first and city within-id. One convenient way to do this is with mutate() and across(). df %&gt;% group_by(id) %&gt;% mutate( across( .cols = c(name_first, city), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) ## # A tibble: 3 x 7 ## # Groups: id [2] ## id id_row name_first city x name_first_all_match city_all_match ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;lgl&gt; &lt;lgl&gt; ## 1 1 1 John NY 0 TRUE TRUE ## 2 2 1 Jane DAL 1 TRUE FALSE ## 3 2 2 Jane HOU 0 TRUE FALSE The issue is that the “all_match” (calculated) columns are added to the far right of the data frame rather than immediately after their source column. This makes it difficult to visually inspect differing values for the columns of interest. Of course, in this small data frame, we could easily rearrange the columns using select(). df %&gt;% group_by(id) %&gt;% mutate( across( .cols = c(name_first, city), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) %&gt;% select(id, id_row, starts_with(&quot;name_first&quot;), starts_with(&quot;city&quot;), x) ## # A tibble: 3 x 7 ## # Groups: id [2] ## id id_row name_first name_first_all_match city city_all_match x ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 1 1 John TRUE NY TRUE 0 ## 2 2 1 Jane TRUE DAL FALSE 1 ## 3 2 2 Jane TRUE HOU FALSE 0 The issue with that approach is that it quickly becomes pretty cumbersome with more columns. A more tractable approach would be to sort the names alphabetically… df %&gt;% group_by(id) %&gt;% mutate( across( .cols = c(name_first, city), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) %&gt;% select(sort(names(.))) ## # A tibble: 3 x 7 ## # Groups: id [2] ## city city_all_match id id_row name_first name_first_all_match x ## &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 NY TRUE 1 1 John TRUE 0 ## 2 DAL FALSE 2 1 Jane TRUE 1 ## 3 HOU FALSE 2 2 Jane TRUE 0 …but in my situation I need to preserve the original column order. I’d also prefer to stick with Tidyverse solutions if possible. Any ideas are appreciated! 1.1 Solution by LMc: # Use select because it allows for more complex column selection when working # with more complex data frames. inspect_cols &lt;- df %&gt;% select(name_first, city) %&gt;% names() # Set column order ahead of time. This assumes that you know the names of each # of the columns you want to inspect col_order &lt;- purrr::map( names(df), function(x) { if (x %in% inspect_cols) { c(x, paste0(x, &quot;_all_match&quot;)) } else { x } } ) %&gt;% unlist() df %&gt;% group_by(id) %&gt;% mutate( across( .cols = all_of(inspect_cols), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) %&gt;% dplyr::select(all_of(col_order)) ## # A tibble: 3 x 7 ## # Groups: id [2] ## id id_row name_first name_first_all_match city city_all_match x ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 1 1 John TRUE NY TRUE 0 ## 2 2 1 Jane TRUE DAL FALSE 1 ## 3 2 2 Jane TRUE HOU FALSE 0 "],
["bookdown.html", "2 Making a Bookdown Book Project 2.1 Creating the bookdown project locally 2.2 Initiate a git repository 2.3 Create a github repository for the book 2.4 Configuring a publishing source for the GitHub Pages site 2.5 Modify _bookdown.yml 2.6 Modify _output.yml 2.7 Modify style.css 2.8 Modify index.Rmd 2.9 Creating bookdown chapters 2.10 Knitting the book 2.11 Errors and warnings", " 2 Making a Bookdown Book Project Document the process of creating a bookdown book. Think of it as a quickstart guide. Complete documentation at: https://bookdown.org/yihui/bookdown/ 2.1 Creating the bookdown project locally Start by clicking New Project -&gt; New Directory -&gt; Book project using Bookdown. Add a NOTES file and add it to .gitignore and .Rbuildignore using usethis: usethis::use_build_ignore(\"NOTES\") usethis::use_git_ignore(\"NOTES\") Delete all Rmd files except index.Rmd Create a folder named chapters. Edit the README file. It can say whatever you want it to. For examples, see here: https://github.com/brad-cannell/r4epi https://github.com/brad-cannell/r_notes Use this website to create a creative commons license Add a license file to the project’s root directory. Here is an example. This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. 2.2 Initiate a git repository You need to do this in order to connect to GitHub, and you need to connect to GitHub before editing some of the books configuration files because you will need to add links to the repository. Type “usethis::use_git(message =”Initial commit“)” in the R console. 2.3 Create a github repository for the book Go to: https://github.com/orgs/brad-cannell/dashboard Click New Name the repository. For example, “r_notes” Optionally, type in a description. For example, “This is the repository for my R notes bookdown project.” Make the repository public Don’t check the boxes for README, .gitignore, or license Click create repository Follow GitHub’s instructions for pushing the repository to GitHub. At this point, the GitHub repository should be set up. 2.4 Configuring a publishing source for the GitHub Pages site Useful websites: * https://bookdown.org/yihui/bookdown/github.html * https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site In the repository, click on Settings, then pages (on the left sidebar). Change the source to Branch:master, folder = docs 2.5 Modify _bookdown.yml Start with this example and modify as needed book_filename: &quot;R 4 Epidemiology&quot; repo: https://github.com/brad-cannell/r4epi output_dir: docs delete_merged_file: true language: ui: chapter_name: &quot;&quot; new_session: no rmd_subdir: [&quot;chapters&quot;] 2.6 Modify _output.yml Start with this example and modify as needed bookdown::gitbook: css: style.css config: toc: collapse: section scroll_highlight: yes before: | &lt;li&gt;&lt;a href=&quot;./&quot;&gt;R for Epidemiology&lt;/a&gt;&lt;/li&gt; after: | &lt;li&gt;&lt;a href=&quot;https://github.com/rstudio/bookdown&quot; target=&quot;blank&quot;&gt;Published with bookdown&lt;/a&gt;&lt;/li&gt; 2.7 Modify style.css /****************************************************************************** CSS for the R4Epi textbook ******************************************************************************/ /* CSS that came with bookdown */ p.caption { color: #777; margin-top: 10px; } p code { white-space: inherit; } pre { word-break: normal; word-wrap: normal; } pre code { white-space: inherit; } /* Font Styles */ .large-bold { font-size: 2em; font-weight: bold; } .underline { text-decoration: underline; } .red-text { color: red; } .code { color: #0365C0; font-family: &quot;Courier New&quot;, Courier, monospace; } /* Note styles */ .note { -moz-border-radius: 6px; -webkit-border-radius: 6px; background-color: #f0f7fb; border: solid 1px #3498db; border-radius: 6px; line-height: 18px; overflow: hidden; padding: 15px 15px; } .warning { -moz-border-radius: 6px; -webkit-border-radius: 6px; background-color: #FEFBEA; border: solid 1px #F2E394; border-radius: 6px; line-height: 18px; overflow: hidden; padding: 15px 15px; } 2.8 Modify index.Rmd Delete all the example text. Modify the YAML header. Here is an example: --- title: &quot;R for Epidemiology&quot; author: &quot;Brad Cannell&quot; date: &quot;2021-07-10&quot; site: bookdown::bookdown_site documentclass: book bibliography: [book.bib, packages.bib] link-citations: yes csl: ama.csl github-repo: brad-cannell/r4epi url: &#39;https://brad-cannell.github.io/r4epi/&#39; description: &quot;This is the textbook for Brad Cannell&#39;s Introduction to R Programming for Epidemiologic Research course.&quot; --- The csl: ama.csl part of the YAML header allows you to change the bibliography style. You can find a list of styles here: https://github.com/citation-style-language/styles For AMA, which I frequently want, you can just copy and paste from your templates folder. First-level headers become chapters. Use {-} at the end of the header if you don’t want the chapter to be numbered. For example # Welcome {-} 2.9 Creating bookdown chapters Each Rmd file is a chapter. Chapters can be broken up into parts. To do so, create a subdirectory for each part inside the chapters folder. The individual Rmd files (i.e. chapters) go inside these folders. I typically prefix each folder name that aligns with the order the parts should appear in. For example 01_getting_started, 02_best_practices, etc. The first Rmd file in each part folder should have only this content: # (PART) Getting Started {-} &lt;!-- This Rmd just creates a part heading in the table of contents --&gt; Name the file 00_part_&lt;part_name&gt; All subsequent content chapters should start with a first level heading only – No YAML. For example, # R scripts. For more on chapter content, see Bookdown template chapter 2.10 Knitting the book Click on the build tab, then click “Build Book.” Commit the changes and push to GitHub. After a few minutes, you should see the GitHub pages version working. 2.11 Errors and warnings Output created: docs/index.html Warning message: In split_chapters(output, gitbook_page, number_sections, split_by, : You have 3 Rmd input file(s) but only 2 first-level heading(s). Did you forget first-level headings in certain Rmd files? Just ignore this. tlmgr: Local TeX Live (2019) is older than remote repository (2020). Run tinytex::reinstall_tinytex() ! LaTeX Error: Cannot determine size of graphic in img/getting_started/01_install_r/download_r_mac.gif (no BoundingBox). This is from trying to make a pdf document with a gif in it. LaTeX doesn’t support gifs. Just make a just build the book in gitbook format. 2: The label(s) fig:source1 not found. Figures must have a caption in order to cross reference them. "],
["bookdown-template.html", "3 Bookdown Template Chapter 3.1 Chapter overview 3.2 Motivating example 3.3 Body 3.4 Additional resources: function to check 3.5 Key terms : function to add to appendix 3.6 Final example code : function to add to appendix", " 3 Bookdown Template Chapter Chapters should pretty much just be about one distinct idea. Give some more thought to defining this more clearly. I think it will be important as I start incorporating the epidemiology stuff. Also, it should help with making things easier to find. Heading guidelines: * Useful for finding what you are looking for. 3.1 Chapter overview Very brief description of what they can expect. By the end of this chapter, we will be able to: 1. Placeholder 2. Placeholder Awesome if you can start with a funny picture or a cool quote. 3.2 Motivating example Recall that one of my [goals][Goals] is “To start each concept with the end result and then deconstruct how we arrived at that result, where possible. I find that it is easier for me to understand new concepts when learning them as a component of a final product.” We won’t necessarily do this for every chapter (e.g., installing R and RStudio) if doing so doesn’t make sense. 3.3 Body 3.3.1 Language Use “we” and “our” language. Make it friendly and informal. 3.3.2 Text conventions Bold text is used to highlight important terms, file names, and file extensions. Not every bolded term needs to go in the glossary. Use your best judgment. Highlighted inline code is used to emphasize small sections of R code and program elements such as variable or function names. 3.3.3 Special sections 🗒Side Note: This is an example note. ⚠️Warning: This is an example warning 3.3.4 Images Don’t forget to add “echo=FALSE” to the code chunk. To cross-reference figures. Name the figure in the code chunk (e.g., ```{r console, echo=FALSE}). Then add ?? to the text. The figure reference should go outside of punctuation. With a space. Every figure doesn’t need a caption. It can actually make things look sloppy. The only figures that NEED a caption are those figures that are cross-referenced. Because of the way the files are structured, You won’t be able to see pictures directly in the Rmd files without including “../../” on the front the file paths. However, having “../../” on the front of the file paths prevents the book from building appropriately. 3.3.5 Code blocks 👆Here’s what we did above: Use unordered lists for these sections. It allows for nested lists and code. Add line breaks in between the bullets. &lt;ul&gt; &lt;li&gt;You can type `?mutate` into your R console to view the help documentation for this function and follow along with the explanation below./li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;/ul&gt; 3.3.6 Cross-references To cross-reference figures. Name the figure in the code chunk (e.g., ```{r console, echo=FALSE}). Then add ?? to the text. The figure reference should go outside of punctuation. With a space. To cross-reference chapters: https://happygitwithr.com/bookdown-cheat-sheet.html Add CSS id the behind the header # How to use odds ratios {#ors} Refer to it like this: The the chapter on odds ratios Capitalize first letter when cross-referencing the chapter by name – the Let’s get programming chapter. Written as “the [Let’s get programming] chapter.” Don’t capitalize the first letter when describing the contents of a chapter in the cross-reference – the chapter on exporting data. Written as “We were first introduced to [factor vectors][Factor vectors] in the chapter..” 3.3.7 Previewing the chapter Supposed to use “bookdown::preview_chapter(”03_what_is_r.Rmd“)” to preview chapters. I can’t get this to work for some reason. I created a new project that I can use a test environment. It’s in “R4Epi chapters in progress/bookdown_test_environment.” You have to build the whole book, but it should go fast because I don’t have all the chapters. 3.3.8 Miscelaneous Make liberal use of emojis. Start making videos to supplement content. 3.4 Additional resources: function to check Links to cheat sheets, websites, and videos. 3.5 Key terms : function to add to appendix Key terms covered in this chapter. 3.6 Final example code : function to add to appendix Succinct recap of the code used in this chapter without any explanation of how it works. You can use this as a quick reference later. We won’t necessarily do this for every chapter (e.g., installing R and RStudio) if doing so doesn’t make sense. "]
]
