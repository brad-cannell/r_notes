[["index.html", "R Notes Welcome Organization", " R Notes Brad Cannell 2022-03-30 Welcome Welcome to Brad Cannell‚Äôs R Notes! This is a Bookdown version Brad Cannell‚Äôs R Notes. I‚Äôm really making this ‚Äúbook‚Äù for me, but even better if you find it useful too! Why am I doing this (as opposed to just keeping notes locally)? Better organized (e.g., chapter structure and search) Easy access ‚Äì just click on the bookmark on web browser Practice using bookdown Might help with R4Epi ‚Äì This can be sort of a sandbox for developing before I add things to R4Epi. This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License. Organization These notes are loosely organized into the following parts: Programming: Things that have to do with optimizing code, writing functions, creating packages, and repeated operations. Working with external files: Things like data transfer, web scraping, PDF scraping, and using Officer to scrape Microsoft Office documents. Data management: Things related to manipulating/transforming/filtering data that is already in R. Data analysis: Things related to creating numerical summaries of data. Data visualization: Things related to graphical summaries of data. A lot of this will be about ggplot. Presenting results: Things related to making numerical and graphical summaries accessible outside of R. This can include webpages, static dashboards, PDF documents, Microsoft Office documents, ect. This does not include Shiny apps. Shiny: Things related to using Shiny to create interactive web apps. Eventually, this may need its own Bookdown project. "],["my-package-notes.html", "1 Packages: Quick Start 1.1 ‚≠êÔ∏èOverview 1.2 üåéUseful websites 1.3 Quick Process 1.4 Before creating the package 1.5 Step 1: Create the package project 1.6 Step 2: Add a NOTES file 1.7 Step 3: Add license 1.8 Step 4: Modify the description file 1.9 Step 5: Add README 1.10 Step 6: Add Git 1.11 Step 7: Connect to GitHub 1.12 Step 8: Adding content to the package 1.13 Step 9: Creating unit tests 1.14 Step 10: Vignettes 1.15 Submitting to CRAN 1.16 Other random notes 1.17 Errors, warnings, notes", " 1 Packages: Quick Start 1.1 ‚≠êÔ∏èOverview This chapter is my quick start guide for creating packages. I‚Äôm going to walk through the process I used to create the codebook package, plus add some extra notes that have been helpful along the way when creating other packages. This is not meant to be a comprehensive guide to creating packages. Hadley Wickham and Jenny Bryan‚Äôs R Packages book already exists for that purpose. This is supposed to just be a quick overview and some notes to remember in the future. 1.2 üåéUseful websites Hadley Wickham and Jenny Bryan‚Äôs R Packages book devtools package usethis package 1.3 Quick Process Create new project/package directory with usethis::create_package(). Restart. Add a NOTES file. Add license with usethis::use_mit_license(). Modify the description file. Add README with usethis::use_readme_rmd() and devtools::build_readme(). Add Git with usethis::use_git(). Restart. Connect to GitHub with usethis::use_github(). Add functions to the package. Creating unit tests. Creating vignettes. Completing a version of the package and (optionally) submitting to CRAN. 1.4 Before creating the package Give the package a new (Hadley‚Äôs naming strategies) 1.5 Step 1: Create the package project Call create_package() to initialize a new package in a directory on your computer (and create the directory, if necessary). usethis::create_package(&quot;/Users/bradcannell/Dropbox/R/Packages/codebook&quot;) The function will do all of this: 1.6 Step 2: Add a NOTES file The R Packages book doesn‚Äôt mention creating a NOTES file, but it‚Äôs something I like to do. I use the notes file to help me remember little things related to the development of the package that aren‚Äôt meant to be shared publicly. Create a new text file, add the following template to the top of the file, and fill it out appropriately. # ============================================================================= # codebook notes # ============================================================================= Use NOTES for notes, but not tasks. Why or how, but not what. ... Submission Notes: ----------------- * Useful website: http://r-pkgs.had.co.nz/release.html * Update README before submission. It should roughly match the examples in the roxygen documentation. - Update README.Rmd, not README.md. - Knit README.Rmd after making changes. This will automatically update README.md * Update vignettes using devtools::document() * Update news.md. Here&#39;s dplyr&#39;s (https://raw.githubusercontent.com/tidyverse/dplyr/master/NEWS.md) * If you were on a development branch, merge with main branch. * Use devtools::check() * Use devtools::check_win_devel() to test the package on Windows * Update cran-comments. - If this is a resubmission, add a bulleted list of changes made under ## Resubmission. * Submit with devtools::release() * After the package is accepted, do this stuff: http://r-pkgs.had.co.nz/release.html#post-release Save as NOTES Add to gitignore. usethis::use_git_ignore(&quot;NOTES&quot;) Add to buildignore. usethis::use_build_ignore(&quot;NOTES&quot;) 1.7 Step 3: Add license usethis::use_mit_license() The function will do all of this: You will still need to open the new LICENSE file and change COPYRIGHT HOLDER: to ‚ÄúBrad Cannell.‚Äù You can also look in the templates folder for more elaborate licenses. 1.8 Step 4: Modify the description file Open the description file and make some changes. Here is a minimal example from codebook: Package: codebook Title: Create Codebooks From Data Frames Version: 0.0.0.9000 Authors@R: person(&quot;Brad&quot;, &quot;Cannell&quot;, email = &quot;brad.cannell@gmail.com&quot;, role = c(&quot;aut&quot;, &quot;cre&quot;, &quot;cph&quot;)) Maintainer: Brad Cannell &lt;brad.cannell@gmail.com&gt; Description: The codebook package is intended to make it easy for users to create codebooks (i.e. data dictionaries) directly from data frame. License: MIT + file LICENSE Encoding: UTF-8 Roxygen: list(markdown = TRUE) RoxygenNote: 7.1.2 Here is a slightly more elaborate example from meantables: Package: meantables Type: Package Title: Make Quick Descriptive Tables for Continuous Variables Description: Quickly make tables of descriptive statistics (i.e., counts, means, confidence intervals) for continuous variables. This package is designed to work in a Tidyverse pipeline, and consideration has been given to get results from R to &#39;Microsoft Word&#39; ¬Æ with minimal pain. Version: 0.1.2 Authors@R: person(&quot;Brad&quot;, &quot;Cannell&quot;, email = &quot;brad.cannell@gmail.com&quot;, role = c(&quot;aut&quot;, &quot;cre&quot;, &quot;cph&quot;)) Maintainer: Brad Cannell &lt;brad.cannell@gmail.com&gt; License: MIT + file LICENSE Encoding: UTF-8 Suggests: knitr, rmarkdown, testthat VignetteBuilder: knitr RoxygenNote: 7.1.2 Imports: dplyr, tibble, rlang, stringr Remember that Title Case is required for the Title Do Not use library(package) in R scripts - instead add package dependencies to the Imports or Remotes field in the DESCRIPTION. Do use library(package) in vignette .Rmd files, and DO NOT add these package dependencies to the DESCRIPTION If we already added R scripts to the package directory, we need to open them now and make sure to remove all the library() functions. When adding CRAN packages to imports, you must first make sure they are installed. Instructions for installing dependencies from sources other than CRAN are given here. 1.9 Step 5: Add README In R Packages, Chapter 2: The Whole Game, Hadley and Jenny basically create all the package code before connecting their project to their remote repository on GitHub. I actually like to connect my project to GitHub before I write any code. I do this for several reasons, one of which is that I can start using GitHub‚Äôs issues and project boards right away to take notes and plan package development. And, I like to create the README file before I initialize Git or connect with GitHub. That‚Äôs what we will do in this step. usethis::use_readme_rmd() I generally just copy the Description section from the DESCRIPTION file and use it replace the ‚ÄúThe goal of codebook is to ‚Ä¶‚Äù sentence that that use_readme_rmd() creates by default. Comment out all of the code chunks that use_readme_rmd() creates by default. Add installation instructions to README. Although we haven‚Äôt created the repository yet, we know what it‚Äôs going to be called. The README file already contains the following lines: We just need to replace it with: Make sure to set the eval=FALSE code chunk option. # install.packages(&quot;devtools&quot;) devtools::install_github(&quot;brad-cannell/codebook&quot;) Just replace ‚Äúcodebook‚Äù in the path above with the name of the repository for the package project you are currently working on. You can leave everything else as-is for now. Render README Don‚Äôt forget to render it to make README.md! The pre-commit hook should remind you if you try to commit README.Rmd, but not README.md, and also when README.md appears to be out-of-date. The very best way to render README.Rmd is with build_readme(), because it takes care to render with the most current version of your package, i.e.¬†it installs a temporary copy from the current source. devtools::build_readme() 1.10 Step 6: Add Git usethis::use_git() Go ahead and commit all the files in the directory so far, and agree to restart R. 1.11 Step 7: Connect to GitHub Caution So far, using this method will add the repo to my personal account (mbcann01), not to my organization. You can either: Create the repo manually on GitHub first, then follow GitHub‚Äôs instructions for syncing. After you create the repo on mbcann01, transfer ownership to brad-cannell in the Settings menu. usethis::use_github() The function will do all of this: Go ahead and agree to commit. 1.12 Step 8: Adding content to the package At this point, we have an (empty) working package, which can be downloaded from our GitHub repository. Now, we just need to add the functions, data, and documentation that will make it actually worth using. 1.12.1 Working with R scripts Don‚Äôt write or alter your functions in the console as you would in a typical interactive session. If you do, it‚Äôs easy for the version you‚Äôre using interactively and the version you are actually including in your package to get out of sync. Instead, load the package. Click the build tab &gt; More &gt; Load All, or devtools::load_all, or shift + cmd + L 1.12.2 Adding help pages to functions Help pages are contained in .Rd files saved in the man folder. It‚Äôs best practice to use roxygen with your script files to automatically generate the .Rd files. Doing so helps to keep your scripts and your help pages in sync. To use roxygen: Make sure the R script you want to document is active. Click Project Options &gt; Build Tools &gt; Generate documentation with Roxygen Place your cursor in the function you want to document Insert a Roxygen skeleton with the keyboard shortcut cmd + alt + shift + R After you‚Äôve filled in the skeleton click Build &gt; More &gt; Document, or use the keyboard shortcut shift + cmd + D. RStudio will then automatically generate the help pages in your man folder. Click the build tab &gt; More &gt; Load All, or devtools::load_all, or shift + cmd + L Check your help page by typing ?function_name in the console. 1.12.3 Example roxygen header #&#39; @title Compact Table of Summary Statistics #&#39; #&#39; @description Based on Stata&#39;s &quot;tabstat&quot; command. &quot;tabstat displays summary #&#39; statistics for a series of numeric variables in one table. It allows you #&#39; to specify the list of statistics to be displayed. Statistics can be #&#39; calculated (conditioned on) another variable. tabstat allows substantial #&#39; flexibility in terms of the statistics presented and the format of the #&#39; table&quot; (Stata, 2016). #&#39; #&#39; @param x A continuous variable. #&#39; @param digits Rounds the values returned to the specified number of decimal #&#39; places (default 3). #&#39; @param stats Return specified statistics. Options include: #&#39; \\describe{ #&#39; \\item{n}{Count of nonmissing values of x} #&#39; \\item{nmiss}{Count of missing values of x} #&#39; \\item{ci}{95 percent confidence interval for the mean of x} #&#39; \\item{sum}{Sum of x} #&#39; \\item{max}{Maximum value of x} #&#39; \\item{min}{Minimum value of x} #&#39; \\item{range}{(Maximum value of x) - (minimum value of x)} #&#39; \\item{sd}{Standard deviation of x} #&#39; \\item{var}{Variance of x} #&#39; \\item{cv}{Coefficient of variation (sd / mean) of x} #&#39; \\item{sem}{Standard error of the mean of x} #&#39; \\item{skew}{Skewness of x} #&#39; \\item{kurt}{Kurtosis of x} #&#39; \\item{p1}{1st percentile of x} #&#39; \\item{p5}{5th percentile of x} #&#39; \\item{p10}{10th percentile of x} #&#39; \\item{p25}{25th percentile of x} #&#39; \\item{p50}{Median value of x} #&#39; \\item{median}{Median value of x} #&#39; \\item{p75}{75th percentile of x} #&#39; \\item{p90}{90th percentile of x} #&#39; \\item{p95}{95th percentile of x} #&#39; \\item{p99}{99th percentile of x} #&#39; \\item{iqr}{Interquartile range (p75 - p25)} #&#39; \\item{q}{Equivalent to specifying p25 p50 p75} #&#39; } #&#39; #&#39; @return A data frame. By default, the data frame contains the variable name #&#39; and mean. #&#39; @export #&#39; #&#39; @references Stata 14 help for tabstat #&#39; \\url{http://www.stata.com/help.cgi?tabstat} #&#39; #&#39; @examples #&#39; data(mtcars) #&#39; #&#39; # Single univariate analysis with Defaults #&#39; tabstat(mtcars$mpg) #&#39; #&#39; # Single univariate analysis with all stats #&#39; tabstat(mtcars$mpg, stats = c(&quot;n&quot;, &quot;nmiss&quot;, &quot;ci&quot;, &quot;sum&quot;, &quot;max&quot;, &quot;min&quot;, #&#39; &quot;range&quot;, &quot;sd&quot;, &quot;var&quot;, &quot;cv&quot;, &quot;sem&quot;, &quot;skew&quot;, &quot;kurt&quot;, &quot;p1&quot;, &quot;p5&quot;, &quot;p10&quot;, #&#39; &quot;p25&quot;, &quot;p50&quot;, &quot;median&quot;, &quot;p75&quot;, &quot;p90&quot;, &quot;p95&quot;, &quot;p99&quot;, &quot;iqr&quot;, &quot;q&quot;)) 1.12.4 Don‚Äôt run the examples If you don‚Äôt want the examples to actually run, You can surround the example code with like this: #&#39; @examples #&#39; \\dontrun{ #&#39; library(dplyr) #&#39; library(meantables) #&#39; #&#39; data(mtcars) #&#39; #&#39; # Overall mean table with defaults #&#39; #&#39; mtcars %&gt;% #&#39; mean_table(mpg) #&#39; #&#39; # A tibble: 1 x 9 #&#39; response_var n mean sd sem lcl ucl min max #&#39; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; #&#39; 1 mpg 32 20.1 6.03 1.07 17.9 22.3 10.4 33.9 #&#39; } 1.12.5 Keyboard shortcut for inserting roxygen #‚Äô comment There doesn‚Äôt appear to be a keyboard shortcut, but this StackOverflow post shows a good method for using RStudio‚Äôs find and replace. 1.12.6 Adding and documenting data The explanation in the R Packages book is good, short, and easy to follow. 1.12.7 Documenting Package You can use roxygen to provide a help page for your package as a whole. As described in section 10.6 of R Packages,1 You can use roxygen to provide a help page for your package as a whole. This is accessed with package?foo, and can be used to describe the most important components of your package. It‚Äôs a useful supplement to vignettes, as described in the next chapter. There‚Äôs no object that corresponds to a package, so you need to document NULL, and then manually label it with @docType package and @name &lt;package-name&gt;. This is also an excellent place to use the @section tag to divide up page into useful categories. I usually put this documentation in a file called &lt;package-name&gt;.R. It‚Äôs also a good place to put the package level import statements that you‚Äôll learn about in imports. #&#39; foo: A package for computating the notorious bar statistic #&#39; #&#39; The foo package provides three categories of important functions: #&#39; foo, bar and baz. #&#39; #&#39; @section Foo functions: #&#39; The foo functions ... #&#39; #&#39; @docType package #&#39; @name foo NULL 1.13 Step 9: Creating unit tests Testing is an important part of programming. For detailed information on testing see the appropriate testing chapter in R Packages.1 Get started with devtools::use_testthat(). Create test file. Must be in tests/testhat. File name should start with test_ and the function name. For example, test_check_catvars. Modify your code or tests Test your package with Ctrl/Cmd + Shift + T or devtools::test(). Repeat until all tests pass. 1.14 Step 10: Vignettes There are some great vignette resources on the internet: Chapter on vignettes in Hadley‚Äôs Package book Leisch‚Äôs creating R packages tutorial Flight‚Äôs article on creating an analysis as a package and vignette 1.14.1 To create a vignette: run usethis::use_vignette(\"my-vignette\") Open vignettes/my-vignette.Rmd Create the vignette Unlike R scripts, install and load packages directly in the vignettes. Knit the vignette - The default action will be to create a version of the vignette that can be viewed in RStudio. However, devtools::install_github() (and friends) will not build vignettes by default because they‚Äôre time consuming and may require additional packages. So, in order to be able to view the vignette in RStudio, you must use vignettes = TRUE, e.g., devtools::install_github(‚Äúbrad-cannell/bfuncs,‚Äù build_vignettes = TRUE) instead. Use devtools::build_vignettes() to create an html version of the vignette in inst/doc that you can provide a link to on your Github README page. By default, these folders will be added to .gitignore. Remove them from .gitignore to be able to view/use them on Github. Create a rawgit version of the html vignette file, and providea link to it on README. use use devtools::build() to create a package bundle with the vignettes included. RStudio‚Äôs ‚ÄúBuild &amp; reload‚Äù does not build vignettes to save time. When you add or update vignettes, push to Github again. 1.14.2 Vignette Notes: This builds the vignettes, and is probably fine for a regular package of functions. However, when using packages as a means for reproducible, self-contained analysis projects, the vignettes have greater importance, and by default are not easily accessible. Need to find a way to make the vignettes more ‚Äúfront and center‚Äù Create a help page for the entire package that includes links to the vignettes? Include links to the README.md file and upload to GitHub (with the data sets excluded)? Remember to use system.file() when reading in data inside a code chunk. If you have trouble getting it to work, try build &amp; reload. To save a data frame to data/ inside a vignette, you can use the rprojroot package. use rprojroot::find_root(\"DESCRIPTION\") 1.14.3 Pkgdown I haven‚Äôt tried the pkgdown package yet, but I think it is essentially a collection supercharged vignettes for your package. I‚Äôd like to try it soon. 1.15 Submitting to CRAN You can also do this stuff when you complete a ‚Äúversion‚Äù of the package even if you aren‚Äôt submitting it to CRAN. Useful website: http://r-pkgs.had.co.nz/release.html Update README before submission. It should roughly match the examples in the roxygen documentation. Update README.Rmd, not README.md. Knit README.Rmd after making changes. This will automatically update README.md Update documentation/vignettes using devtools::document() Update news.md. Here‚Äôs dplyr‚Äôs: https://raw.githubusercontent.com/tidyverse/dplyr/master/NEWS.md If you were on a development branch, merge with main branch. Use devtools::check() Use devtools::check_win_devel() to test the package on Windows Update cran-comments. If this is a resubmission, add a bulleted list of changes made under ## Resubmission. Submit with devtools::release() After the package is accepted, do this stuff: http://r-pkgs.had.co.nz/release.html#post-release 1.16 Other random notes 1.16.1 Get rid of .DS_Store The .DS_Store file can be an annoyance when working with Git on MacOS. Here is a link to instructions for removing .DS_Store from your repository. Do it early and never worry about it again. In the terminal, run the following code from the root directory: # Remove existing files from the repository: find . -name &quot;*.DS_Store&quot; -type f -exec git-rm {} \\; # Add .DS_Store to .gitignore echo .DS_Store &gt;&gt; .gitignore # Commit the file to the repo git add .gitignore git commit -m &#39;.DS_Store banished!&#39; 1.17 Errors, warnings, notes Below are some common errors, warnings and notes I‚Äôve encountered during build tests. W checking for unstated dependencies in examples ‚Ä¶ ‚Äòlibrary‚Äô or ‚Äòrequire‚Äô call not declared from: ‚Äòtidyverse‚Äô E checking examples (707ms) Running examples in ‚Äòfreqtables-Ex.R‚Äô failed The error most likely occurred in: I got this error because I had library(tidyverse) in theexamples? section of my roxygen2 header in one of my R scripts, but I did not have tidyverse in the Imports section of my DESCRIPTION file. I could add tidyverse to the DESCRIPTION file (usethis::use_package(\"tidyverse\", type = \"Imports\")). However, in this case I chose to use library(dplyr), which was already in the Imports section of my DESCRIPTION file, instead. W checking dependencies in R code (369ms) ‚Äò::‚Äô or ‚Äò:::‚Äô import not declared from: ‚Äòrlang‚Äô To fix this one simply run the following code in the console: usethis::use_package(\"rlang\", type = \"Imports\") Warning: ‚Äòinst/doc‚Äô files ‚Ä¶ ignored as vignettes have been rebuilt. Just ignore this one. Warning in strptime(xx, f &lt;- ‚Äú%Y-%m-%d %H:%M:%OS,‚Äù tz = tz) : unknown timezone ‚Äòzone/tz/2017c.1.0/zoneinfo/America/Chicago‚Äô Just ingnore this one. It‚Äôs a problem with my computer, not with the package code. Non-standard files/directories found at top level: ‚Äòdevelop_test_table.Rmd‚Äô ‚Äòdevelop_test_table.nb.html‚Äô Need to delete these files when I‚Äôm done developing chi-square test. Prevents R CMD check: ‚Äúno visible binding for global variable ‚Äò.‚Äô‚Äù Put the following (for example) directly inside the function definition in the R script where the function is defined: # ------------------------------------------------------------------ # Prevents R CMD check: &quot;no visible binding for global variable ‚Äò.‚Äô&quot; # ------------------------------------------------------------------ n = n_total = prop = t_crit = se = lcl_wald = ucl_wald = percent = NULL N checking R code for possible problems (1.8s) get_group_n: no visible global function definition for ‚Äò%&gt;%‚Äô Undefined global functions or variables: %&gt;% Info on fixing this issue Short answer: Add the following directly inside the roxygen2 header in the R script where the function is defined: @importFrom dplyr %&gt;%. You must also make sure that it gets to the NAMESPACE. Run usethis::use_namespace() and then devtools::document() to get it into NAMESPACE. Non-standard file/directory found at top level: ‚Äòmeantables_hex‚Äô I got this error after submitting meantables to CRAN. The problem is with the hex sticker file in the meantable hex sticker I added for the README. This SO issue gives some advice: https://stackoverflow.com/questions/44113759/note-or-warning-from-package-check-when-readme-md-includes-images I moved the stickers to man/figures. It seems to have solved the problem. References "],["creating-rmd-templates.html", "2 Creating Rmd Templates 2.1 ‚≠êÔ∏èOverview 2.2 üåéUseful websites 2.3 Create a package 2.4 Add a template to your package", " 2 Creating Rmd Templates 2.1 ‚≠êÔ∏èOverview This file contains notes on creating Rmd templates for RStudio. In RStudio, click on the ‚Äúnew file‚Äù button. Click ‚ÄúR Markdown‚Ä¶‚Äù Click ‚ÄúFrom Template‚Äù in the left sidebar menu. A list of Rmd templates appears in the ‚ÄúTemplate:‚Äù list. You can create your own templates and add them to this menu, which can be really handy! Below, I describe how to do that. Important: Rmd templates can only be added to RStudio‚Äôs template list by adding the Rmd template to a package and then installing that package on your computer. Read Hadley Wickham and Jenny Bryan‚Äôs R Packages book for an overview of creating R packages. 2.2 üåéUseful websites https://bookdown.org/yihui/rmarkdown/document-templates.html https://r-pkgs.org/ 2.3 Create a package See R Packages and/or my R packages notes. 2.4 Add a template to your package Step 1. Create directory for template Templates are located within the inst/rmarkdown/templates directory of a package. This structure can be generated automatically with the use_rmarkdown_template() function from the usethis package. It is possible to contain multiple templates in a single package, with each template stored in a separate sub-directory. Step 2. For example, the ‚ÄúNo Output‚Äù Rmd template can be viewed at: https://github.com/brad-cannell/templates/blob/master/inst/rmarkdown/templates/no_output/skeleton/skeleton.Rmd Step 3. Change the name of the folder in inst/rmarkdown/templates from template-name. For example, no_output. Step 4. Open the folder you just renamed and update template.yaml. The value you pass to the name: parameter will determine how the template is listed in RStudio‚Äôs template list. For example, name: No Output. The value you pass to the description: parameter appear as a tool tip when you hover your mouse over the template‚Äôs name in RStudio‚Äôs template list. For, example, Brad Cannell's template for an Rmd file with no output. Step 5. Create (or copy and paste) your Rmd template file into skeleton/skeleton.Rmd. üóíSide Note: If you already have a template in your package, you can create another one by pasting usethis::use_rmarkdown_template() in the console again and following the steps above. "],["tidy-evaluation.html", "3 Tidy Evaluation 3.1 ‚≠êÔ∏èOverview 3.2 üåéUseful websites 3.3 üì¶Load packages 3.4 üî¢Simulate data 3.5 Load Starwars data 3.6 Key Functions 3.7 Example using Tidy Eval in For Loop 3.8 Example using Tidy Eval in Functions 3.9 Using tidyeval with purrr 3.10 Other Quirks and Lessons Learned 3.11 Example I created for Steph Yap 3.12 Other questions / notes / reminders", " 3 Tidy Evaluation Created: 2017-06-24 Updated: 2022-03-30 3.1 ‚≠êÔ∏èOverview This chapter is about tidy evaluation. 3.2 üåéUseful websites Tidy evaluation book Programming with dplyr Using ggplot2 in packages Rlang adds curly-curly Advanced R, metaprogramming 3.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) library(tidyr, warn.conflicts = FALSE) library(purrr, warn.conflicts = FALSE) 3.4 üî¢Simulate data # Do this later # set.seed(123) # df &lt;- tibble( # x = rnorm(26), # y = letters # ) 3.5 Load Starwars data data(starwars) Tidy Eval is as system for programming, as opposed to working interactively, with dplyr. Tidy Eval is all about quoting. Not in the \"\" sense, which is to create a character string. Rather, Quoting is the action of capturing an expression instead of evaluating it. This is similar to the way formulas work in R. For example: # Computing the value of the expression: toupper(letters[1:5]) ## [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;E&quot; # Capturing the expression: quote(toupper(letters[1:5])) ## toupper(letters[1:5]) Don‚Äôt forget: When using quoted expressions, or quotures inside functions, you must unquote them where you want the expression evaluated. You can unquote with !! or unquote-splice with !!!. You can also use the curly-curly syntax to unquote: {{}}. I‚Äôm still not clear on when to use one vs.¬†the other. 3.6 Key Functions .data pronoun Not officially part of Tidy Eval (part of rlang). However, useful to keep in mind in situations where you might be programming over multiple data frames. If you‚Äôre in that situation, go check out the Pragramming with dplyr link above for more details. quo() This is sort of the foundational function in Tidy Eval. It creates a class quoture object, which is a special type of formula. quo() captures expressions when outside of user-defined functions. # What does quo() return? quo(species) # Where species is a variable in the Starwars tibble ## &lt;quosure&gt; ## expr: ^species ## env: global # Basic usage of quo() in function freq_table &lt;- function(df, x, ...) { df %&gt;% # No quoting and unquoting necessary for the tibble group_by(!!x) %&gt;% # Don&#39;t forget to unquote (!!) where you want the quoture evaluated summarise(N = n()) %&gt;% # Calculate freq top_n(3, N) # Return top 3 results } freq_table(df = starwars, x = quo(species)) ## # A tibble: 3 √ó 2 ## species N ## &lt;chr&gt; &lt;int&gt; ## 1 Droid 6 ## 2 Human 35 ## 3 &lt;NA&gt; 4 enquo() If you don‚Äôt want the user of your function to be able to pass the variable name as an argument without wrapping in quo(), that‚Äôs where enquo() comes in. # Basic usage of enquo() in function freq_table &lt;- function(df, x, ...) { x &lt;- enquo(x) # Capturing function argument and turning it into a quoture df %&gt;% group_by(!!x) %&gt;% summarise(N = n()) %&gt;% top_n(3, N) } freq_table(df = starwars, x = species) # Notice we no longer need to wrop species with quo() ## # A tibble: 3 √ó 2 ## species N ## &lt;chr&gt; &lt;int&gt; ## 1 Droid 6 ## 2 Human 35 ## 3 &lt;NA&gt; 4 quos() Use quos() with ... when you want to pass multiple variables / arguments / expressions into your function. Must unquote-splice !!! in your function to evaluate. # What does quos() return? quos(species, name) # Where species and name are variables in the Starwars tibble ## &lt;list_of&lt;quosure&gt;&gt; ## ## [[1]] ## &lt;quosure&gt; ## expr: ^species ## env: global ## ## [[2]] ## &lt;quosure&gt; ## expr: ^name ## env: global You can iterate over the list of quotures returned by quos() my_quos &lt;- quos(species, name) for(i in seq_along(my_quos)) { print(my_quos[[i]]) } ## &lt;quosure&gt; ## expr: ^species ## env: global ## &lt;quosure&gt; ## expr: ^name ## env: global Don‚Äôt forget to unquote-splice with !!! # Basic use of quos() in a for loop my_quos &lt;- quos(species, name) for(i in seq_along(my_quos)) { summarise(starwars, n_miss = sum(is.na(!!my_quos[[i]]))) %&gt;% print # Can use !! or !!! in this case } ## # A tibble: 1 √ó 1 ## n_miss ## &lt;int&gt; ## 1 4 ## # A tibble: 1 √ó 1 ## n_miss ## &lt;int&gt; ## 1 0 # Basic usage of quos() in function freq_table &lt;- function(df, ...) { # Notice we dropped the &quot;x&quot; argument x &lt;- quos(...) # Capturing function argument and turning it into a quoture list df %&gt;% group_by(!!!x) %&gt;% # Must use unquote-splice (!!!) in this case summarise(N = n()) %&gt;% ungroup() %&gt;% slice(1:5) } freq_table(df = starwars, species, hair_color) ## `summarise()` has grouped output by &#39;species&#39;. You can override using the `.groups` argument. ## # A tibble: 5 √ó 3 ## species hair_color N ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 Aleena none 1 ## 2 Besalisk none 1 ## 3 Cerean white 1 ## 4 Chagrian none 1 ## 5 Clawdite blonde 1 quo_name() Sometimes we want to convert the argument to a string for use in our function output. For example, we may want to dynamically create variable names inside the function. # What does quo_name return? quo_name(&quot;height&quot;) # Input must be a string or a quoture ## [1] &quot;height&quot; # What does quo_name return? height &lt;- quo(height) quo_name(height) # Input must be a string or a quoture ## [1] &quot;height&quot; # Basic usage of quos() in function continuous_table &lt;- function(df, x) { x2 &lt;- enquo(x) # Must enquo first mean_name &lt;- paste0(&quot;mean_&quot;, quo_name(x2)) sum_name &lt;- paste0(&quot;sum_&quot;, quo_name(x2)) df %&gt;% summarise( !!mean_name := mean(!!x2, na.rm = TRUE), # Must use !! and := to set the variable names !!sum_name := sum(!!x2, na.rm = TRUE) ) } continuous_table(starwars, height) ## # A tibble: 1 √ó 2 ## mean_height sum_height ## &lt;dbl&gt; &lt;int&gt; ## 1 174. 14123 rlang::sym() Takes a string as an input and turns it into a symbol my_col &lt;- &quot;height&quot; rlang::qq_show( starwars %&gt;% summarize( mean(my_col) ) ) ## starwars %&gt;% summarize(mean(my_col)) Doesn‚Äôt work because R will look for a variable named ‚Äúmy_col‚Äù in the data frame ‚Äústarwars.‚Äù my_col &lt;- &quot;height&quot; rlang::qq_show( starwars %&gt;% summarize( mean(!!my_col) ) ) ## starwars %&gt;% summarize(mean(&quot;height&quot;)) Doesn‚Äôt work because R will try to calculate the mean of the character string ‚Äúheight.‚Äù my_col &lt;- rlang::sym(&quot;height&quot;) rlang::qq_show( starwars %&gt;% summarize( mean(!!my_col) ) ) ## starwars %&gt;% summarize(mean(height)) This looks like what we would type manually. my_col &lt;- rlang::sym(&quot;height&quot;) starwars %&gt;% summarize( mean = mean(!!my_col, na.rm = TRUE) ) ## # A tibble: 1 √ó 1 ## mean ## &lt;dbl&gt; ## 1 174. And it works as expeccted rlang::syms() Like sym, but can convert multiple strings into a list of symbols my_cols &lt;- rlang::syms(c(&quot;height&quot;, &quot;mass&quot;)) rlang::qq_show( starwars %&gt;% summarize( mean(!!my_cols) ) ) ## starwars %&gt;% summarize(mean(&lt;list: height, mass&gt;)) Notice that unquoting with !! returns a list of symbols. To unlist them, we must use the splice operator. my_cols &lt;- rlang::syms(c(&quot;height&quot;, &quot;mass&quot;)) rlang::qq_show( starwars %&gt;% summarize( mean(!!!my_cols) ) ) ## starwars %&gt;% summarize(mean(height, mass)) Of course, to make this meaningful we need to map it over height and mass my_cols &lt;- rlang::syms(c(&quot;height&quot;, &quot;mass&quot;)) summarise_avg &lt;- function(data, col) { col &lt;- enquo(col) data %&gt;% summarise(avg = mean(!!col, na.rm = TRUE)) } results &lt;- purrr::map_df(my_cols, summarise_avg, data = starwars) results ## # A tibble: 2 √ó 1 ## avg ## &lt;dbl&gt; ## 1 174. ## 2 97.3 3.7 Example using Tidy Eval in For Loop In this example, I‚Äôm creating a table of summary statistics using the Starwars data. The table will compare some simple characteristics of the characters by species. First, I‚Äôm going to reclassify every character as Human or Not Human starwars &lt;- mutate(starwars, human = if_else(species == &quot;Human&quot;, &quot;Yes&quot;, &quot;No&quot;, NA_character_)) Now I‚Äôm going to create the table shell vars = 3 # Number of vars rows = vars + 1 # Additional row for group sample size table &lt;- tibble( Variable = vector(mode = &quot;character&quot;, length = rows), Human = vector(mode = &quot;character&quot;, length = rows), `Not Human` = vector(mode = &quot;character&quot;, length = rows) ) # N for Human table[1, 2] &lt;- paste0( &quot;(N = &quot;, filter(starwars, human == &quot;Yes&quot;) %&gt;% nrow() %&gt;% format(big.mark = &quot;,&quot;), &quot;)&quot; ) # N for Not Human table[1, 3] &lt;- paste0( &quot;(N = &quot;, filter(starwars, human == &quot;No&quot;) %&gt;% nrow() %&gt;% format(big.mark = &quot;,&quot;), &quot;)&quot; ) table ## # A tibble: 4 √ó 3 ## Variable Human `Not Human` ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;&quot; &quot;(N = 35)&quot; &quot;(N = 48)&quot; ## 2 &quot;&quot; &quot;&quot; &quot;&quot; ## 3 &quot;&quot; &quot;&quot; &quot;&quot; ## 4 &quot;&quot; &quot;&quot; &quot;&quot; Finally, I‚Äôll fill in the table using a for loop. In this case, I just want to compare the mean height, mass, and birth year of humans and non-humans. vars &lt;- c(quo(height), quo(mass), quo(birth_year)) # Create vector of quotures for variables of interest for(i in seq_along(vars)) { table[i + 1, ] &lt;- starwars %&gt;% # Chunk of table to receive loop output filter(!is.na(human)) %&gt;% group_by(human) %&gt;% summarise(Mean = mean(!!vars[[i]], na.rm = TRUE)) %&gt;% # Use !! with vars[[i]] mutate(Mean = round(Mean, 1) %&gt;% format(nsmall = 1)) %&gt;% tidyr::spread(human, Mean) %&gt;% mutate(Variable = quo_name(vars[[i]])) %&gt;% # Use quo_name to get variable name for first column select(Variable, Yes, No) } table ## # A tibble: 4 √ó 3 ## Variable Human `Not Human` ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;&quot; &quot;(N = 35)&quot; (N = 48) ## 2 &quot;height&quot; &quot;176.6&quot; 172.4 ## 3 &quot;mass&quot; &quot; 82.8&quot; 107.6 ## 4 &quot;birth_year&quot; &quot; 53.4&quot; 139.3 This works! How can I keep from having to type quo around every variable? vars &lt;- quos(height, mass, birth_year) for(i in seq_along(vars)) { table[i + 1, ] &lt;- starwars %&gt;% # Chunk of table to receive loop output filter(!is.na(human)) %&gt;% group_by(human) %&gt;% summarise(Mean = mean(!!vars[[i]], na.rm = TRUE)) %&gt;% # Use !! with vars[[i]] mutate(Mean = round(Mean, 1) %&gt;% format(nsmall = 1)) %&gt;% tidyr::spread(human, Mean) %&gt;% mutate(Variable = quo_name(vars[[i]])) %&gt;% # Use quo_name to get variable name for first column select(Variable, Yes, No) } table ## # A tibble: 4 √ó 3 ## Variable Human `Not Human` ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;&quot; &quot;(N = 35)&quot; (N = 48) ## 2 &quot;height&quot; &quot;176.6&quot; 172.4 ## 3 &quot;mass&quot; &quot; 82.8&quot; 107.6 ## 4 &quot;birth_year&quot; &quot; 53.4&quot; 139.3 3.8 Example using Tidy Eval in Functions In this example, I‚Äôm creating a table of summary statistics using the Starwars data. The table will compare some simple characteristics of the characters by species. First, I‚Äôm going to reclassify every character as Human or Not Human starwars &lt;- mutate(starwars, human = if_else(species == &quot;Human&quot;, &quot;Yes&quot;, &quot;No&quot;, NA_character_)) Now I‚Äôm going to create the table shell vars = 3 # Number of vars rows = vars + 1 # Additional row for group sample size table &lt;- tibble( Variable = vector(mode = &quot;character&quot;, length = rows), Human = vector(mode = &quot;character&quot;, length = rows), `Not Human` = vector(mode = &quot;character&quot;, length = rows) ) # N for Human table[1, 2] &lt;- paste0( &quot;(N = &quot;, filter(starwars, human == &quot;Yes&quot;) %&gt;% nrow() %&gt;% format(big.mark = &quot;,&quot;), &quot;)&quot; ) # N for Not Human table[1, 3] &lt;- paste0( &quot;(N = &quot;, filter(starwars, human == &quot;No&quot;) %&gt;% nrow() %&gt;% format(big.mark = &quot;,&quot;), &quot;)&quot; ) table ## # A tibble: 4 √ó 3 ## Variable Human `Not Human` ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;&quot; &quot;(N = 35)&quot; &quot;(N = 48)&quot; ## 2 &quot;&quot; &quot;&quot; &quot;&quot; ## 3 &quot;&quot; &quot;&quot; &quot;&quot; ## 4 &quot;&quot; &quot;&quot; &quot;&quot; Finally, I‚Äôll fill in the table using a user-defined function. In this case, I just want to compare the mean height, mass, and birth year of humans and non-humans. my_stats &lt;- function(...) { vars &lt;- quos(...) # Creates a list of quotures from variable names temp &lt;- get(&quot;table&quot;) # Grabs a copy of the table shell from the environment temp &lt;- temp[0, ] # Only keep the column headers for(i in seq_along(vars)) { # Loop over all variables in ... out &lt;- quo(!!vars[[i]]) # Not necessary, but makes more readable. name &lt;- quo_name(out) # Turns variable name into string for mutate below. row &lt;- starwars %&gt;% # Creates a single row of stats for the table. filter(!is.na(human)) %&gt;% group_by(human) %&gt;% summarise(Mean = mean(!!out, na.rm = TRUE)) %&gt;% # Still need !! mutate(Mean = round(Mean, 1) %&gt;% format(nsmall = 1)) %&gt;% tidyr::spread(human, Mean) %&gt;% mutate(Variable = name) %&gt;% select(Variable, Yes, No) temp &lt;- rbind(temp, row) } temp } table[2:4, ] &lt;- my_stats(height, mass, birth_year) # Notice that we no longer need to us quo table ## # A tibble: 4 √ó 3 ## Variable Human `Not Human` ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;&quot; &quot;(N = 35)&quot; (N = 48) ## 2 &quot;height&quot; &quot;176.6&quot; 172.4 ## 3 &quot;mass&quot; &quot; 82.8&quot; 107.6 ## 4 &quot;birth_year&quot; &quot; 53.4&quot; 139.3 3.9 Using tidyeval with purrr I have a situation that I‚Äôm a little confused about. I think if I could understand the contrived situation below, then I could figure out my issue. Essentially, when I use map(x, function(x) { !!x }) with tidyeval I get the result that I expect. When I try to use the purrr shortcut, i.e., map(x, ~ { !!. }) I get an error. I don‚Äôt understand why. If anybody has insight that they care to share, I would really appreciate it! A reprex is below: This works as expected: vars &lt;- quos(gender, species) map_df(vars, function(x){ starwars %&gt;% group_by(!! x) %&gt;% summarise(mean(height, na.rm = TRUE)) }) ## # A tibble: 41 √ó 3 ## gender `mean(height, na.rm = TRUE)` species ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 feminine 165. &lt;NA&gt; ## 2 masculine 177. &lt;NA&gt; ## 3 &lt;NA&gt; 181. &lt;NA&gt; ## 4 &lt;NA&gt; 79 Aleena ## 5 &lt;NA&gt; 198 Besalisk ## 6 &lt;NA&gt; 198 Cerean ## 7 &lt;NA&gt; 196 Chagrian ## 8 &lt;NA&gt; 168 Clawdite ## 9 &lt;NA&gt; 131. Droid ## 10 &lt;NA&gt; 112 Dug ## # ‚Ä¶ with 31 more rows I‚Äôm not sure why this doesn‚Äôt work: # vars &lt;- quos(gender, species) # # map_df(vars, ~ { # starwars %&gt;% # group_by(!! .) %&gt;% # summarise(mean(height, na.rm = TRUE)) # }) The answer is to use ‚Äú.x‚Äù instead of ‚Äú.‚Äù: vars &lt;- quos(gender, species) map_df(vars, ~ { starwars %&gt;% group_by(!! .x) %&gt;% summarise(mean(height, na.rm = TRUE)) }) ## # A tibble: 41 √ó 3 ## gender `mean(height, na.rm = TRUE)` species ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 feminine 165. &lt;NA&gt; ## 2 masculine 177. &lt;NA&gt; ## 3 &lt;NA&gt; 181. &lt;NA&gt; ## 4 &lt;NA&gt; 79 Aleena ## 5 &lt;NA&gt; 198 Besalisk ## 6 &lt;NA&gt; 198 Cerean ## 7 &lt;NA&gt; 196 Chagrian ## 8 &lt;NA&gt; 168 Clawdite ## 9 &lt;NA&gt; 131. Droid ## 10 &lt;NA&gt; 112 Dug ## # ‚Ä¶ with 31 more rows However, I‚Äôm not entirely sure why. When I have more time, I‚Äôd like to figure this out. vars &lt;- quos(gender, species) map(vars, function(x) { x }) ## [[1]] ## &lt;quosure&gt; ## expr: ^gender ## env: global ## ## [[2]] ## &lt;quosure&gt; ## expr: ^species ## env: global 3.10 Other Quirks and Lessons Learned 3.10.1 When !! doesn‚Äôt work I‚Äôve noticed that using !! doesn‚Äôt always work. At this point, I‚Äôm not exactly sure the rules related to when it works and when it doesn‚Äôt work, but I do want to write down some examples and fixes. Sometimes it‚Äôs my fault: example &lt;- function(df, var, ...) { x &lt;- enquo(var) print(!!x) # This doesn&#39;t work - need to associate the quoture variable with its data frame } starwars %&gt;% example(hair_color) ## Error: Quosures can only be unquoted within a quasiquotation context. ## ## # Bad: ## list(!!myquosure) ## ## # Good: ## dplyr::mutate(data, !!myquosure) Fix: example &lt;- function(df, var, ...) { x &lt;- enquo(var) df %&gt;% select(!!x) %&gt;% print() } starwars %&gt;% example(hair_color) ## # A tibble: 87 √ó 1 ## hair_color ## &lt;chr&gt; ## 1 blond ## 2 &lt;NA&gt; ## 3 &lt;NA&gt; ## 4 none ## 5 brown ## 6 brown, grey ## 7 brown ## 8 &lt;NA&gt; ## 9 black ## 10 auburn, white ## # ‚Ä¶ with 77 more rows 3.10.2 Unquoting inside non-dplyr functions I‚Äôve notice some weirdness when trying to unquote quotures inside functions that are inside dplyr functions. For example, if_else inside of mutate. example &lt;- function(df, var) { x &lt;- enquo(var) df %&gt;% mutate(hair_color = if_else(!!x == &quot;yellow&quot;, &quot;blond&quot;, !!x)) } starwars %&gt;% example(hair_color) ## # A tibble: 87 √ó 15 ## name height mass hair_color skin_color eye_color birth_year sex gender ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Luke S‚Ä¶ 172 77 blond fair blue 19 male mascu‚Ä¶ ## 2 C-3PO 167 75 &lt;NA&gt; gold yellow 112 none mascu‚Ä¶ ## 3 R2-D2 96 32 &lt;NA&gt; white, bl‚Ä¶ red 33 none mascu‚Ä¶ ## 4 Darth ‚Ä¶ 202 136 none white yellow 41.9 male mascu‚Ä¶ ## 5 Leia O‚Ä¶ 150 49 brown light brown 19 fema‚Ä¶ femin‚Ä¶ ## 6 Owen L‚Ä¶ 178 120 brown, grey light blue 52 male mascu‚Ä¶ ## 7 Beru W‚Ä¶ 165 75 brown light blue 47 fema‚Ä¶ femin‚Ä¶ ## 8 R5-D4 97 32 &lt;NA&gt; white, red red NA none mascu‚Ä¶ ## 9 Biggs ‚Ä¶ 183 84 black light brown 24 male mascu‚Ä¶ ## 10 Obi-Wa‚Ä¶ 182 77 auburn, wh‚Ä¶ fair blue-gray 57 male mascu‚Ä¶ ## # ‚Ä¶ with 77 more rows, and 6 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, ## # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;, human &lt;chr&gt; Fix: example &lt;- function(df, var) { x &lt;- enquo(var) df %&gt;% mutate(hair_color = if_else(rlang::UQ(x) == &quot;yellow&quot;, &quot;blond&quot;, rlang::UQ(x))) } starwars %&gt;% example(hair_color) ## Warning: Prefixing `UQ()` with the rlang namespace is deprecated as of rlang 0.3.0. ## Please use the non-prefixed form or `!!` instead. ## ## # Bad: ## rlang::expr(mean(rlang::UQ(var) * 100)) ## ## # Ok: ## rlang::expr(mean(UQ(var) * 100)) ## ## # Good: ## rlang::expr(mean(!!var * 100)) ## ## This warning is displayed once per session. ## # A tibble: 87 √ó 15 ## name height mass hair_color skin_color eye_color birth_year sex gender ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Luke S‚Ä¶ 172 77 blond fair blue 19 male mascu‚Ä¶ ## 2 C-3PO 167 75 &lt;NA&gt; gold yellow 112 none mascu‚Ä¶ ## 3 R2-D2 96 32 &lt;NA&gt; white, bl‚Ä¶ red 33 none mascu‚Ä¶ ## 4 Darth ‚Ä¶ 202 136 none white yellow 41.9 male mascu‚Ä¶ ## 5 Leia O‚Ä¶ 150 49 brown light brown 19 fema‚Ä¶ femin‚Ä¶ ## 6 Owen L‚Ä¶ 178 120 brown, grey light blue 52 male mascu‚Ä¶ ## 7 Beru W‚Ä¶ 165 75 brown light blue 47 fema‚Ä¶ femin‚Ä¶ ## 8 R5-D4 97 32 &lt;NA&gt; white, red red NA none mascu‚Ä¶ ## 9 Biggs ‚Ä¶ 183 84 black light brown 24 male mascu‚Ä¶ ## 10 Obi-Wa‚Ä¶ 182 77 auburn, wh‚Ä¶ fair blue-gray 57 male mascu‚Ä¶ ## # ‚Ä¶ with 77 more rows, and 6 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, ## # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;, human &lt;chr&gt; 3.10.3 Using a quoture to create variable name in mutate Additionally, sometimes there is some trickiness to naming (or overwriting) a variable name inside of mutate. example &lt;- function(df, var) { x &lt;- enquo(var) df %&gt;% mutate(!!x = if_else(rlang::UQ(x) == &quot;yellow&quot;, &quot;blond&quot;, rlang::UQ(x))) } starwars %&gt;% example(hair_color) ## Error: &lt;text&gt;:5:16: unexpected &#39;=&#39; ## 4: df %&gt;% ## 5: mutate(!!x = ## ^ This doesn‚Äôt help either: example &lt;- function(df, var) { x &lt;- enquo(var) df %&gt;% mutate(!!x := if_else(rlang::UQ(x) == &quot;yellow&quot;, &quot;blond&quot;, rlang::UQ(x))) } starwars %&gt;% example(hair_color) ## # A tibble: 87 √ó 15 ## name height mass hair_color skin_color eye_color birth_year sex gender ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Luke S‚Ä¶ 172 77 blond fair blue 19 male mascu‚Ä¶ ## 2 C-3PO 167 75 &lt;NA&gt; gold yellow 112 none mascu‚Ä¶ ## 3 R2-D2 96 32 &lt;NA&gt; white, bl‚Ä¶ red 33 none mascu‚Ä¶ ## 4 Darth ‚Ä¶ 202 136 none white yellow 41.9 male mascu‚Ä¶ ## 5 Leia O‚Ä¶ 150 49 brown light brown 19 fema‚Ä¶ femin‚Ä¶ ## 6 Owen L‚Ä¶ 178 120 brown, grey light blue 52 male mascu‚Ä¶ ## 7 Beru W‚Ä¶ 165 75 brown light blue 47 fema‚Ä¶ femin‚Ä¶ ## 8 R5-D4 97 32 &lt;NA&gt; white, red red NA none mascu‚Ä¶ ## 9 Biggs ‚Ä¶ 183 84 black light brown 24 male mascu‚Ä¶ ## 10 Obi-Wa‚Ä¶ 182 77 auburn, wh‚Ä¶ fair blue-gray 57 male mascu‚Ä¶ ## # ‚Ä¶ with 77 more rows, and 6 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, ## # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;, human &lt;chr&gt; Fix: Must have !! in front of quo_name(). Must use := instead of =. example &lt;- function(df, var) { x &lt;- enquo(var) df %&gt;% mutate(!!quo_name(x) := if_else(rlang::UQ(x) == &quot;yellow&quot;, &quot;blond&quot;, rlang::UQ(x))) } starwars %&gt;% example(hair_color) ## # A tibble: 87 √ó 15 ## name height mass hair_color skin_color eye_color birth_year sex gender ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Luke S‚Ä¶ 172 77 blond fair blue 19 male mascu‚Ä¶ ## 2 C-3PO 167 75 &lt;NA&gt; gold yellow 112 none mascu‚Ä¶ ## 3 R2-D2 96 32 &lt;NA&gt; white, bl‚Ä¶ red 33 none mascu‚Ä¶ ## 4 Darth ‚Ä¶ 202 136 none white yellow 41.9 male mascu‚Ä¶ ## 5 Leia O‚Ä¶ 150 49 brown light brown 19 fema‚Ä¶ femin‚Ä¶ ## 6 Owen L‚Ä¶ 178 120 brown, grey light blue 52 male mascu‚Ä¶ ## 7 Beru W‚Ä¶ 165 75 brown light blue 47 fema‚Ä¶ femin‚Ä¶ ## 8 R5-D4 97 32 &lt;NA&gt; white, red red NA none mascu‚Ä¶ ## 9 Biggs ‚Ä¶ 183 84 black light brown 24 male mascu‚Ä¶ ## 10 Obi-Wa‚Ä¶ 182 77 auburn, wh‚Ä¶ fair blue-gray 57 male mascu‚Ä¶ ## # ‚Ä¶ with 77 more rows, and 6 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, ## # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;, human &lt;chr&gt; 3.10.4 Using a quoture to turn a variable name into a constant value When I‚Äôm looping over many variables, I often want to create a variable in my output called ‚Äúcharacteristic‚Äù or ‚Äúvariable‚Äù that captures the current variable name as a value. example &lt;- function(df, var) { x &lt;- enquo(var) # Make sure to use enquo here df %&gt;% summarise( Mean = mean(!!x, na.rm = TRUE) ) %&gt;% mutate(Characteristic = !!quo_name(x)) %&gt;% # Make sure to use !!quo_name() select(Characteristic, Mean) } starwars %&gt;% example(height) ## # A tibble: 1 √ó 2 ## Characteristic Mean ## &lt;chr&gt; &lt;dbl&gt; ## 1 height 174. 3.10.5 Convert a string to a quoture Here are some useful websites: https://github.com/tidyverse/rlang/issues/116 https://stackoverflow.com/questions/27975124/pass-arguments-to-dplyr-functions/44594223#44594223 https://stackoverflow.com/questions/44593596/how-to-pass-strings-denoting-expressions-to-dplyr-0-7-verbs/44593617#44593617 Sometimes, I want to pass a variable name as a string to a function. It then needs to be converted to a quoture for evaluation. 3.10.5.1 Simple example - Now this works my_col &lt;- names(starwars[2]) # Have a variable name as a quoted string my_col &lt;- &quot;mass&quot; starwars %&gt;% select(!!my_col) # Now this works ## # A tibble: 87 √ó 1 ## mass ## &lt;dbl&gt; ## 1 77 ## 2 75 ## 3 32 ## 4 136 ## 5 49 ## 6 120 ## 7 75 ## 8 32 ## 9 84 ## 10 77 ## # ‚Ä¶ with 77 more rows 3.10.5.2 When the string is created inside the function starwars$height_squared &lt;- starwars$height**2 example &lt;- function(df, var) { x &lt;- enquo(var) # First, turn var without the suffix into a quoture - must be first squared &lt;- paste(quo_name(x), &quot;squared&quot;, sep = &quot;_&quot;) # Must use quo_name() df %&gt;% summarise( Mean = mean(!!squared, na.rm = TRUE) ) } starwars %&gt;% example(height) ## Warning in mean.default(&quot;height_squared&quot;, na.rm = TRUE): argument is not numeric ## or logical: returning NA ## # A tibble: 1 √ó 1 ## Mean ## &lt;dbl&gt; ## 1 NA Fix (Method prefered by Hadley and Lionel): example &lt;- function(df, var) { x &lt;- enquo(var) # First, turn var without the suffix into a quoture - must be first squared &lt;- paste(quo_name(x), &quot;squared&quot;, sep = &quot;_&quot;) # Must use quo_name() squared &lt;- rlang::sym(squared) # Wrap with sym() df %&gt;% summarise( Mean = mean(!!squared, na.rm = TRUE) ) } starwars %&gt;% example(height) ## # A tibble: 1 √ó 1 ## Mean ## &lt;dbl&gt; ## 1 31595. Or: example &lt;- function(df, var) { x &lt;- enquo(var) # First, turn var without the suffix into a quoture - must be first squared &lt;- paste(quo_name(x), &quot;squared&quot;, sep = &quot;_&quot;) # Must use quo_name() squared &lt;- as.name(squared) # Wrap with as.name() df %&gt;% summarise( Mean = mean(!!squared, na.rm = TRUE) ) } starwars %&gt;% example(height) ## # A tibble: 1 √ó 1 ## Mean ## &lt;dbl&gt; ## 1 31595. Or: example &lt;- function(df, var) { x &lt;- enquo(var) # First, turn var without the suffix into a quoture - must be first squared &lt;- paste(quo_name(x), &quot;squared&quot;, sep = &quot;_&quot;) # Must use quo_name() squared &lt;- rlang::parse_quosure(squared) # Wrap with parse_quosure df %&gt;% summarise( Mean = mean(!!squared, na.rm = TRUE) ) } starwars %&gt;% example(height) ## Warning: `parse_quosure()` is deprecated as of rlang 0.2.0. ## Please use `parse_quo()` instead. ## This warning is displayed once per session. ## # A tibble: 1 √ó 1 ## Mean ## &lt;dbl&gt; ## 1 31595. 3.10.5.3 Grouping by all columns in the data frame Ran into this situation while checking for duplicate rows in APS data (DETECT pilot test) starwars_2 &lt;- starwars %&gt;% select(-films, -vehicles, -starships) # Remove list columns starwars_2 %&gt;% group_by(names(starwars)) %&gt;% filter(n() &gt; 1) %&gt;% count() %&gt;% ungroup() %&gt;% select(n) ## Error: Problem adding computed columns in `group_by()`. ## x Problem with `mutate()` input `..1`. ## ‚Ñπ `..1 = names(starwars)`. ## ‚Ñπ `..1` must be size 87 or 1, not 16. Fix: In this case, we could have used the built-in group_by_all starwars_2 &lt;- starwars %&gt;% select(-films, -vehicles, -starships) # Remove list columns starwars_2 %&gt;% group_by_all() %&gt;% filter(n() &gt; 1) %&gt;% count() %&gt;% ungroup() %&gt;% select(n) ## # A tibble: 0 √ó 1 ## # ‚Ä¶ with 1 variable: n &lt;int&gt; And, there are no duplicates. Another, more general solution for using all column names is: starwars_2 &lt;- starwars %&gt;% select(-films, -vehicles, -starships) # Remove list columns my_cols &lt;- starwars_2 %&gt;% names() %&gt;% rlang::syms() starwars_2 %&gt;% group_by(!!!my_cols) %&gt;% # Remember to use splice &#39;!!!&#39; filter(n() &gt; 1) %&gt;% count() %&gt;% ungroup() %&gt;% select(n) ## # A tibble: 0 √ó 1 ## # ‚Ä¶ with 1 variable: n &lt;int&gt; top 3.11 Example I created for Steph Yap Need to clean this up, but I don‚Äôt have time now. Here is a worked example using some toy data aps_cleaned &lt;- tibble( case_num = 1:3, valid_physical_neglect = c(0, 1, 0), valid_sexual_abuse = 0 ) discrepancies_valid_physical_neglect &lt;-tibble( case_num = 1, valid_physical_neglect = 1 ) discrepancies_valid_sexual_abuse &lt;- tibble( case_num = 3, valid_sexual_abuse = 1 ) Create the function Here is a refernce to help with the tidy evaluation stuff: https://dplyr.tidyverse.org/articles/programming.html join_aps &lt;- function(.data = aps_cleaned, join_df, valid_col) { # Create column names to use in the code below col_x &lt;- sym(paste0(quo_name(enquo(valid_col)), ‚Äú.x‚Äù)) col_y &lt;- sym(paste0(quo_name(enquo(valid_col)), ‚Äú.y‚Äù)) .data %&gt;% left_join(join_df, by = ‚Äúcase_num‚Äù) %&gt;% mutate( \"{{valid_col}}_cleaned\" := if_else( is.na({{ col_y }}), {{ col_x }}, {{ col_y }} ) ) } Test function aps_cleaned %&gt;% join_aps(discrepancies_valid_physical_neglect, valid_physical_neglect) 3.12 Other questions / notes / reminders Go back and add more basic information about rlang::sym() and some of the other rlang functions There is also some function to see what is going on ‚Äúunder the hood.‚Äù I don‚Äôt recall what it is right now, but I should probably discuss it as well. "],["arranging-columns-with-across.html", "4 Arranging Columns with Across 4.1 Solution by LMc:", " 4 Arranging Columns with Across I‚Äôm trying to arrange calculated columns immediately after source columns when using dplyr column-wise operations. https://stackoverflow.com/questions/67076974/arrange-calculated-columns-immediately-after-source-columns-when-using-dplyr-col/67077122#67077122 https://community.rstudio.com/t/arrange-calculated-columns-immediately-after-source-columns-when-using-dplyr-column-wise-operations/101726 library(dplyr) Example data df &lt;- tibble( id = c(1, 2, 2), id_row = c(1, 1, 2), name_first = c(&quot;John&quot;, &quot;Jane&quot;, &quot;Jane&quot;), city = c(&quot;NY&quot;, &quot;DAL&quot;, &quot;HOU&quot;), x = c(0, 1, 0) ) df ## # A tibble: 3 √ó 5 ## id id_row name_first city x ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 1 John NY 0 ## 2 2 1 Jane DAL 1 ## 3 2 2 Jane HOU 0 Within ID, the values of name_first and city should be constant. The values for id_row and x need not be constant. I want to test for and inspect differing values of name_first and city within-id. One convenient way to do this is with mutate() and across(). df %&gt;% group_by(id) %&gt;% mutate( across( .cols = c(name_first, city), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) ## # A tibble: 3 √ó 7 ## # Groups: id [2] ## id id_row name_first city x name_first_all_match city_all_match ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;lgl&gt; &lt;lgl&gt; ## 1 1 1 John NY 0 TRUE TRUE ## 2 2 1 Jane DAL 1 TRUE FALSE ## 3 2 2 Jane HOU 0 TRUE FALSE The issue is that the ‚Äúall_match‚Äù (calculated) columns are added to the far right of the data frame rather than immediately after their source column. This makes it difficult to visually inspect differing values for the columns of interest. Of course, in this small data frame, we could easily rearrange the columns using select(). df %&gt;% group_by(id) %&gt;% mutate( across( .cols = c(name_first, city), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) %&gt;% select(id, id_row, starts_with(&quot;name_first&quot;), starts_with(&quot;city&quot;), x) ## # A tibble: 3 √ó 7 ## # Groups: id [2] ## id id_row name_first name_first_all_match city city_all_match x ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 1 1 John TRUE NY TRUE 0 ## 2 2 1 Jane TRUE DAL FALSE 1 ## 3 2 2 Jane TRUE HOU FALSE 0 The issue with that approach is that it quickly becomes pretty cumbersome with more columns. A more tractable approach would be to sort the names alphabetically‚Ä¶ df %&gt;% group_by(id) %&gt;% mutate( across( .cols = c(name_first, city), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) %&gt;% select(sort(names(.))) ## # A tibble: 3 √ó 7 ## # Groups: id [2] ## city city_all_match id id_row name_first name_first_all_match x ## &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 NY TRUE 1 1 John TRUE 0 ## 2 DAL FALSE 2 1 Jane TRUE 1 ## 3 HOU FALSE 2 2 Jane TRUE 0 ‚Ä¶but in my situation I need to preserve the original column order. I‚Äôd also prefer to stick with Tidyverse solutions if possible. Any ideas are appreciated! 4.1 Solution by LMc: # Use select because it allows for more complex column selection when working # with more complex data frames. inspect_cols &lt;- df %&gt;% select(name_first, city) %&gt;% names() # Set column order ahead of time. This assumes that you know the names of each # of the columns you want to inspect col_order &lt;- purrr::map( names(df), function(x) { if (x %in% inspect_cols) { c(x, paste0(x, &quot;_all_match&quot;)) } else { x } } ) %&gt;% unlist() df %&gt;% group_by(id) %&gt;% mutate( across( .cols = all_of(inspect_cols), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) %&gt;% dplyr::select(all_of(col_order)) ## # A tibble: 3 √ó 7 ## # Groups: id [2] ## id id_row name_first name_first_all_match city city_all_match x ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 1 1 John TRUE NY TRUE 0 ## 2 2 1 Jane TRUE DAL FALSE 1 ## 3 2 2 Jane TRUE HOU FALSE 0 "],["column-names-prepping-many-for-merge.html", "5 Column Names: Prepping Many for Merge 5.1 ‚≠êÔ∏èOverview 5.2 üåéUseful websites 5.3 üì¶Load packages 5.4 üî¢Simulate data 5.5 Get the existing column names 5.6 Standardize new column names 5.7 Turn this into a function 5.8 Manual changes to column names 5.9 Have R write out the rename code 5.10 Rename the columns 5.11 Repeat the process for V2 5.12 Repeat the process for V3 5.13 Merge all 3 visits 5.14 Final data cleaning 5.15 üü£The dplyr way 5.16 üü¢ Making a key in Google Sheets", " 5 Column Names: Prepping Many for Merge 5.1 ‚≠êÔ∏èOverview The inspiration for this chapter came about when I was trying to merge the QDS visit 1 through visit 5 files that were part of the Link2Care project. All of the QDS files (plus some other files) needed to be merged together into a final analysis data set. However, not all questions were asked at all visits and column names were inconsistently used across visits. Even when the names were almost the same, a visit number was attached to the name (e.g., TODAY_V1, TODAY_V2, TODAY_V3, etc.). Finally, each data set contained 800+ columns, which made renaming them all manually tedious and error prone. So, I‚Äôm trying to come up with a better way. One method I came up with was reading in the variable names from the Word codebooks and then modifying them. Using this method required making some custom styles in Word and applying those styles to the column names. This seemed to work pretty well at first, but then Joe and James made some changes to QDS, which rendered the codebooks I‚Äôd made all the changes to obsolete. This left me with two options: Have some of the variable name adjustments pulled from the codebook and some of the variable name adjustments done manually in the R code (e.g., T26, visit type). Keep all of the adjustments in the codebook, which means converting the new codebooks to word documents, and going back through them to format all of the old column names again. Neither of these options seems very robust or future-proof. While it might be a lot of work upfront, I‚Äôm starting to think that just doing all of the variable renaming in the R code might be the way to go. Below, I‚Äôm going to play around with how to automate as much of this process as possible. 5.2 üåéUseful websites GitHub issue R4Epi rename_with exampe rename_with documentation Getting your data into R from Google Sheets RStudio Community: Rename with a named vector/list and contribution to the tidyverse 5.3 üì¶Load packages library(dplyr) library(stringr) library(testthat) library(tidyr) library(purrr) library(googlesheets4) 5.4 üî¢Simulate data Simulate 3 QDS data sets. Don‚Äôt worry about the values much. They really aren‚Äôt the issue for this example. SUBJECT: No change in column name across visits. TODAY_V and VISIT_V: The _V1, _V2, _V3 part changes. SQ_2: Only exists in v1, and the name is altered. GROUP: Only exists in v3. WEIGHT and WEIGHT3: Doesn‚Äôt exist in v2 and doesn‚Äôt follow any naming convention. DEMO16G and DEM14GV3: The variable was named incorrectly in v1. DS10A_V2: Only asked in v2 and doesn‚Äôt follow typical naming convention. DEM15V1: Only asked in v1 and I want to change the name completely. T26A_V1: Only exists in v1 and v3. Also, it needs to be renamed. T26A_V1A and T26A_V1B: Only exists in v1 and v3. Needs to be renamed, and it requires using the dummy variable naming convention. T31_V1B, T31_V3B, T31B_V1, and T31B_V3: Added these later. In v1, v3, v4, and v5 there is a column named T31B_V1 and a column named T31_V1B. The standardize_col_names() function converts both of these to t_31b, which causes rename_with() to throw an error. Further, I can‚Äôt just manually change it to t33 (what it will ultimately end up being named) before I run standardize_col_names() because then in conflicts with T33_V1. I need to find a solution inside of the standardize_col_names() function. Additionally, we want to convert all column names to lower case and follow these naming conventions: The typical way that variables are named in these data sets is: [optionally:dummy_variable_lettered] For example: BPM1_V1, LSN3_V1 _[optionally:dummy_variable_lettered] For example: Screening Question 2 is named: SQ_2 OR: The dummy variable for the ‚ÄúEMAIL‚Äù Response to Screening Question 18 is: SQ_18A Many questions also have the visit number embedded in the name. For example: Demographics question 1 is: DEM1V1. However, there are some exceptions to this rule - intentional or not. For example, the fifth MMSE question is: MMS4V In order to improve consistency in the variable names, we will adopt the following convention: _[optionally:dummy_variable_lettered] dummy variables will be numbered a-z For example, sq_12, t_14a We will drop visit number from the variable name an use an explicit visit variable. Exceptions: Demographic variables that almost anyone should be reasonably able to understand without the codebook will be given intuitive, descriptive names (e.g., age, race, gender, marital_status, etc.). I‚Äôm also going to change ‚ÄúSUBJECT‚Äù to ‚Äúid.‚Äù v1 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V1 = as.Date(c(&quot;2018-04-07&quot;, &quot;2018-05-03&quot;)), VISIT_V1 = 1, SQ_2 = c(1, 0), WEIGHT = c(179, 194), DEMO16G = c(0, 1), DEM15V1 = c(1, 0), T26A_V1 = c(2, 4), T26A_V1A = c(0, 0), T26A_V1B = c(1, 0), T31_V1B = c(0, 0), T31B_V1 = c(0, 0) ) v2 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V2 = as.Date(c(&quot;2018-04-30&quot;, &quot;2018-05-07&quot;)), VISIT_V2 = 2 ) v3 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V3 = as.Date(c(&quot;2018-05-31&quot;, &quot;2018-06-08&quot;)), VISIT_V3 = 3, GROUP = c(1, 2), WEIGHT3 = c(179, 194), DEM14GV3 = c(2, 3), T26A_V3 = c(2, 4), T26A_V3A = c(0, 0), T26A_V3B = c(1, 0), T31_V3B = c(0, 0), T31B_V3 = c(0, 0) ) 5.5 Get the existing column names v1_old_names &lt;- names(v1) v1_old_names ## [1] &quot;SUBJECT&quot; &quot;TODAY_V1&quot; &quot;VISIT_V1&quot; &quot;SQ_2&quot; &quot;WEIGHT&quot; &quot;DEMO16G&quot; ## [7] &quot;DEM15V1&quot; &quot;T26A_V1&quot; &quot;T26A_V1A&quot; &quot;T26A_V1B&quot; &quot;T31_V1B&quot; &quot;T31B_V1&quot; 5.6 Standardize new column names Remove _v{1, 2, 3} and v{1, 2, 3} from column names Replace spaces with underscores Convert to lower case Add underscore in-between the abbreviated tool name and question number This won‚Äôt be perfect, but it will drastically reduce the number of manual changes we have to make. # Remove _v1 from column name # Remove v1 at end of column name (e.g., DEM1v3) v1_new_names &lt;- stringr::str_replace(v1_old_names, &quot;_V1|V1&quot;, &quot;&quot;) # Replace spaces with underscores v1_new_names &lt;- stringr::str_replace_all(v1_new_names, &quot; &quot;, &quot;_&quot;) # Convert to lower case v1_new_names &lt;- stringr::str_to_lower(v1_new_names) # Add underscore in-between the abbreviated tool name and question number v1_new_names &lt;- stringr::str_replace(v1_new_names, &quot;([a-z])(\\\\d)&quot;, &quot;\\\\1_\\\\2&quot;) v1_new_names ## [1] &quot;subject&quot; &quot;today&quot; &quot;visit&quot; &quot;sq_2&quot; &quot;weight&quot; &quot;demo_16g&quot; ## [7] &quot;dem_15&quot; &quot;t_26a&quot; &quot;t_26aa&quot; &quot;t_26ab&quot; &quot;t_31b&quot; &quot;t_31b&quot; 5.7 Turn this into a function standardize_col_names &lt;- function(.data) { # Get the existing column names old_names &lt;- names(.data) # Create a string that contains _V1 through _V5 and V1 through V5 to pass to # the regular expression below v_num &lt;- paste0(&quot;_V&quot;, 1:5, collapse = &quot;|&quot;) vnum &lt;- paste0(&quot;V&quot;, 1:5, collapse = &quot;|&quot;) v_pattern &lt;- paste(paste(v_num, vnum, sep = &quot;|&quot;), collapse = &quot;|&quot;) # Remove _v{1, 2, 3} from column name # Remove v{1, 2, 3} at end of column name (e.g., DEM1v3) new_names &lt;- stringr::str_replace(old_names, v_pattern, &quot;&quot;) # Replace spaces with underscores new_names &lt;- stringr::str_replace_all(new_names, &quot; &quot;, &quot;_&quot;) # Convert to lower case new_names &lt;- stringr::str_to_lower(new_names) # Add underscore in-between the abbreviated tool name and question number new_names &lt;- stringr::str_replace(new_names, &quot;([a-z])(\\\\d)&quot;, &quot;\\\\1_\\\\2&quot;) # Return character vector of standardized column names new_names } # For testing # standardize_col_names(v1) 5.7.1 Make a unit test for the function test_that(&quot;standardize_col_names produces the expected column names.&quot;, { v1_test &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V1 = as.Date(c(&quot;2018-04-07&quot;, &quot;2018-05-03&quot;)), VISIT_V1 = 1, SQ_2 = c(1, 0), WEIGHT = c(179, 194), DEMO16G = c(0, 1), DEM15V1 = c(1, 0), T26A_V1 = c(2, 4), T26A_V1A = c(0, 0), T26A_V1B = c(1, 0), TEST_V8 = 0 ) new_names &lt;- standardize_col_names(v1_test) expceted_new_names &lt;- c( &quot;subject&quot;, &quot;today&quot;, &quot;visit&quot;, &quot;sq_2&quot;, &quot;weight&quot;, &quot;demo_16g&quot;, &quot;dem_15&quot;, &quot;t_26a&quot;, &quot;t_26aa&quot;, &quot;t_26ab&quot;, &quot;test_v_8&quot; ) expect_equal(new_names, expceted_new_names) }) ## Test passed üòÄ new_names &lt;- standardize_col_names(v1) 5.8 Manual changes to column names The step above used to standardize column names fixes most of them, but some manual changes to variable names still need to be made. new_names[new_names == &quot;sq_2&quot;] &lt;- &quot;sq_hispanic&quot; # demo_16g was incorrectly numbered when the data was created new_names[new_names == &quot;demo_16g&quot;] &lt;- &quot;dem_14g&quot; new_names[new_names == &quot;dem_15&quot;] &lt;- &quot;dem_veteran&quot; # Take the extra &quot;a&quot; out of all the T26 col names new_names &lt;- str_replace(new_names, &quot;t_26a&quot;, &quot;t_26&quot;) # Change the second t_31b to t_33 new_names[new_names == &quot;t_31b&quot;][2] &lt;- &quot;t_33&quot; 5.9 Have R write out the rename code So that you don‚Äôt have to type it out by hand. Ideally, you only have to run this code once, copy and paste into the rename code chunk below, and then just make small updates to the rename code chunk if changes are made to QDS. # If needed, run the code below. Copy and paste the output into the rename() # code chunk. Make manual changes as needed. new_old_name_pairs &lt;- paste(new_names, names(v1), sep = &quot; = &quot;) new_old_name_pairs &lt;- paste(new_old_name_pairs, collapse = &quot;, \\n&quot;) cat(new_old_name_pairs) ## subject = SUBJECT, ## today = TODAY_V1, ## visit = VISIT_V1, ## sq_hispanic = SQ_2, ## weight = WEIGHT, ## dem_14g = DEMO16G, ## dem_veteran = DEM15V1, ## t_26 = T26A_V1, ## t_26a = T26A_V1A, ## t_26b = T26A_V1B, ## t_31b = T31_V1B, ## t_33 = T31B_V1 5.9.1 Make it a function write_rename &lt;- function(.data, .new_names) { new_old_name_pairs &lt;- paste(.new_names, names(.data), sep = &quot; = &quot;) new_old_name_pairs &lt;- paste(new_old_name_pairs, collapse = &quot;, \\n&quot;) cat(new_old_name_pairs) } # For testing write_rename(v1, new_names) ## subject = SUBJECT, ## today = TODAY_V1, ## visit = VISIT_V1, ## sq_hispanic = SQ_2, ## weight = WEIGHT, ## dem_14g = DEMO16G, ## dem_veteran = DEM15V1, ## t_26 = T26A_V1, ## t_26a = T26A_V1A, ## t_26b = T26A_V1B, ## t_31b = T31_V1B, ## t_33 = T31B_V1 5.10 Rename the columns v1 &lt;- v1 %&gt;% rename( subject = SUBJECT, today = TODAY_V1, visit = VISIT_V1, sq_hispanic = SQ_2, weight = WEIGHT, dem_14g = DEMO16G, dem_veteran = DEM15V1, t_26 = T26A_V1, t_26a = T26A_V1A, t_26b = T26A_V1B, t_31b = T31_V1B, t_33 = T31B_V1 ) 5.11 Repeat the process for V2 new_names &lt;- standardize_col_names(v2) write_rename(v2, new_names) ## subject = SUBJECT, ## today = TODAY_V2, ## visit = VISIT_V2 v2 &lt;- v2 %&gt;% rename( subject = SUBJECT, today = TODAY_V2, visit = VISIT_V2 ) 5.12 Repeat the process for V3 new_names &lt;- standardize_col_names(v3) new_names[new_names == &quot;weight_3&quot;] &lt;- &quot;weight&quot; new_names[new_names == &quot;dem_15&quot;] &lt;- &quot;dem_veteran&quot; # Take the extra &quot;a&quot; out of all the T26 col names new_names &lt;- str_replace(new_names, &quot;t_26a&quot;, &quot;t_26&quot;) # Change the second t_31b to t_33 new_names[new_names == &quot;t_31b&quot;][2] &lt;- &quot;t_33&quot; write_rename(v3, new_names) ## subject = SUBJECT, ## today = TODAY_V3, ## visit = VISIT_V3, ## group = GROUP, ## weight = WEIGHT3, ## dem_14g = DEM14GV3, ## t_26 = T26A_V3, ## t_26a = T26A_V3A, ## t_26b = T26A_V3B, ## t_31b = T31_V3B, ## t_33 = T31B_V3 v3 &lt;- v3 %&gt;% rename( subject = SUBJECT, today = TODAY_V3, visit = VISIT_V3, group = GROUP, weight = WEIGHT3, dem_14g = DEM14GV3, t_26 = T26A_V3, t_26a = T26A_V3A, t_26b = T26A_V3B, t_31b = T31_V3B, t_33 = T31B_V3 ) 5.13 Merge all 3 visits Merge all 3 visits into a single data frame qds_all_visits &lt;- v1 %&gt;% bind_rows(v2) %&gt;% bind_rows(v3) %&gt;% arrange(subject, visit) qds_all_visits ## # A tibble: 6 √ó 13 ## subject today visit sq_hispanic weight dem_14g dem_veteran t_26 t_26a ## &lt;dbl&gt; &lt;date&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2001 2018-04-07 1 1 179 0 1 2 0 ## 2 2001 2018-04-30 2 NA NA NA NA NA NA ## 3 2001 2018-05-31 3 NA 179 2 NA 2 0 ## 4 2002 2018-05-03 1 0 194 1 0 4 0 ## 5 2002 2018-05-07 2 NA NA NA NA NA NA ## 6 2002 2018-06-08 3 NA 194 3 NA 4 0 ## # ‚Ä¶ with 4 more variables: t_26b &lt;dbl&gt;, t_31b &lt;dbl&gt;, t_33 &lt;dbl&gt;, group &lt;dbl&gt; 5.14 Final data cleaning Make a couple more column name changes Carry forward time-invariant variables qds_all_visits %&gt;% rename(id = subject, date_visit = today) %&gt;% # Carry forward time-invariant variables group_by(id) %&gt;% fill(sq_hispanic, dem_veteran, group, .direction = &quot;downup&quot;) %&gt;% ungroup %&gt;% DT::datatable(options = list(scrollX = TRUE)) 5.15 üü£The dplyr way Try getting the same result as above using dplyr (rename_with) functions instead of creating and manipulating separate column name vectors. # Clean up environment first rm(list = ls()) v1 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V1 = as.Date(c(&quot;2018-04-07&quot;, &quot;2018-05-03&quot;)), VISIT_V1 = 1, SQ_2 = c(1, 0), WEIGHT = c(179, 194), DEMO16G = c(0, 1), DEM15V1 = c(1, 0), T26A_V1 = c(2, 4), T26A_V1A = c(0, 0), T26A_V1B = c(1, 0), T31_V1B = c(0, 0), T31B_V1 = c(0, 0), # Making these up to test standardize_col_names when more than one duplicate # column name would be created. T32_V1B = c(1, 1), T32B_V1 = c(1, 1) ) v2 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V2 = as.Date(c(&quot;2018-04-30&quot;, &quot;2018-05-07&quot;)), VISIT_V2 = 2 ) v3 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V3 = as.Date(c(&quot;2018-05-31&quot;, &quot;2018-06-08&quot;)), VISIT_V3 = 3, GROUP = c(1, 2), WEIGHT3 = c(179, 194), DEM14GV3 = c(2, 3), T26A_V3 = c(2, 4), T26A_V3A = c(0, 0), T26A_V3B = c(1, 0), T31_V3B = c(0, 0), T31B_V3 = c(0, 0), # Making these up to test standardize_col_names when more than one duplicate T32_V3B = c(1, 1), T32B_V3 = c(1, 1) ) 5.15.1 Standardize new column names Remove _v{1, 2, 3} and v{1, 2, 3} from column names Replace spaces with underscores Convert to lower case Add underscore in-between the abbreviated tool name and question number This won‚Äôt be perfect, but it will drastically reduce the number of manual changes we have to make. standardize_col_names &lt;- function(.data) { # Get the existing column names # When used inside of rename_with(), the column names are automatically # passed into the function with/as .data. There is no need for names(.data). old_names &lt;- .data # Create a string that contains _V1 through _V5 and V1 through V5 to pass to # the regular expression below v_num &lt;- paste0(&quot;_V&quot;, 1:5, collapse = &quot;|&quot;) vnum &lt;- paste0(&quot;V&quot;, 1:5, collapse = &quot;|&quot;) v_pattern &lt;- paste(paste(v_num, vnum, sep = &quot;|&quot;), collapse = &quot;|&quot;) # Remove _v{1, 2, 3} from column name # Remove v{1, 2, 3} at end of column name (e.g., DEM1v3) new_names &lt;- stringr::str_replace(old_names, v_pattern, &quot;&quot;) # Replace spaces with underscores new_names &lt;- stringr::str_replace_all(new_names, &quot; &quot;, &quot;_&quot;) # Convert to lower case new_names &lt;- stringr::str_to_lower(new_names) # Add underscore in-between the abbreviated tool name and question number new_names &lt;- stringr::str_replace(new_names, &quot;([a-z])(\\\\d)&quot;, &quot;\\\\1_\\\\2&quot;) # Check for duplicate names if (!length(new_names) == length(unique(new_names))) { name_counts &lt;- table(new_names) dup_names &lt;- name_counts[name_counts &gt; 1] dup_names &lt;- names(dup_names) # Set the second instance of the duplicate name back to its original name for (i in seq_along(dup_names)) { index &lt;- which(new_names == dup_names[[i]]) new_names[index][2] &lt;- old_names[index][2] # Print a message letting the user know what happened warning( &quot;Warning: &quot;, old_names[index][2], &quot; Could not be standardized because it would have created a duplicate column name. \\n&quot; ) } } # Return character vector of standardized column names new_names } # For testing # standardize_col_names(names(v1)) # rename_with(v1, standardize_col_names) Standardize all 3 data frames in one step purrr::walk( .x = paste0(&quot;v&quot;, 1:3), .f = function(df_name) { df &lt;- get(df_name, envir = .GlobalEnv) df &lt;- rename_with(df, standardize_col_names) assign(df_name, df, envir = .GlobalEnv) } ) ## Warning in .fn(names[cols], ...): Warning: T31B_V1 Could not be standardized because it would have created a duplicate column name. ## Warning in .fn(names[cols], ...): Warning: T32B_V1 Could not be standardized because it would have created a duplicate column name. ## Warning in .fn(names[cols], ...): Warning: T31B_V3 Could not be standardized because it would have created a duplicate column name. ## Warning in .fn(names[cols], ...): Warning: T32B_V3 Could not be standardized because it would have created a duplicate column name. 5.15.2 Manual changes to column names 1 The step above used to standardize column names fixes most of them, but some manual changes to variable names still need to be made. First, only make the changes to the individual data frames that will affect the merge (e.g., weight and weight_3). After the merge, we will make changes to column names that need to be changed in multiple data frames (e.g., t_26a). By doing this after the merge, it reduces code repetition and reduces the risk of typos in the column names. # demo_16g was incorrectly numbered when the data was created v1 &lt;- rename(v1, dem_14g = demo_16g) # weight_3 was missing a &quot;v&quot; when it was created in the data frame v3 &lt;- rename(v3, weight = weight_3) 5.15.3 Merge all 3 visits Merge all 3 visits into a single data frame qds_all_visits &lt;- v1 %&gt;% bind_rows(v2) %&gt;% bind_rows(v3) %&gt;% arrange(subject, visit) DT::datatable(qds_all_visits, options = list(scrollX = TRUE)) 5.15.4 Manual changes to column names 2 We already made changes to the individual data frames that would have affected the merge (e.g., weight and weight_3). Now, we will make changes to column names that need to be changed in multiple data frames (e.g., t_26a). qds_all_visits &lt;- qds_all_visits %&gt;% rename( id = subject, date_visit = today, sq_hispanic = sq_2, dem_veteran = dem_15 ) %&gt;% # Take the extra &quot;a&quot; out of all the T26 col names rename_with( ~ str_replace(.x, &quot;t_26a&quot;, &quot;t_26&quot;) ) %&gt;% # Combine T31B_V1 and T31B_V3 as t_33 # Combine T32B_V1 and T32B_V3 as t_34 mutate( t_33 = if_else(is.na(T31B_V1), T31B_V3, T31B_V1), t_34 = if_else(is.na(T32B_V1), T32B_V3, T32B_V1) ) %&gt;% select(-T31B_V1, -T31B_V3, -T32B_V1, -T32B_V3) DT::datatable(qds_all_visits, options = list(scrollX = TRUE)) 5.15.5 Final data cleaning Carry forward time-invariant variables qds_all_visits %&gt;% # Carry forward time-invariant variables group_by(id) %&gt;% fill(sq_hispanic, dem_veteran, group, .direction = &quot;downup&quot;) %&gt;% ungroup %&gt;% DT::datatable(options = list(scrollX = TRUE)) 5.16 üü¢ Making a key in Google Sheets Why might I want to do this in the first place? Pros: Everyone can use Excel. Not everyone is comfortable using RStudio. So, people other than me may be intimidated if they need to look up the changes to the column names by opening an Rmd file in RStudio. If I need to look up changes to column names, it may be faster to do so in Excel. Cons: Creating the Excel sheet may be an additional layer of work. This process creates additional documents (i.e., other than the Rmd files) to keep track of and update. However, if ALL of the updates to column names go in this spreadsheet, then it should really be the only one that requires tracking and updating. Hard to use versioning for Excel. Why use Google Sheets instead of Excel? It has all of the pros above, plus versioning. Also, Google Sheets makes it easy to use regular expressions, which I‚Äôve found useful in the past. # Clean up environment first rm(list = ls()) v1 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V1 = as.Date(c(&quot;2018-04-07&quot;, &quot;2018-05-03&quot;)), VISIT_V1 = 1, SQ_2 = c(1, 0), WEIGHT = c(179, 194), DEMO16G = c(0, 1), DEM15V1 = c(1, 0), T26A_V1 = c(2, 4), T26A_V1A = c(0, 0), T26A_V1B = c(1, 0), T31_V1B = c(0, 0), T31B_V1 = c(0, 0), # Making these up to test standardize_col_names when more than one duplicate # column name would be created. T32_V1B = c(1, 1), T32B_V1 = c(1, 1) ) v2 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V2 = as.Date(c(&quot;2018-04-30&quot;, &quot;2018-05-07&quot;)), VISIT_V2 = 2 ) v3 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V3 = as.Date(c(&quot;2018-05-31&quot;, &quot;2018-06-08&quot;)), VISIT_V3 = 3, GROUP = c(1, 2), WEIGHT3 = c(179, 194), DEM14GV3 = c(2, 3), T26A_V3 = c(2, 4), T26A_V3A = c(0, 0), T26A_V3B = c(1, 0), T31_V3B = c(0, 0), T31B_V3 = c(0, 0), # Making these up to test standardize_col_names when more than one duplicate T32_V3B = c(1, 1), T32B_V3 = c(1, 1) ) 5.16.1 Create the Google Sheet column name key NOTE: You should only have to do this once. After you create the initial spreadsheet, all future changes to column names should occur directly in the spreadsheet. Create a new Google sheet. Name it. Rename the first sheet ‚Äúvisit1.‚Äù Name column A old_name and column B new_name. Create a character string of existing column names that you can copy and paste into the old_name column of the Google Sheet. names(v1) %&gt;% paste(collapse = &quot;\\n&quot;) %&gt;% cat() ## SUBJECT ## TODAY_V1 ## VISIT_V1 ## SQ_2 ## WEIGHT ## DEMO16G ## DEM15V1 ## T26A_V1 ## T26A_V1A ## T26A_V1B ## T31_V1B ## T31B_V1 ## T32_V1B ## T32B_V1 You can directly type new names into the new_name column. Or, you can use regular expressions in steps similar to what the standardize_col_names() function we created above does: Move new_name to column E Name column B lower and type the following function into B2: =LOWER(A2). Paste the formula down. Name column C remove_v1 and type the following function into C2: =REGEXREPLACE(B2, \"v1|_v1\", \"\"). Paste the formula down. Name column D add_underscore and type the following function into D2: =REGEXREPLACE(C2,\"([a-z])(\\d)\", \"$1_$2\"). Paste the formula down. Notice that Google Sheets uses $1 instead of \\\\1 for replacing with a capture group. Make final edits in the new_name column. 5.16.2 Import the Google Sheet column name key The first time you attempt to read-in a Google Sheet you will need to authenticate your Google user name and password. Make sure to click the check box next to ‚ÄúGrant Tidyverse API Packages permission to See, edit, create, delete, spreadsheets in Google Drive.‚Äù gs_col_name_key &lt;- read_sheet( &quot;https://docs.google.com/spreadsheets/d/1cnoOvVdblnKarVf_WQIyWtJDIOumI9VSP1WK2gTy0gU/edit?usp=sharing&quot;, sheet = &quot;visit1&quot; ) ## ! Using an auto-discovered, cached token. ## To suppress this message, modify your code or options to clearly consent to ## the use of a cached token. ## See gargle&#39;s &quot;Non-interactive auth&quot; vignette for more details: ## &lt;https://gargle.r-lib.org/articles/non-interactive-auth.html&gt; ## ‚Ñπ The googlesheets4 package is using a cached token for ## &#39;brad.cannell@gmail.com&#39;. ## Auto-refreshing stale OAuth token. ## ‚úì Reading from &quot;Google Sheet for column_names_prepping_many_for_merge.Rmd&quot;. ## ‚úì Range &#39;&#39;visit1&#39;&#39;. 5.16.3 Reorder and rename the current data frame You might be tempted to just rename the columns by doing something like this: names(v1) &lt;- gs_col_name_key$new_name That will work as long as there are the exact same number of columns in v1 as there are in are in gs_col_name_key$new_name, and the order of the columns in v1 perfectly matches the order of gs_col_name_key$new_name. A slightly more complex, but safer, way to do this is with rename(). Using new_name = old_name inside the rename function make it less likely to accidentally assign the wrong new_name to a column. 5.16.3.1 Create a named vector Create a named vector of old names and new names that you can pass to select() or rename(). rename_vector &lt;- gs_col_name_key$old_name names(rename_vector) &lt;- gs_col_name_key$new_name rename_vector ## id date_visit visit sq_hispanic weight dem_14g ## &quot;SUBJECT&quot; &quot;TODAY_V1&quot; &quot;VISIT_V1&quot; &quot;SQ_2&quot; &quot;WEIGHT&quot; &quot;DEMO16G&quot; ## dem_veteran t_26 t_26a t_26b t_31b t_33 ## &quot;DEM15V1&quot; &quot;T26A_V1&quot; &quot;T26A_V1A&quot; &quot;T26A_V1B&quot; &quot;T31_V1B&quot; &quot;T31B_V1&quot; ## t_32b t_34 ## &quot;T32_V1B&quot; &quot;T32B_V1&quot; 5.16.3.2 Reorder and rename the current data frame Reorder and rename the current data frame using rename_vector. v1 %&gt;% select(!!! rename_vector) %&gt;% DT::datatable(options = list(scrollX = TRUE)) 5.16.3.3 More columns in df than Sheet What if there are columns in the data frame that haven‚Äôt yet been added to the Google Sheet? v1 %&gt;% rowwise() %&gt;% mutate(T_Total = sum(c_across(T26A_V1:T32B_V1))) %&gt;% ungroup() %&gt;% rename(!!! rename_vector) %&gt;% DT::datatable(options = list(scrollX = TRUE)) It just leaves the extra column‚Äôs name unchanged, which is exactly what we want. 5.16.3.4 More columns in Sheet and df What if there are columns in the Google Sheet that aren‚Äôt in the data frame? rename_vector_2 &lt;- c(rename_vector, &quot;mms_1&quot; = &quot;MMS1&quot;) v1 %&gt;% rename(!!! rename_vector_2) %&gt;% DT::datatable(options = list(scrollX = TRUE)) ## Error: Can&#39;t rename columns that don&#39;t exist. ## x Column `MMS1` doesn&#39;t exist. R gives us a warning that we can work out. "],["contingency-tables.html", "6 Contingency Tables 6.1 ‚≠êÔ∏èOverview 6.2 üåéUseful websites 6.3 üì¶Load packages 6.4 Terminology 6.5 Scenario 6.6 Manually creating each data structure 6.7 Table objects 6.8 Convert a contingency table into a frequency table 6.9 Convert a contingency table into a data frame of observations 6.10 Convert a frequency table into a contingency table. 6.11 Convert a frequency table into a data frame of observations. 6.12 Bottom line 6.13 Helper functions", " 6 Contingency Tables 6.1 ‚≠êÔ∏èOverview In Epi III (and epidemiology in general) we use a lot of contingency tables - especially 2x2 contingency tables. In this note, we play around with several different ways of creating, and working with, contingency tables. This can include converting them to a data frame format for some analyses. We explore some of the pros and cons of each of each method. 6.2 üåéUseful websites Boston University Tables in R ‚Äì A quick practical overview. By Andri Signorell. Stack Overflow: Repeat each row of data.frame the number of times specified in a column Cookbook for R Stak Overflow: Convert contingency table to long data.frame 6.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) 6.4 Terminology In the text below, we use the following terminology to distinguish three different structural representations of our data: Data frame of observations: A data frame where each row represents one observation (typically an individual person). # Basic example df &lt;- tibble( medication = c(rep(&quot;No&quot;, 10), rep(&quot;Yes&quot;, 10)), fall = c(rep(&quot;No&quot;, 8), rep(&quot;Yes&quot;, 2), rep(&quot;No&quot;, 6), rep(&quot;Yes&quot;, 4)) ) %&gt;% print() ## # A tibble: 20 √ó 2 ## medication fall ## &lt;chr&gt; &lt;chr&gt; ## 1 No No ## 2 No No ## 3 No No ## 4 No No ## 5 No No ## 6 No No ## 7 No No ## 8 No No ## 9 No Yes ## 10 No Yes ## 11 Yes No ## 12 Yes No ## 13 Yes No ## 14 Yes No ## 15 Yes No ## 16 Yes No ## 17 Yes Yes ## 18 Yes Yes ## 19 Yes Yes ## 20 Yes Yes Contingency table: A grid-like table with the categories of one variable (typically the exposure of interest) making up the rows and the categories of a second variable (typically the outcome of interest) making up the columns of the table. The table contains the number of observations with the particular combination of row and column values that intersect at each cell. # Basic example table(df) ## fall ## medication No Yes ## No 8 2 ## Yes 6 4 Frequency table: A data frame of counts (and optionally, other relevant statistics), where each row represents a particular combination of values from two or more categorical variables. # Basic example df %&gt;% count(medication, fall) ## # A tibble: 4 √ó 3 ## medication fall n ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 No No 8 ## 2 No Yes 2 ## 3 Yes No 6 ## 4 Yes Yes 4 As the examples above illustrate, it‚Äôs pretty easy and straightforward to go from a data frame of observations to either a contingency table or a frequency table. What is currently less straightforward (or at least less well documented) is to: Manually create a contingency table. Convert a contingency table into a frequency table. Convert a contingency table into a data frame of observations. Convert a frequency table into a contingency table. Convert a frequency table into a data frame of observations. We go through each of these operations below. 6.5 Scenario This scenario is borrowed from the Boston University website. Data Summary Consider the following example regarding the management of Hodgkin lymphoma, a cancer of the lymphatic system. Years ago when a patient was diagnosed with Hodgkin Disease, they would frequently undergo a surgical procedure called a ‚Äústaging laparotomy.‚Äù The purpose of the staging laparotomy was to determine the extent to which the cancer had spread, because this was important information for determining the patient‚Äôs prognosis and optimizing treatment. At times, the surgeons performing this procedure would also remove the patient‚Äôs appendix, not because it was inflamed; it was done ‚Äúincidentally‚Äù in order to ensure that the patient never had to worry about getting appendicitis. However, performing an appendectomy requires transecting it, and this has the potential to contaminate the abdomen and the wound edges with bacteria normally contained inside the appendix. Some surgeons felt that doing this ‚Äúincidental appendectomy‚Äù did the patient a favor by ensuring that they would never get appendicitis, but others felt that it meant unnecessarily increasing the patient‚Äôs risk of getting a post-operative wound infection by spreading around the bacteria that was once inside the appendix. To address this, the surgeons at a large hospital performed a retrospective cohort study. They began by going through the hospital‚Äôs medical records to identify all subjects who had had a ‚Äústaging laparotomy performed for Hodgkin.‚Äù They then reviewed the medical record and looked at the operative report to determine whether the patient had an incidental appendectomy or not. They then reviewed the progress notes, the laboratory reports, the nurses notes, and the discharge summary to determine whether the patient had developed a wound infection during the week after surgery. The investigators reviewed the records of 210 patients who had undergone the staging procedure and found that 131 had also had an incidental appendectomy, while the other 79 had not. The data from that study are summarized in the table below. The numbers in the second and third columns indicate the number of subjects who did or did not develop a post-operative wound infection among those who had the incidental appendectomy (in the ‚ÄúYes‚Äù row) and those who did not have the incidental appendectomy (in the ‚ÄúNo‚Äù row). For example, the upper left cell indicates that seven of the subjects who had an incidental appendectomy (the exposure of interest) subsequently developed a wound infection. The upper right cell indicates that the other 124 subjects who had an incidental appendectomy did NOT develop a wound infection. Had incidental appendectomy? Wound infection No wound infection Total Yes 7 124 131 No 1 78 79 Total 8 202 210 6.6 Manually creating each data structure In this section, we manually create the incidental appendectomy data in all three structural representations (i.e., Data frame of observations, Contingency table, Frequency table). 6.6.1 Data frame of observations First, we can manually create tibble with one row for each person represented in the data above. Ordinarily, this is how the data would come to us. Then, we can use various different techniques ‚Äì some of which are demonstrated below ‚Äì to summarize the data as a 2x2 contingency table. In this case, we are working backwards from the data summary to the raw data just to show one way that it can be done. This isn‚Äôt necessarily a good way to do it, however. Later, we will demonstrate more efficient and less error-prone ways to create raw data from summary tables. df &lt;- tibble( appendectomy = factor(c(rep(&quot;Yes&quot;, 7), rep(&quot;Yes&quot;, 124), &quot;No&quot;, rep(&quot;No&quot;, 78))), infection = factor(c(rep(&quot;Yes&quot;, 7), rep(&quot;No&quot;, 124), &quot;Yes&quot;, rep(&quot;No&quot;, 78))) ) %&gt;% print() ## # A tibble: 210 √ó 2 ## appendectomy infection ## &lt;fct&gt; &lt;fct&gt; ## 1 Yes Yes ## 2 Yes Yes ## 3 Yes Yes ## 4 Yes Yes ## 5 Yes Yes ## 6 Yes Yes ## 7 Yes Yes ## 8 Yes No ## 9 Yes No ## 10 Yes No ## # ‚Ä¶ with 200 more rows 6.6.2 Frequency table Next, we will manually create a frequency table. In our experience, it isn‚Äôt common for analysts or investigators to manually create a frequency table representation of data. However, creating frequency tables this way is pretty straightforward and easy to do. We can do using the tibble() (or data.frame()) function. freq_tbl &lt;- tibble( appendectomy = c(&quot;Yes&quot;, &quot;Yes&quot;, &quot;No&quot;, &quot;No&quot;), infection = c(&quot;Yes&quot;, &quot;No&quot;, &quot;Yes&quot;, &quot;No&quot;), count = c(7, 124, 1, 78) ) %&gt;% print() ## # A tibble: 4 √ó 3 ## appendectomy infection count ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Yes Yes 7 ## 2 Yes No 124 ## 3 No Yes 1 ## 4 No No 78 Or by using the tribble() function. freq_tbl &lt;- tribble( ~appendectomy, ~infection, ~count, &quot;Yes&quot;, &quot;Yes&quot;, 7, &quot;Yes&quot;, &quot;No&quot;, 124, &quot;No&quot;, &quot;Yes&quot;, 1, &quot;No&quot;, &quot;No&quot;, 78 ) %&gt;% print() ## # A tibble: 4 √ó 3 ## appendectomy infection count ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Yes Yes 7 ## 2 Yes No 124 ## 3 No Yes 1 ## 4 No No 78 Either way, the end result is exactly the same. Which method of data entry you use is largely a matter of preference. As you can see below, we can also add marginal totals to our frequency table, which can be useful for other analyses we may want to do. # Add margins freq_tbl %&gt;% group_by(appendectomy) %&gt;% mutate(appendectomy_totals = sum(count)) %&gt;% group_by(infection) %&gt;% mutate(infection_totals = sum(count)) %&gt;% ungroup() %&gt;% mutate(margin_total = sum(count)) ## # A tibble: 4 √ó 6 ## appendectomy infection count appendectomy_totals infection_totals margin_total ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Yes Yes 7 131 8 210 ## 2 Yes No 124 131 202 210 ## 3 No Yes 1 79 8 210 ## 4 No No 78 79 202 210 6.6.3 Contingency tables The third type of data structure we will manually create is the contingency table ‚Äì the focus of this chapter. There are several ways to manually create contingency tables in R. We will demonstrate many of them below. 6.6.3.1 Matrix object First, we can manually create a contingency table as a matrix object. matrix_ct &lt;- matrix( c(a = 7, b = 124, c = 1, d = 78), ncol = 2, byrow = TRUE ) %&gt;% print() ## [,1] [,2] ## [1,] 7 124 ## [2,] 1 78 Then, we can add row and column names to make the matrix more readable. # Add names to make the matrix more readable rownames(matrix_ct) &lt;- c(&quot;Appendectomy&quot;, &quot;No Appendectomy&quot;) colnames(matrix_ct) &lt;- c(&quot;Infection&quot;, &quot;No Infection&quot;) matrix_ct ## Infection No Infection ## Appendectomy 7 124 ## No Appendectomy 1 78 Or alternatively like this. dimnames(matrix_ct) &lt;- list( c(&quot;Appendectomy&quot;, &quot;No Appendectomy&quot;), c(&quot;Infection&quot;, &quot;No Infection&quot;) ) matrix_ct ## Infection No Infection ## Appendectomy 7 124 ## No Appendectomy 1 78 Or alternatively like this. dimnames(matrix_ct) &lt;- list( Appendectomy = c(&quot;Yes&quot;, &quot;No&quot;), Infection = c(&quot;Yes&quot;, &quot;No&quot;) ) matrix_ct ## Infection ## Appendectomy Yes No ## Yes 7 124 ## No 1 78 Notice that the third method of adding row and column names produces slightly different results. And we can add marginal totals to the matrix. addmargins(matrix_ct) ## Infection ## Appendectomy Yes No Sum ## Yes 7 124 131 ## No 1 78 79 ## Sum 8 202 210 So, putting it all together, there are at least two processes to create a matrix with marginal totals. # Method 1. Calculate the marginal totals before using dimnames() matrix_ct &lt;- matrix( c(a = 7, b = 124, c = 1, d = 78), ncol = 2, byrow = TRUE ) matrix_ct_margins &lt;- addmargins(matrix_ct) dimnames(matrix_ct_margins) &lt;- list( Appendectomy = c(&quot;Yes&quot;, &quot;No&quot;, &quot;colsum&quot;), Infection = c(&quot;Yes&quot;, &quot;No&quot;, &quot;rowsum&quot;) ) matrix_ct_margins ## Infection ## Appendectomy Yes No rowsum ## Yes 7 124 131 ## No 1 78 79 ## colsum 8 202 210 # Method 2. Use rownames() and colnames() instead of dimnames() matrix_ct &lt;- matrix( c(a = 7, b = 124, c = 1, d = 78), ncol = 2, byrow = TRUE ) dimnames(matrix_ct) &lt;- list( Appendectomy = c(&quot;Yes&quot;, &quot;No&quot;), Infection = c(&quot;Yes&quot;, &quot;No&quot;) ) matrix_ct_margins &lt;- addmargins(matrix_ct) matrix_ct_margins ## Infection ## Appendectomy Yes No Sum ## Yes 7 124 131 ## No 1 78 79 ## Sum 8 202 210 At this point, I think I prefer method 2. Only because it leaves matrix_ct more readable. 6.6.3.2 Base R data frame with rownames Another option for manually creating a contingency table is to start with a base R data frame with row names (tibbles drop row names by default, which is usually a good thing). df_ct &lt;- data.frame( Infection = c(7, 1), `No Infection` = c(124, 78) ) # Add row names rownames(df_ct) &lt;- c(&quot;Appendectomy&quot;, &quot;No Appendectomy&quot;) df_ct ## Infection No.Infection ## Appendectomy 7 124 ## No Appendectomy 1 78 And we can add marginal totals to the data frame. However, we cannot do so with the addmargins() function. addmargins(df_ct) ## Error in FUN(newX[, i], ...): invalid &#39;type&#39; (list) of argument Therefore, it takes a little bit more code to add margins a contingency table created as a base R data frame. df_ct_margins &lt;- df_ct df_ct_margins &lt;- cbind(df_ct_margins, rowsum = rowSums(df_ct_margins)) df_ct_margins &lt;- rbind(df_ct_margins, colsum = colSums(df_ct_margins)) df_ct_margins ## Infection No.Infection rowsum ## Appendectomy 7 124 131 ## No Appendectomy 1 78 79 ## colsum 8 202 210 At this point, I prefer manually creating a contingency table by starting with a matrix than by starting with a base R data frame. This is primarily due to the fact that it‚Äôs easier to add margins to the matrix than it is to the data frame. 6.7 Table objects The table() function ‚Äúuses the cross-classifying factors to build a contingency table of the counts at each combination of factor levels.‚Äù (https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/table), and this is really R‚Äôs built-in method for working with contingency tables. However, I haven‚Äôt found a way to create a table object from scratch (i.e., without making a matrix or data frame first). In this section, we briefly demonstrate how to create a table object from a matrix and from a data frame. 6.7.1 Table object from matrix First, we will create a table from a matrix object. The code used here to first create the matrix is identical to the code above. matrix_ct &lt;- matrix( c(a = 7, b = 124, c = 1, d = 78), ncol = 2, byrow = TRUE ) dimnames(matrix_ct) &lt;- list( Appendectomy = c(&quot;Yes&quot;, &quot;No&quot;), Infection = c(&quot;Yes&quot;, &quot;No&quot;) ) matrix_ct ## Infection ## Appendectomy Yes No ## Yes 7 124 ## No 1 78 table_from_matrix &lt;- as.table(matrix_ct) table_from_matrix ## Infection ## Appendectomy Yes No ## Yes 7 124 ## No 1 78 The results look the same, but they are different under the hood. list( matrix_ct = class(matrix_ct), table_from_matrix = class(table_from_matrix) ) ## $matrix_ct ## [1] &quot;matrix&quot; &quot;array&quot; ## ## $table_from_matrix ## [1] &quot;table&quot; And again, we can add margins to the table object with the addmargins() function. addmargins(table_from_matrix) ## Infection ## Appendectomy Yes No Sum ## Yes 7 124 131 ## No 1 78 79 ## Sum 8 202 210 Tables in R ‚Äì A quick practical overview shows an alternative way to create a table object using a matrix as an intermediate step ‚Äì the rbind() function. table_from_matrix &lt;- as.table( rbind( c(7, 124), c(1, 78) ) ) dimnames(table_from_matrix) &lt;- list( Appendectomy = c(&quot;Yes&quot;, &quot;No&quot;), Infection = c(&quot;Yes&quot;, &quot;No&quot;) ) table_from_matrix ## Infection ## Appendectomy Yes No ## Yes 7 124 ## No 1 78 And again, we can add margins to the table object with the addmargins() function. addmargins(table_from_matrix) ## Infection ## Appendectomy Yes No Sum ## Yes 7 124 131 ## No 1 78 79 ## Sum 8 202 210 6.7.2 Table object from df Next, we will create a table from a data frame of observations. This is where the table() function comes in really handy! table_from_df &lt;- table(df) table_from_df ## infection ## appendectomy No Yes ## No 78 1 ## Yes 124 7 ‚ö†Ô∏èWarning: Notice that the ‚ÄúNo‚Äù category comes before the ‚ÄúYes‚Äù category by default when passing a data frame of observations to the table() function. This typically not the order we would put them in for analysis. To prevent this from happening, change the ordering of the factor levels in the data frame of observations (demonstrated below). # Make &quot;Yes&quot; the first factor level. Then, create the table. df_yn &lt;- df %&gt;% mutate( appendectomy = factor(appendectomy, levels = c(&quot;Yes&quot;, &quot;No&quot;)), infection = factor(infection, levels = c(&quot;Yes&quot;, &quot;No&quot;)) ) table_from_df &lt;- table(df_yn) table_from_df ## infection ## appendectomy Yes No ## Yes 7 124 ## No 1 78 And again, we can add margins to the table object with the addmargins() function. # Add margins table_from_df_margins &lt;- addmargins(table_from_df) table_from_df_margins ## infection ## appendectomy Yes No Sum ## Yes 7 124 131 ## No 1 78 79 ## Sum 8 202 210 6.7.3 Why use table objects? I used to think the table class allowed us to more easily manipulate and perform calculations on contingency tables than the matrix class does, but now I‚Äôm not sure it does. For example, addmargins() and prop.table() both work on the matrix object. Calculations (like incidence proportions below) work on both too. prop.table(matrix_ct) ## Infection ## Appendectomy Yes No ## Yes 0.033333333 0.5904762 ## No 0.004761905 0.3714286 addmargins(matrix_ct) ## Infection ## Appendectomy Yes No Sum ## Yes 7 124 131 ## No 1 78 79 ## Sum 8 202 210 # Add incidence proportion to a matrix contingency table ip &lt;- matrix_ct_margins[, &quot;Yes&quot;] / matrix_ct_margins[, &quot;Sum&quot;] matrix_ct_margins_ip &lt;- cbind(matrix_ct_margins, ip) matrix_ct_margins_ip ## Yes No Sum ip ## Yes 7 124 131 0.05343511 ## No 1 78 79 0.01265823 ## Sum 8 202 210 0.03809524 However, using the table() function is still the easiest way to convert a data frame of observations to a contingency table. Further, when we convert a contingency table into a data frame of observations below, converting to a table object is a necessary intermediate step. 6.8 Convert a contingency table into a frequency table 6.8.1 Matrix object When starting with a matrix contingency table, the easiest way to convert it to a frequency table is to first convert it to a [table object][Table-objects] using as.table(). Then, we pass that result to as.data.frame() to create a frequency table. This solution comes from Stack Overflow. matrix_ct %&gt;% as.table() %&gt;% as.data.frame() ## Appendectomy Infection Freq ## 1 Yes Yes 7 ## 2 No Yes 1 ## 3 Yes No 124 ## 4 No No 78 6.8.2 Table object from df When starting with a [table object made from a df][Table-object-from-df], we only need to pass it to the as.data.frame() function. Notice that the result is slightly different than above ‚Äì the order of df_yn %&gt;% table() %&gt;% as.data.frame() ## appendectomy infection Freq ## 1 Yes Yes 7 ## 2 No Yes 1 ## 3 Yes No 124 ## 4 No No 78 6.8.3 Data frame contingency table When starting from a [base R data frame contingency table][base-r-data-frame-with-rownames] (again, we don‚Äôt recommend doing this), there are a couple of options. These two come from Stack Overflow. The first method is a bit convoluted, but uses only base R functions. df_ct %&gt;% as.matrix() %&gt;% as.table() %&gt;% as.data.frame() ## Var1 Var2 Freq ## 1 Appendectomy Infection 7 ## 2 No Appendectomy Infection 1 ## 3 Appendectomy No.Infection 124 ## 4 No Appendectomy No.Infection 78 The second method is a Tidyverse solution. df_ct %&gt;% tibble::rownames_to_column() %&gt;% tidyr::pivot_longer(c(Infection, No.Infection)) ## # A tibble: 4 √ó 3 ## rowname name value ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Appendectomy Infection 7 ## 2 Appendectomy No.Infection 124 ## 3 No Appendectomy Infection 1 ## 4 No Appendectomy No.Infection 78 6.9 Convert a contingency table into a data frame of observations This is a really common conversion to want to make. We often come across data that is already in a 2x2 table and decide that we want to convert it into a data frame of observations to experiment with it or for some statistical procedures (e.g., regression). All of the methods I‚Äôve found so far require creating a frequency table as an intermediate step. 6.9.1 Matrix object # Convert from data frame of counts to data frame of cases. # `countcol` is the name of the column containing the counts # From: https://cran.r-project.org/web/packages/DescTools/vignettes/TablesInR.pdf countsToCases &lt;- function(x, countcol = &quot;Freq&quot;) { # Get the row indices to pull from x idx &lt;- rep.int(seq_len(nrow(x)), x[[countcol]]) # Drop count column x[[countcol]] &lt;- NULL # Get the rows from x x[idx, ] } matrix_ct %&gt;% as.table() %&gt;% as.data.frame() %&gt;% countsToCases() %&gt;% tibble() ## # A tibble: 210 √ó 2 ## Appendectomy Infection ## &lt;fct&gt; &lt;fct&gt; ## 1 Yes Yes ## 2 Yes Yes ## 3 Yes Yes ## 4 Yes Yes ## 5 Yes Yes ## 6 Yes Yes ## 7 Yes Yes ## 8 No Yes ## 9 Yes No ## 10 Yes No ## # ‚Ä¶ with 200 more rows (Delete) Works, but I don‚Äôt like it. I‚Äôm trying to figure out why. Maybe because it uses a table object and a frequency table object as an intermediate step? Why do I care about that, though? Also, perhaps I don‚Äôt like the final result? Do I want Yes/No values or variable name values in the final result (compare this result to the result below for ‚ÄúConvert a frequency table into a data frame of observations‚Äù). Let‚Äôs pull this function apart and really understand how it works. test_mat_ct_to_df &lt;- matrix_ct %&gt;% as.table() %&gt;% as.data.frame() test_mat_ct_to_df ## Appendectomy Infection Freq ## 1 Yes Yes 7 ## 2 No Yes 1 ## 3 Yes No 124 ## 4 No No 78 At this point, we have a frequency table of class data frame. # Create a vector if the number of times each combination (each row) from the # frequency table is to appear in the new data frame of observations # Count the number of rows in the df rows &lt;- nrow(test_mat_ct_to_df) # Create a sequence of integers from 1 to rows one_to_n_rows &lt;- seq_len(rows) # Pull vector of frequencies freqs &lt;- test_mat_ct_to_df[[&quot;Freq&quot;]] # Rep.int is just a faster, simplified version of rep combo_reps &lt;- rep.int(one_to_n_rows, freqs) combo_reps ## [1] 1 1 1 1 1 1 1 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 ## [38] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 ## [75] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 ## [112] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 ## [149] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 ## [186] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 # Drop the count (Freq) column from the frequency table test_mat_ct_to_df[[&quot;Freq&quot;]] &lt;- NULL test_mat_ct_to_df ## Appendectomy Infection ## 1 Yes Yes ## 2 No Yes ## 3 Yes No ## 4 No No # Repeat each row of test_mat_ct_to_df according to combo_reps df_obs_from_matrix_ct &lt;- test_mat_ct_to_df[combo_reps, ] # Drop weird numbered rownames rownames(df_obs_from_matrix_ct) &lt;- NULL df_obs_from_matrix_ct ## Appendectomy Infection ## 1 Yes Yes ## 2 Yes Yes ## 3 Yes Yes ## 4 Yes Yes ## 5 Yes Yes ## 6 Yes Yes ## 7 Yes Yes ## 8 No Yes ## 9 Yes No ## 10 Yes No ## 11 Yes No ## 12 Yes No ## 13 Yes No ## 14 Yes No ## 15 Yes No ## 16 Yes No ## 17 Yes No ## 18 Yes No ## 19 Yes No ## 20 Yes No ## 21 Yes No ## 22 Yes No ## 23 Yes No ## 24 Yes No ## 25 Yes No ## 26 Yes No ## 27 Yes No ## 28 Yes No ## 29 Yes No ## 30 Yes No ## 31 Yes No ## 32 Yes No ## 33 Yes No ## 34 Yes No ## 35 Yes No ## 36 Yes No ## 37 Yes No ## 38 Yes No ## 39 Yes No ## 40 Yes No ## 41 Yes No ## 42 Yes No ## 43 Yes No ## 44 Yes No ## 45 Yes No ## 46 Yes No ## 47 Yes No ## 48 Yes No ## 49 Yes No ## 50 Yes No ## 51 Yes No ## 52 Yes No ## 53 Yes No ## 54 Yes No ## 55 Yes No ## 56 Yes No ## 57 Yes No ## 58 Yes No ## 59 Yes No ## 60 Yes No ## 61 Yes No ## 62 Yes No ## 63 Yes No ## 64 Yes No ## 65 Yes No ## 66 Yes No ## 67 Yes No ## 68 Yes No ## 69 Yes No ## 70 Yes No ## 71 Yes No ## 72 Yes No ## 73 Yes No ## 74 Yes No ## 75 Yes No ## 76 Yes No ## 77 Yes No ## 78 Yes No ## 79 Yes No ## 80 Yes No ## 81 Yes No ## 82 Yes No ## 83 Yes No ## 84 Yes No ## 85 Yes No ## 86 Yes No ## 87 Yes No ## 88 Yes No ## 89 Yes No ## 90 Yes No ## 91 Yes No ## 92 Yes No ## 93 Yes No ## 94 Yes No ## 95 Yes No ## 96 Yes No ## 97 Yes No ## 98 Yes No ## 99 Yes No ## 100 Yes No ## 101 Yes No ## 102 Yes No ## 103 Yes No ## 104 Yes No ## 105 Yes No ## 106 Yes No ## 107 Yes No ## 108 Yes No ## 109 Yes No ## 110 Yes No ## 111 Yes No ## 112 Yes No ## 113 Yes No ## 114 Yes No ## 115 Yes No ## 116 Yes No ## 117 Yes No ## 118 Yes No ## 119 Yes No ## 120 Yes No ## 121 Yes No ## 122 Yes No ## 123 Yes No ## 124 Yes No ## 125 Yes No ## 126 Yes No ## 127 Yes No ## 128 Yes No ## 129 Yes No ## 130 Yes No ## 131 Yes No ## 132 Yes No ## 133 No No ## 134 No No ## 135 No No ## 136 No No ## 137 No No ## 138 No No ## 139 No No ## 140 No No ## 141 No No ## 142 No No ## 143 No No ## 144 No No ## 145 No No ## 146 No No ## 147 No No ## 148 No No ## 149 No No ## 150 No No ## 151 No No ## 152 No No ## 153 No No ## 154 No No ## 155 No No ## 156 No No ## 157 No No ## 158 No No ## 159 No No ## 160 No No ## 161 No No ## 162 No No ## 163 No No ## 164 No No ## 165 No No ## 166 No No ## 167 No No ## 168 No No ## 169 No No ## 170 No No ## 171 No No ## 172 No No ## 173 No No ## 174 No No ## 175 No No ## 176 No No ## 177 No No ## 178 No No ## 179 No No ## 180 No No ## 181 No No ## 182 No No ## 183 No No ## 184 No No ## 185 No No ## 186 No No ## 187 No No ## 188 No No ## 189 No No ## 190 No No ## 191 No No ## 192 No No ## 193 No No ## 194 No No ## 195 No No ## 196 No No ## 197 No No ## 198 No No ## 199 No No ## 200 No No ## 201 No No ## 202 No No ## 203 No No ## 204 No No ## 205 No No ## 206 No No ## 207 No No ## 208 No No ## 209 No No ## 210 No No 6.9.2 Table object Same as the matrix example above, there is just one less step because you‚Äôve already converted the matrix to a table object. table_from_matrix %&gt;% as.data.frame() %&gt;% countsToCases() %&gt;% tibble() ## # A tibble: 210 √ó 2 ## Appendectomy Infection ## &lt;fct&gt; &lt;fct&gt; ## 1 Yes Yes ## 2 Yes Yes ## 3 Yes Yes ## 4 Yes Yes ## 5 Yes Yes ## 6 Yes Yes ## 7 Yes Yes ## 8 No Yes ## 9 Yes No ## 10 Yes No ## # ‚Ä¶ with 200 more rows And for completeness, here is the table object we previously created from a data frame of observations. table_from_df %&gt;% as.data.frame() %&gt;% countsToCases() %&gt;% tibble() ## # A tibble: 210 √ó 2 ## appendectomy infection ## &lt;fct&gt; &lt;fct&gt; ## 1 Yes Yes ## 2 Yes Yes ## 3 Yes Yes ## 4 Yes Yes ## 5 Yes Yes ## 6 Yes Yes ## 7 Yes Yes ## 8 No Yes ## 9 Yes No ## 10 Yes No ## # ‚Ä¶ with 200 more rows 6.10 Convert a frequency table into a contingency table. The Cookbook for R also shows how you can convert a frequency table into a contingency table using the base R xtabs() function. As a reminder, freq_tbl was created above in the section on manually creating a frequency table. xtabs(count ~ appendectomy + infection, data = freq_tbl) ## infection ## appendectomy No Yes ## No 78 1 ## Yes 124 7 ‚ö†Ô∏èWarning: Notice that the ‚ÄúNo‚Äù category comes before the ‚ÄúYes‚Äù category by default when passing a frequency table to the xtabs() function. This typically not the order we would put them in for analysis. To prevent this from happening, change the ordering of the factor levels in the frequency table (demonstrated below). freq_tbl_yn &lt;- freq_tbl %&gt;% mutate( appendectomy = factor(appendectomy, levels = c(&quot;Yes&quot;, &quot;No&quot;)), infection = factor(infection, levels = c(&quot;Yes&quot;, &quot;No&quot;)) ) xtabs(count ~ appendectomy + infection, data = freq_tbl_yn) ## infection ## appendectomy Yes No ## Yes 7 124 ## No 1 78 6.11 Convert a frequency table into a data frame of observations. We already saw how to do this above as an intermediate step between a contingency table and a data frame of observations. freq_tbl %&gt;% countsToCases(&quot;count&quot;) ## # A tibble: 210 √ó 2 ## appendectomy infection ## &lt;chr&gt; &lt;chr&gt; ## 1 Yes Yes ## 2 Yes Yes ## 3 Yes Yes ## 4 Yes Yes ## 5 Yes Yes ## 6 Yes Yes ## 7 Yes Yes ## 8 Yes No ## 9 Yes No ## 10 Yes No ## # ‚Ä¶ with 200 more rows 6.12 Bottom line This section briefly distill down everything from above into the most common scenario we are actually working on ‚Äì Manually create a contingency table and then convert it to a data frame of observations. When we open a open a book or journal article and see a 2x2 table, or when we just decide to create a 2x2 table from scratch to do some experimenting, it looks like it‚Äôs best to start with a matrix and convert it to a table object. matrix_ct &lt;- matrix( c(a = 7, b = 124, c = 1, d = 78), ncol = 2, byrow = TRUE ) dimnames(matrix_ct) &lt;- list( Appendectomy = c(&quot;Yes&quot;, &quot;No&quot;), Infection = c(&quot;Yes&quot;, &quot;No&quot;) ) matrix_ct_margins &lt;- addmargins(matrix_ct) matrix_ct_margins ## Infection ## Appendectomy Yes No Sum ## Yes 7 124 131 ## No 1 78 79 ## Sum 8 202 210 You can go ahead and convert to a table at this point, but you don‚Äôt have to. Look back at the section on why to consider using a table object, but for now, I can‚Äôt come up with a good reason to do this off the top of my head. To then convert that contingency table to a data frame of observations, we use can simply use the following code. matrix_ct %&gt;% as.table() %&gt;% as.data.frame() %&gt;% countsToCases() %&gt;% tibble() ## # A tibble: 210 √ó 2 ## Appendectomy Infection ## &lt;fct&gt; &lt;fct&gt; ## 1 Yes Yes ## 2 Yes Yes ## 3 Yes Yes ## 4 Yes Yes ## 5 Yes Yes ## 6 Yes Yes ## 7 Yes Yes ## 8 No Yes ## 9 Yes No ## 10 Yes No ## # ‚Ä¶ with 200 more rows 6.13 Helper functions In some of the cases above, the solutions may be slightly unsatisfying, but they seem to work reasonably well. In this section, we create some helper functions to make working with contingency tables even easier ‚Äì especially in the context of working with the freqtables package. At some point, these functions may work their way into the freqtables package. 6.13.1 Create a contingency table After playing around with this a little bit, I couldn‚Äôt come up with a function that was really any better (i.e., less lines of code or easier to understand) than just creating the matrix using the standard base R functions. This is especially true when contingency tables However, I‚Äôm leaving the code here just in case. # Code for manually creating a matrix contingency table. matrix_ct &lt;- matrix( c(a = 7, b = 124, c = 1, d = 78), ncol = 2, byrow = TRUE ) dimnames(matrix_ct) &lt;- list( Appendectomy = c(&quot;Yes&quot;, &quot;No&quot;), Infection = c(&quot;Yes&quot;, &quot;No&quot;) ) matrix_ct_margins &lt;- addmargins(matrix_ct) matrix_ct_margins ## Infection ## Appendectomy Yes No Sum ## Yes 7 124 131 ## No 1 78 79 ## Sum 8 202 210 Here is the function code contingency_table &lt;- function(.values, ncol, dim_names, margins = FALSE) { # Create the matrix matrix_ct &lt;- matrix(.values, ncol = ncol, byrow = TRUE) # Optionally add dimnames if (!missing(dim_names)) { dimnames(matrix_ct) &lt;- dim_names } # Optionally add margins if (margins) { matrix_ct &lt;- addmargins(matrix_ct) } # Return contingency table matrix_ct } Testing with a 2x2 table contingency_table( .values = c( 7, 224, 1, 78 ), ncol = 2, dim_names = list( Appendectomy = c(&quot;Yes&quot;, &quot;No&quot;), Infection = c(&quot;Yes&quot;, &quot;No&quot;) ), margins = TRUE ) ## Infection ## Appendectomy Yes No Sum ## Yes 7 224 231 ## No 1 78 79 ## Sum 8 302 310 What if we need to make a contingency table for variables with more than two levels? For example: matrix_3_ct &lt;- matrix( c( 1, 2, 1, 0, 1, 1, 0, 1, 2 ), ncol = 3, byrow = TRUE ) dimnames(matrix_3_ct) &lt;- list( age = c(&quot;Young&quot;, &quot;Middle&quot;, &quot;Old&quot;), severity = c(&quot;Mild&quot;, &quot;Moderate&quot;, &quot;Severe&quot;) ) addmargins(matrix_3_ct) ## severity ## age Mild Moderate Severe Sum ## Young 1 2 1 4 ## Middle 0 1 1 2 ## Old 0 1 2 3 ## Sum 1 4 4 9 Testing with a 3x3 table contingency_table( .values = c( 1, 2, 1, 0, 1, 1, 0, 1, 2 ), ncol = 3, dim_names = list( age = c(&quot;Young&quot;, &quot;Middle&quot;, &quot;Old&quot;), severity = c(&quot;Mild&quot;, &quot;Moderate&quot;, &quot;Severe&quot;) ), margins = TRUE ) ## severity ## age Mild Moderate Severe Sum ## Young 1 2 1 4 ## Middle 0 1 1 2 ## Old 0 1 2 3 ## Sum 1 4 4 9 This works, but I‚Äôm not sure what advantage it has over the manual code. It‚Äôs roughly the same number of lines and it‚Äôs necessarily any easier to read or understand. What would the ideal solution even look like? Maybe something like this? # Doesn&#39;t run contingency_table( | Wound infection | |-------------------------|-----------------|-----| | Incidental appendectomy | Yes | No | | Yes | 7 | 124 | | No | 1 | 78 | ) Or perhaps a Shiny app that would allow to enter data into a spreadsheet-like interface? 6.13.2 üî¥Here down needs refinement 6.13.3 Counts to cases Rewrite this function # Convert from data frame of counts to data frame of cases. # `countcol` is the name of the column containing the counts # From: https://cran.r-project.org/web/packages/DescTools/vignettes/TablesInR.pdf countsToCases &lt;- function(x, countcol = &quot;Freq&quot;) { # Get the row indices to pull from x idx &lt;- rep.int(seq_len(nrow(x)), x[[countcol]]) # Drop count column x[[countcol]] &lt;- NULL # Get the rows from x x[idx, ] } [Insert function code here] 6.13.4 Freqtable to contingency table 6.13.5 Contingency table to freqtable 6.13.6 Freqtable to data frame of observations "],["effect-measure-modification.html", "7 Effect-measure modification 7.1 ‚≠êÔ∏èOverview 7.2 üåéUseful websites 7.3 üì¶Load packages 7.4 üî¢Simulate data", " 7 Effect-measure modification 7.1 ‚≠êÔ∏èOverview This chapter is about effect-measure modification and interaction. Add some notes about terminology: effect-measure modification vs effect modification vs statistical interaction vs biological interaction. 7.2 üåéUseful websites Modern Epidemiology 7.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) Modern Epidemiology, 4th edition, page 91-92: Suppose we divide our population into two or more categories or strata, defined by categories of a covariate that is a potential modifier. In each stratum, we can compare the exposed with the unexposed by calculating an effect measure of our choosing.20, 48 Often we would have no reason to suppose that these stratum-specific effect measures would equal one another. If they are not equal, we say that the effect measure is heterogeneous or modified or varies across strata of the modifier. If they are equal, we say that the measure is homogeneous, constant, or uniform across strata of the modifier. Note that what is in view here is how the effect of the exposure varies across strata of the modifier; these variations in the exposure effect may not reflect the effect of the modifier itself but possibly only that of some other variables related to the modifier.49, 50 See Chapter 26 for more complete descriptions of effect modification and effect-measure modification. A major point about effect-measure modification is that, if effects are present, it will usually be the case that no more than one of the effect measures discussed above will be uniform across strata of the modifier.20 In fact, if both the exposure and the modifier have an effect on the outcome, then at most one of the risk ratio or risk difference measures of the effect of the exposure can be uniform across strata of the modifier; in such cases, there will thus always be effect-measure modification for either the difference or the ratio scale. As an example, suppose that, among men, the average risk would be 0.50 if exposed but 0.20 if unexposed, whereas among women the average risk would be 0.10 if exposed but 0.04 if unexposed. Then the causal risk difference for men is 0.50 ‚àí 0.20 = 0.30, five times the difference for women of 0.10 ‚àí 0.04 = 0.06. In contrast, for both men and women, the causal risk ratio is 0.50 / 0.20 = 0.10 / 0.04 = 2.5. Now suppose we change this example to make the risk differences uniform, say, by making the exposed male risk 0.26 instead of 0.50. Then, both risk differences would be 0.06, but the male risk ratio would be 0.26 / 0.20 = 1.3, much less than the female risk ratio of 2.5. Finally, if we change the example by making the exposed male risk 0.32 instead of 0.50, the male risk difference would be 0.12, double the female risk difference of 0.06, but the male ratio would be 1.6 with relative excess ratio of 0.6, which is less than half the relative excess ratio of 1.5 computed from the female ratio of 2.5. Thus, the presence, direction, and size of effect-measure modification can be dependent on the choice of measure. Simulate this below‚Ä¶ 7.4 üî¢Simulate data set.seed(123) df &lt;- tibble( x = rnorm(26), y = letters ) "],["risk-difference.html", "8 Risk Difference 8.1 ‚≠êÔ∏èOverview 8.2 üåéUseful websites 8.3 üì¶Load packages 8.4 Data Summary 8.5 üî¢Simulate data 8.6 üìàAnalysis", " 8 Risk Difference üóíSide Note: Risk difference may be too narrow for a chapter. At some point, I will probably change this note to measures of disease occurrence. I just don‚Äôt have time to do it tonight. 8.1 ‚≠êÔ∏èOverview This chapter is about calculating and interpreting risk differences. Are a risk difference in an attributable risk the same thing? Yes, but attributable risk is an older term and it‚Äôs use is discouraged. https://sphweb.bumc.bu.edu/otlt/mph-modules/ep/ep713_association/ep713_association_print.html How do you interpret an attributable risk? https://sphweb.bumc.bu.edu/otlt/mph-modules/ep/ep713_association/ep713_association_print.html 8.2 üåéUseful websites The note on Contingency Tables Boston University 8.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) library(ggplot2) Using an example from the Boston University website: 8.4 Data Summary Consider the following example regarding the management of Hodgkin lymphoma, a cancer of the lymphatic system. Years ago when a patient was diagnosed with Hodgkin Disease, they would frequently undergo a surgical procedure called a ‚Äústaging laparotomy.‚Äù The purpose of the staging laparotomy was to determine the extent to which the cancer had spread, because this was important information for determining the patient‚Äôs prognosis and optimizing treatment. At times, the surgeons performing this procedure would also remove the patient‚Äôs appendix, not because it was inflamed; it was done ‚Äúincidentally‚Äù in order to ensure that the patient never had to worry about getting appendicitis. However, performing an appendectomy requires transecting it, and this has the potential to contaminate the abdomen and the wound edges with bacteria normally contained inside the appendix. Some surgeons felt that doing this ‚Äúincidental appendectomy‚Äù did the patient a favor by ensuring that they would never get appendicitis, but others felt that it meant unnecessarily increasing the patient‚Äôs risk of getting a post-operative wound infection by spreading around the bacteria that was once inside the appendix. To address this, the surgeons at a large hospital performed a retrospective cohort study. They began by going through the hospital‚Äôs medical records to identify all subjects who had had a ‚Äústaging laparotomy performed for Hodgkin.‚Äù They then reviewed the medical record and looked at the operative report to determine whether the patient had an incidental appendectomy or not. They then reviewed the progress notes, the laboratory reports, the nurses notes, and the discharge summary to determine whether the patient had developed a wound infection during the week after surgery. The investigators reviewed the records of 210 patients who had undergone the staging procedure and found that 131 had also had an incidental appendectomy, while the other 79 had not. The data from that study are summarized in the table below. The numbers in the second and third columns indicate the number of subjects who did or did not develop a post-operative wound infection among those who had the incidental appendectomy (in the ‚ÄúYes‚Äù row) and those who did not have the incidental appendectomy (in the ‚ÄúNo‚Äù row). For example, the upper left cell indicates that seven of the subjects who had an incidental appendectomy (the exposure of interest) subsequently developed a wound infection. The upper right cell indicates that the other 124 subjects who had an incidental appendectomy did NOT develop a wound infection. Had incidental appendectomy? Wound infection No wound infection Total Yes 7 124 131 No 1 78 79 Total 8 202 210 8.5 üî¢Simulate data First, simulate the data as a 2x2 contingency table. Here, we will experiment with structuring the contingency table in a few different ways. 8.5.1 Simulate a matrix object Create a contingency table using a matrix object. matrix &lt;- matrix( c(a = 7, b = 124, c = 1, d = 78), ncol = 2, byrow = TRUE ) # Add names to make the matrix more readable rownames(matrix) &lt;- c(&quot;Appendectomy&quot;, &quot;No Appendectomy&quot;) colnames(matrix) &lt;- c(&quot;Infection&quot;, &quot;No Infection&quot;) matrix ## Infection No Infection ## Appendectomy 7 124 ## No Appendectomy 1 78 8.6 üìàAnalysis 8.6.1 Incidence proportion Before calculating any other measures of occurrence, we first need to calculate the incidence proportion in each exposure group. crosstab_mat &lt;- cbind(matrix, rowsum = rowSums(matrix)) crosstab_mat ## Infection No Infection rowsum ## Appendectomy 7 124 131 ## No Appendectomy 1 78 79 ip &lt;- crosstab_mat[, &quot;Infection&quot;] / crosstab_mat[, &quot;rowsum&quot;] crosstab_mat &lt;- cbind(crosstab_mat, ip) crosstab_mat ## Infection No Infection rowsum ip ## Appendectomy 7 124 131 0.05343511 ## No Appendectomy 1 78 79 0.01265823 8.6.2 Risk Differences Instead of comparing two measures of disease frequency by calculating their ratio, one can compare them in terms of their absolute difference. The risk difference is calculated by subtracting the cumulative incidence in the unexposed group (or least exposed group) from the cumulative incidence in the group with the exposure. \\[ \\text{Risk Difference (RD)} = CI_e - CI_u \\] where (\\(CI_e\\)) = cumulative incidence among the exposed subjects, and (\\(CI_u\\)) is the cumulative incidence among unexposed subjects. The risk difference focuses on absolute effect of the risk factor, or the excess risk of disease in those who have the factor compared with those who don‚Äôt. Recall that in the wound infection study, the cumulative incidence of infection was 5.3% in the incidental appendectomy group, and only 1.3% in the group without appendectomies. The risk ratio was 4.2, but we can also compute the absolute difference, which is 5.3 / 100 - 1.3 / 100 = 4 per 100 excess wound infections among those who had the incidental appendectomy. \\(CI_\\)u provides an estimate of the baseline risk (i.e., in the absence of the exposure), and the exposure factor imposes an additional (excess) risk on top of that. üóíSide Note: Modern Epidemiology 4th edition uses the term incidence proportion instead of cumulative incidence.2 ip_exposed &lt;- crosstab_mat[&quot;Appendectomy&quot;, &quot;ip&quot;] ip_unexposed &lt;- crosstab_mat[&quot;No Appendectomy&quot;, &quot;ip&quot;] risk_difference &lt;- ip_exposed - ip_unexposed risk_difference ## [1] 0.04077689 risk_difference * 100 ## [1] 4.077689 8.6.2.1 Interpretation Subjects who had an incidental appendectomy had 4 additional cases of wound infection per 100 people compared to subjects who did not have an incidental appendectomy. Tip 1: If you have cumulative incidence expressed as percentage, convert % to convenient fractions so that you can express it as the excess risk in a group of people who have the risk factor. Tip 2: Focus your interpretation on the excess risk in the exposed group. Example: ‚ÄúThere were 4 excess wound infections per 100 subjects in the group that had incidental appendectomies, compared to the group without incidental appendectomy.‚Äù Tip 3: Don‚Äôt forget to specify the time interval when using cumulative incidence. This was not a problem in the appendectomy study because the time interval was so short and the time frame was implicit (in the postoperative period), but in most studies you need to describe the time interval for the cumulative incidence in words. Example: ‚ÄúIn the group that failed to adhere closely to the Mediterranean diet there were 120 excess deaths per 1,000 men during the two year period of observation compared to the group that did adhere to the Mediterranean diet.‚Äù 8.6.2.2 Graph tibble( appendectomy = factor(c(&quot;No&quot;, &quot;No&quot;, &quot;Yes&quot;, &quot;Yes&quot;)), base_rate = c(&quot;Yes&quot;, &quot;No&quot;, &quot;Yes&quot;, &quot;No&quot;), incidence = c(1.3, 0.0, 1.3, 4.0) ) %&gt;% ggplot() + geom_col(aes(x = appendectomy, y = incidence, fill = base_rate)) + scale_fill_manual(values = c(&quot;red&quot;, &quot;gray&quot;)) + labs( x = &quot;Had Incidental Appendectomy&quot;, y = &quot;Wound Infection Incidence per 100&quot; ) + theme_classic() + theme(legend.position = &quot;none&quot;) üóíSide Note: At some point, come back and annotate this to match the figure here. You may also want to add this to the data visualization note. References "],["plot-populations-and-samples.html", "9 Plot populations and samples 9.1 ‚≠êÔ∏èOverview 9.2 üåéUseful websites 9.3 üì¶Load packages 9.4 üî¢Simulate data", " 9 Plot populations and samples 9.1 ‚≠êÔ∏èOverview This chapter is about plotting out populations (usually of people) and samples (usually of people). This are mostly useful for teaching and training purposes 9.2 üåéUseful websites The note on Contingency Tables Stack Overflow: How to evenly plot geom_text in R? Stack Overflow: How to randomly scatter points inside a circle with ggplot, without clustering around the center? (In case you want to distribute them randomly) 9.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) library(ggplot2, warn.conflicts = FALSE) library(freqtables) 9.4 üî¢Simulate data set.seed(123) df &lt;- tibble( medication = c(rep(0, 10), rep(1, 10)), fall = c(rep(0, 8), rep(1, 2), rep(0, 6), rep(1, 4)) ) table(df) ## fall ## medication 0 1 ## 0 8 2 ## 1 6 4 Need to reorder this 1,0 instead of 0,1. Work on this in the contingency tables file. "],["blogdown.html", "10 Blogdown 10.1 ‚≠êÔ∏èOverview 10.2 üåéUseful websites 10.3 üì¶Load packages 10.4 Blogdown commands to remember 10.5 Creating new content 10.6 Editing widget metadata 10.7 Editing about widget content 10.8 Adjusting site configuration files 10.9 Other little adjustments 10.10 Custom CSS 10.11 Changing the domain 10.12 Error fixes 10.13 Adding Google Analytics", " 10 Blogdown 10.1 ‚≠êÔ∏èOverview This chapter contains blogdown notes. I started writing it as I was creating my bradcannell website on 2021-12-21. 10.2 üåéUseful websites Blogdown Book Up &amp; running with blogdown in 2021 Wowchemy docs Netlify custom domains Configure external DNS for a custom domain 10.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) library(blogdown) When creating my site, I closely followed the steps outlined in Up &amp; running with blogdown in 2021. Below there are some additional notes, and solutions I used for issues I came up against along the way. 10.4 Blogdown commands to remember When you start a new R session, it can be useful to view a preview of the site in the Viewer window. You do that with blogdown::serve_site() To check content blogdown::check_content() To check the status of Netlify blogdown::check_netlify() In the past I got the following error: Checking netlify.toml‚Ä¶ Error in find_config() : Cannot find the configuration file config.toml | config.yaml | config/_default/config.toml | config/_default/config.yaml of the website Ultimately, I just had to quit R and reopen ‚Äì not just restart R session. To check the Hugo versions blogdown::check_hugo() Let‚Äôs run one final check, which wraps all 5 checking functions we‚Äôve used so far into a single final checklist: blogdown::check_site() 10.5 Creating new content Here are some notes from when I created the ‚ÄúStudents‚Äù section of the brad.cannell website. Basically, I want a page were students can view currently available opportunities to get involved in research and find guidance on a range of topics. When creating new content with the Academic template, you can choose to add a widget to the homepage or to create a new page (or set of pages), which can also include widgets. I wanted ‚Äústudents‚Äù to be a separate page - not displayed on my homepage. I‚Äôm following guidance on Wowchemy‚Äôs Create content page to make the students page. 10.5.1 Step 1. Create a landing page I followed the guidance on Wowchemy‚Äôs Create a landing page documentation for this step. As a reminder, landing pages don‚Äôt necessarily contain much actual content. They contain widgets that link to content. Create the content/students folder. Create index.md inside content/students, and add a YAML header. This will be a widget page like the homepage. Create a nav bar link to the index.md. Open config/_default/menus.yaml Create a new entry Set name: to Students (or whatever you want to appear in the nav bar) Set url: to 'studetns/' (the name of the folder we created in 1 above) Adjust the weight to control the placement of the link on the nav bar 10.5.2 Step 2. Add widgets to the landing page I followed the guidance on Wowchemy‚Äôs page builder documentation for this step. I think I want to create the individual jobs (or job categories) as ‚Äúblog posts‚Äù then display them on the students page in a portfolio widget or a featured content widget. I‚Äôm playing around with both. 10.5.2.1 Add a welcome section I added a blank widget to the top of the students page and added some welcome text below the YAML header. 10.5.2.2 Add a portfolio widget to the students landing page I opened home/projects.md and saved it as students/opportunities_portfolio.md. Change active: false to active: true. At that point, the widget should should up on the students landing page. I started adjusting some of the parameters in the YAML header. For example, I changed the weight to 20, added a title, etc. Ultimately, I didn‚Äôt use the featured content widget. But, if you use it in the future, make sure the featured: parameter in the YAML header is set to true. Otherwise, the post won‚Äôt show up in the featured content widget. 10.5.3 Step 3. Add content to the widgets Individual content pages seem to always go in folders. The folders contain index.md files for written content and they also contain any other files the page needs (e.g., images or citation files). The banner photo has to be named featured. For the research opportunities widget on the students page, I created a new folder called opportunites in content. I tried putting it directly in the students folder, but that didn‚Äôt work. You tell markdown document that creates the widget (i.e., students/opportunities_portfolio.md) to use the documents in the content/opportunites folder by setting the content: page_type: parameter to the folder name. In this case, content: page_type: opportunites. If you want an image on the content page, it needs to be stored in the same folder as the index.md file that contains the content. Additionally, the image file must be named featured. Here was the YAML header for the GRA content page I made --- # GRA page accessed from the students page via a widget. title: Graduate research assistantships summary: Graduate research assistantships (GRAs) are paid positions. As a GRA, you are sort of a jack of all trades. You may be asked to help with completing human subjects protection documentation for the Institutional Review Board (IRB), data collection, data management and analysis, literature reviews for papers and grants, paper and grant writing, submitting reports to funding agencies, and administrative tasks (e.g., purchasing and arranging travel). date: &quot;2022-03-04&quot; authors: - admin featured: true image: caption: &#39;Photo by &lt;a href=&quot;https://unsplash.com/@esteejanssens?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText&quot;&gt;Est√©e Janssens&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/schedule?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&#39; focal_point: &quot;&quot; preview_only: false tags: - GRAs --- You can add markdown content below the YAML header. 10.5.4 Step 4. Add a banner image to the landing page. I found an image I wanted to use on unsplash. Copy home/banner.md to students/banner.md. The image file goes in assets/media/. Update the path to the picture and play around with other settings as needed. I adjusted the image size by experimenting with spacing:padding: [\"250px\", \"0\", \"100px\", \"0\"]. Don‚Äôt forget to give attribution to the photographer. For example: Photo by &lt;a href=&quot;https://unsplash.com/@homajob?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText&quot;&gt;Scott Graham&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/@mbcann01/likes?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt; Produces: Photo by Scott Graham on Unsplash 10.6 Editing widget metadata content &gt; home 10.7 Editing about widget content This includes degrees and social media stuff. authors &gt; admin &gt; _index.md 10.8 Adjusting site configuration files For example, nav bar. config &gt; _default &gt; 10.9 Other little adjustments Banner image To make my banner image full screen I had to add advanced: css_class: fullscreen To content &gt; home &gt; banner.md Map zoom in the contacts widget I changed the map zoom in the contacts widget to 9 instead of 15. I changed it in params.yaml. Copyright I added a copyright to the website in config.yaml I removed the license stuff from the footer in params.yaml. Search for copyright_license. 10.10 Custom CSS Here is the Wowchemy documentation. I created a custom CSS file at assets/scss/custom.scss. 10.11 Changing the domain Netlify custom domains Configure external DNS for a custom domain I had to add bradcannell.netlify.app to the www CNAME on godaddy. 10.12 Error fixes 10.12.1 blogdown::check_netlify() Checking netlify.toml‚Ä¶ Error in find_config() : Cannot find the configuration file config.toml | config.yaml | config/_default/config.toml | config/_default/config.yaml of the website Ultimately, I just had to quit R and reopen ‚Äì not just restart R session. 10.13 Adding Google Analytics https://wowchemy.com/docs/hugo-tutorials/analytic "],["book-chapters.html", "11 Bookdown: Creating Book Chapters 11.1 Chapter overview 11.2 Motivating example 11.3 Body 11.4 Cross-references 11.5 Citations 11.6 Previewing the chapter 11.7 Additional resources: function to check 11.8 Key terms : function to add to appendix 11.9 Final example code : function to add to appendix", " 11 Bookdown: Creating Book Chapters Chapters should pretty much just be about one distinct idea. Give some more thought to defining this more clearly. I think it will be important as I start incorporating the epidemiology stuff. Also, it should help with making things easier to find. Heading guidelines: * Useful for finding what you are looking for. 11.1 Chapter overview Very brief description of what they can expect. By the end of this chapter, we will be able to: 1. Placeholder 2. Placeholder Awesome if you can start with a funny picture or a cool quote. 11.2 Motivating example Recall that one of my [goals][Goals] is ‚ÄúTo start each concept with the end result and then deconstruct how we arrived at that result, where possible. I find that it is easier for me to understand new concepts when learning them as a component of a final product.‚Äù We won‚Äôt necessarily do this for every chapter (e.g., installing R and RStudio) if doing so doesn‚Äôt make sense. 11.3 Body 11.3.1 Language Use ‚Äúwe‚Äù and ‚Äúour‚Äù language. Make it friendly and informal. 11.3.2 Text conventions Bold text is used to highlight important terms, file names, and file extensions. Not every bolded term needs to go in the glossary. Use your best judgment. Highlighted inline code is used to emphasize small sections of R code and program elements such as variable or function names. 11.3.3 Special sections &lt;p class=&quot;note&quot;&gt; üóí**Side Note:** This is an example note. &lt;/p&gt; üóíSide Note: This is an example note. &lt;p class=&quot;warning&quot;&gt; ‚ö†Ô∏è**Warning:** This is an example warning &lt;/p&gt; ‚ö†Ô∏èWarning: This is an example warning 11.3.4 Images Don‚Äôt forget to add ‚Äúecho=FALSE‚Äù to the code chunk. Details on cross-referencing figures are given below. Every figure doesn‚Äôt need a caption. It can actually make things look sloppy. The only figures that NEED a caption are those figures that are cross-referenced. Because of the way the files are structured, You won‚Äôt be able to see pictures directly in the Rmd files without including ‚Äú../../‚Äù on the front the file paths. However, having ‚Äú../../‚Äù on the front of the file paths prevents the book from building appropriately. You can also directly use img tags. Here‚Äôs the one I used for my photo in R4Epi &lt;!-- Cannell profile photo --&gt; &lt;img align=&quot;right&quot; src=&quot;img/index/cannell-headshot copy.png&quot; alt=&quot;R4Epi hex logo&quot; width=&quot;250&quot; style=&quot;margin: 0 1em 0 1em; border-radius: 20px 0px 20px 0px;&quot;&gt; Yihui talks about some of the advantages of using knitr::include_graphics() here: https://bookdown.org/yihui/bookdown/figures.html. Most of them have to do with creating PDF documents. For HTML only, the img tag seems to be a little more customizable. 11.3.5 Font Awesome There are few different ways to incorporate font awesome icons into your output. The font awesome package (https://github.com/rstudio/fontawesome) is my favorite so far. Here are the social media links I added to R4Epi: **Contact** Connect with Dr. Cannell and follow his work. &lt;a href=&quot;https://www.bradcannell.com&quot; target=&quot;_blank&quot;&gt;`r fa(&quot;globe&quot;, fill = &quot;#003087&quot;, height=&quot;2em&quot;)`&lt;/a&gt; &lt;a href=&quot;https://www.facebook.com/Brad-Cannell-PhD-MPH-109345984850672&quot; target=&quot;_blank&quot;&gt;`r fa(&quot;facebook-square&quot;, fill = &quot;#4267B2&quot;, height=&quot;2em&quot;)`&lt;/a&gt; &lt;a href=&quot;https://www.linkedin.com/in/bradcannell/&quot; target=&quot;_blank&quot;&gt;`r fa(&quot;linkedin&quot;, fill = &quot;#2867B2&quot;, height=&quot;2em&quot;)`&lt;/a&gt; &lt;a href=&quot;https://twitter.com/brad_cannell&quot; target=&quot;_blank&quot;&gt;`r fa(&quot;twitter-square&quot;, fill = &quot;#198CD8&quot;, height=&quot;2em&quot;)`&lt;/a&gt; &lt;a href=&quot;https://www.instagram.com/brad_cannell/&quot; target=&quot;_blank&quot;&gt;`r fa(&quot;instagram-square&quot;, fill = &quot;#833AB4&quot;, height=&quot;2em&quot;)`&lt;/a&gt; 11.3.6 Links You can use standard markdown syntax for links: [Visible text](link_to_somewhere). Or you can use anchor tags. Anchor tags seem to be the only way to open links in a new tab (https://stackoverflow.com/questions/4425198/can-i-create-links-with-target-blank-in-markdown). See the social media icons above for an example. 11.3.7 Code blocks Add the following below code blocks‚Ä¶ üëÜHere‚Äôs what we did above: Use unordered lists for these sections. It allows for nested lists and code. Add line breaks in between the bullets. &lt;ul&gt; &lt;li&gt;You can type `?mutate` into your R console to view the help documentation for this function and follow along with the explanation below./li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;/ul&gt; 11.4 Cross-references 11.4.1 Cross-referencing figures To cross-reference figures: Label the code chunk that contains the figure (e.g., {r label, echo=FALSE}). Give the code chunk that contains the figure a caption (e.g., {r label, echo=FALSE, fig.cap=\"Some text.\"})) Then add \\@ref(fig:exampe-bookdown-img) to the text where you want to cross-reference the figure. ‚ö†Ô∏èWarning: The figure reference must go outside of punctuation. With a space. ‚ö†Ô∏èWarning: If you want to cross-reference figures or tables generated from a code chunk, please make sure the chunk label only contains alphanumeric characters (a-z, A-Z, 0-9), slashes (/), or dashes (-). ‚ö†Ô∏èWarning: If you want to cross-reference figures or tables generated from a code chunk, you must give the code chunk a caption. Example: The sentence below is written as ‚ÄúAs seen in the figure below. \\@ref(fig:paperpile)‚Äù As seen in the figure below. 11.1 11.4.2 Cross-referencing chapters There are a couple different ways you can cross-reference other chapters or other sections of the book. This is adapted from Jenny Bryan‚Äôs Happy Git and GitHub for the useR book. 11.4.2.1 Method 1. You can add a CSS id the behind the header using a hashtag inside curly braces (i.e., {#id}). Later, you can reference that section by writing the hash id inside parentheses (i.e., [some text to link](#id)). Method 1 is a good method when the section name is difficult or unwieldy to write out. It may also just be a good idea when you know ahead of time that you will want to cross-reference a section. Example: I added the CSS id {#cr-figs} to the section above called ‚ÄúCross-referencing figures.‚Äù The sentence below is written as ‚ÄúSee the section above on [cross-referencing figures](#cr-figs).‚Äù See the section above on cross-referencing figures. 11.4.2.2 Method 2 You can add a CSS id the behind the header using a hashtag inside curly braces (i.e., {#id}). Later, you can use the \\@ref(#id) format to make the cross-reference appear as a linked chapter/section number rather than linked text. Method 1 &amp; 2 are good methods when the section name is difficult or unwieldy to write out. They may also just be a good idea when you know ahead of time that you will want to cross-reference a section. The difference is really just a matter of style. Example: I added the CSS id {#cr-figs} to the section above called ‚ÄúCross-referencing figures.‚Äù The sentence below is written as ‚ÄúSee the section \\@ref(cr-figs) above about cross-referencing figures.‚Äù See the section 11.4.1 above about cross-referencing figures. Notice that I did NOT include the hashtag symbol when referencing the section. 11.4.2.3 Method 3 Simply write out the chapter/section header name inside square brackets (i.e., [Section header name] to create a text link to the chapter/section header. Example: This section is titled ‚ÄúCross-references.‚Äù The sentence below is written as ‚ÄúSee the [cross-references] section above.‚Äù See the cross-references section above. ‚ö†Ô∏èWarning: When using the chapter/section name inside square brackets, make sure to replace spaces with dashes (-). 11.4.2.4 Method 4 Write out some text that you want linked to the chapter/section header inside of square brackets, then immediately follow it with the chapter/section header name inside square brackets (i.e., [linked text][Section header name] to create a text link to the chapter/section header. Example: This section is titled ‚ÄúCross-references.‚Äù The sentence below is written as ‚ÄúSee the [section above on cross-referencing][Cross-references].‚Äù See the section above on cross-referencing. 11.5 Citations For more details, see Yihui Xie‚Äôs Bookdown book. Add whatever you want to cite to Paperpile. Navigate to Paperpile. Click on the document/article you want to cite. Click the drop-down arrow next to the ‚ÄúCite‚Äù button. Click the BibTeX option. This will copy a BibTeX citation to your clipboard. Figure 11.1: A screenshot of selecting BibTex in PaperPile. In RStudio, open book.bib, which should be in your book‚Äôs root directory. Paste the BibTeX citation into book.bib. Order the citations alphabetically by author‚Äôs last name. Save. For example, here is the book.bib entry for the Yihui Xie‚Äôs bookdown book: Then, to cite that book, type @key where you want the citation to appear ‚Äì the key part of @key is marked in the example above. So, I‚Äôm citing Yihui Xie‚Äôs bookdown book at the end of this sentence by typing @Xie2021-pn after the period with a space in between.3 üóíSide Note: You can change the citation style using the csl: parameter in index.Rmd. I typically use csl: ama.csl, but you can download other formats from https://github.com/citation-style-language/styles. 11.6 Previewing the chapter Supposed to use ‚Äúbookdown::preview_chapter(‚Äù03_what_is_r.Rmd‚Äú)‚Äù to preview chapters. I can‚Äôt get this to work for some reason. I created a new project that I can use a test environment. It‚Äôs in ‚ÄúR4Epi chapters in progress/bookdown_test_environment.‚Äù You have to build the whole book, but it should go fast because I don‚Äôt have all the chapters. 11.6.1 Miscelaneous Make liberal use of emojis. Start making videos to supplement content. 11.7 Additional resources: function to check Links to cheat sheets, websites, and videos. 11.8 Key terms : function to add to appendix Key terms covered in this chapter. 11.9 Final example code : function to add to appendix Succinct recap of the code used in this chapter without any explanation of how it works. You can use this as a quick reference later. We won‚Äôt necessarily do this for every chapter (e.g., installing R and RStudio) if doing so doesn‚Äôt make sense. References "],["bookdown-quick-start.html", "12 Bookdown: Quick Start 12.1 ‚≠êÔ∏èOverview 12.2 üåéUseful websites 12.3 Creating the bookdown project locally 12.4 Initiate a git repository 12.5 Create a github repository for the book 12.6 Configuring a publishing source for the GitHub Pages site 12.7 Modify _bookdown.yml 12.8 Modify _output.yml 12.9 Modify style.css 12.10 Modify index.Rmd 12.11 Creating bookdown chapters 12.12 Knitting the book 12.13 Errors and warnings", " 12 Bookdown: Quick Start 12.1 ‚≠êÔ∏èOverview Document the process of creating a bookdown book. Think of it as a quick start guide. Complete documentation at: https://bookdown.org/yihui/bookdown/ 12.2 üåéUseful websites Yihui Xie‚Äôs Bookdown book 12.3 Creating the bookdown project locally Start by clicking New Project -&gt; New Directory -&gt; Book project using Bookdown. Add a NOTES file and add it to .gitignore and .Rbuildignore using usethis: usethis::use_build_ignore(\"NOTES\") usethis::use_git_ignore(\"NOTES\") Delete all Rmd files except index.Rmd Create a folder named chapters. Edit the README file. It can say whatever you want it to. For examples, see here: https://github.com/brad-cannell/r4epi https://github.com/brad-cannell/r_notes Use this website to create a creative commons license Add a license file to the project‚Äôs root directory. Here is an example. This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. 12.4 Initiate a git repository You need to do this in order to connect to GitHub, and you need to connect to GitHub before editing some of the books configuration files because you will need to add links to the repository. Type ‚Äúusethis::use_git(message =‚ÄùInitial commit‚Äú)‚Äù in the R console. 12.5 Create a github repository for the book Go to: https://github.com/orgs/brad-cannell/dashboard Click New Name the repository. For example, ‚Äúr_notes‚Äù Optionally, type in a description. For example, ‚ÄúThis is the repository for my R notes bookdown project.‚Äù Make the repository public Don‚Äôt check the boxes for README, .gitignore, or license Click create repository Follow GitHub‚Äôs instructions for pushing the repository to GitHub. At this point, the GitHub repository should be set up. 12.6 Configuring a publishing source for the GitHub Pages site Useful websites: * https://bookdown.org/yihui/bookdown/github.html * https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site In the repository, click on Settings, then pages (on the left sidebar). Change the source to Branch:master, folder = docs 12.7 Modify _bookdown.yml Start with this example and modify as needed book_filename: &quot;R 4 Epidemiology&quot; repo: https://github.com/brad-cannell/r4epi output_dir: docs delete_merged_file: true language: ui: chapter_name: &quot;&quot; new_session: no rmd_subdir: [&quot;chapters&quot;] 12.8 Modify _output.yml Start with this example and modify as needed bookdown::gitbook: css: style.css config: toc: collapse: section scroll_highlight: yes before: | &lt;li&gt;&lt;a href=&quot;./&quot;&gt;R for Epidemiology&lt;/a&gt;&lt;/li&gt; after: | &lt;li&gt;&lt;a href=&quot;https://github.com/rstudio/bookdown&quot; target=&quot;blank&quot;&gt;Published with bookdown&lt;/a&gt;&lt;/li&gt; 12.9 Modify style.css /****************************************************************************** CSS for the R4Epi textbook ******************************************************************************/ /* CSS that came with bookdown */ p.caption { color: #777; margin-top: 10px; } p code { white-space: inherit; } pre { word-break: normal; word-wrap: normal; } pre code { white-space: inherit; } /* Font Styles */ .large-bold { font-size: 2em; font-weight: bold; } .underline { text-decoration: underline; } .red-text { color: red; } .code { color: #0365C0; font-family: &quot;Courier New&quot;, Courier, monospace; } /* Note styles */ .note { -moz-border-radius: 6px; -webkit-border-radius: 6px; background-color: #f0f7fb; border: solid 1px #3498db; border-radius: 6px; line-height: 18px; overflow: hidden; padding: 15px 15px; } .warning { -moz-border-radius: 6px; -webkit-border-radius: 6px; background-color: #FEFBEA; border: solid 1px #F2E394; border-radius: 6px; line-height: 18px; overflow: hidden; padding: 15px 15px; } 12.10 Modify index.Rmd Delete all the example text. Modify the YAML header. Here is an example: --- title: &quot;R for Epidemiology&quot; author: &quot;Brad Cannell&quot; date: &quot;2022-03-30&quot; site: bookdown::bookdown_site documentclass: book bibliography: [book.bib, packages.bib] link-citations: yes csl: ama.csl github-repo: brad-cannell/r4epi url: &#39;https://brad-cannell.github.io/r4epi/&#39; description: &quot;This is the textbook for Brad Cannell&#39;s Introduction to R Programming for Epidemiologic Research course.&quot; --- The csl: ama.csl part of the YAML header allows you to change the bibliography style. You can find a list of styles here: https://github.com/citation-style-language/styles For AMA, which I frequently want, you can just copy and paste from your templates folder. First-level headers become chapters. Use {-} at the end of the header if you don‚Äôt want the chapter to be numbered. For example # Welcome {-} 12.11 Creating bookdown chapters Each Rmd file is a chapter. Chapters can be broken up into parts. To do so, create a subdirectory for each part inside the chapters folder. The individual Rmd files (i.e.¬†chapters) go inside these folders. I typically prefix each folder name that aligns with the order the parts should appear in. For example 01_getting_started, 02_best_practices, etc. The first Rmd file in each part folder should have only this content: # (PART) Getting Started {-} &lt;!-- This Rmd just creates a part heading in the table of contents --&gt; Name the file 00_part_&lt;part_name&gt; All subsequent content chapters should start with a first level heading only ‚Äì No YAML. For example, # R scripts. For more on chapter content, see Bookdown template chapter 12.12 Knitting the book Click on the build tab, then click ‚ÄúBuild Book.‚Äù Commit the changes and push to GitHub. After a few minutes, you should see the GitHub pages version working. 12.13 Errors and warnings Output created: docs/index.html Warning message: In split_chapters(output, gitbook_page, number_sections, split_by, : You have 3 Rmd input file(s) but only 2 first-level heading(s). Did you forget first-level headings in certain Rmd files? Solution: Just ignore this. tlmgr: Local TeX Live (2019) is older than remote repository (2020). Solution: Run tinytex::reinstall_tinytex() ! sh: xelatex: command not found You might get this error when trying to build a book in pdf format. Solution: Install MacTEX: https://www.tug.org/mactex/ ! LaTeX Error: Cannot determine size of graphic in img/getting_started/01_install_r/download_r_mac.gif (no BoundingBox). Solution: This is from trying to make a pdf document with a gif in it. LaTeX doesn‚Äôt support gifs. Just make a just build the book in gitbook format. 2: The label(s) fig:source1 not found. Solution: Figures must have a caption in order to cross reference them. [WARNING] Citeproc: citation examples not found Solution: I haven‚Äôt found a solution yet, but so far the warning seems ignorable. "],["flexdashboard.html", "13 Flexdashboard 13.1 ‚≠êÔ∏èOverview 13.2 üåéUseful websites 13.3 üì¶Load packages 13.4 Tips 13.5 üî¢Simulate data", " 13 Flexdashboard 13.1 ‚≠êÔ∏èOverview This chapter is about using the flexdashboard package to create static dashboards with R. 13.2 üåéUseful websites https://pkgs.rstudio.com/flexdashboard/ 13.3 üì¶Load packages library(dplyr) library(flexdashboard) 13.4 Tips Think about coaching Steph with with DETECT dashboard: Don‚Äôt start with a dashboard. Start by creating the tables/graphs you want. Don‚Äôt clean the data in the dashboard Rmd file. 13.5 üî¢Simulate data set.seed(123) df &lt;- tibble( x = rnorm(26), y = letters ) "],["flextable.html", "14 Flextable 14.1 ‚≠êÔ∏èOverview 14.2 üåéUseful websites 14.3 üì¶Load packages 14.4 Load data 14.5 üîµ i and j 14.6 üîµ Flextable wrappers 14.7 üîµ Adding/modifying table content 14.8 üîµ Formatting 14.9 üîµLayout 14.10 üîµ Examples", " 14 Flextable 14.1 ‚≠êÔ∏èOverview Using the flextable package Some overlap with: Officer Tables 14.2 üåéUseful websites Using the flextable R package Flextable R package 14.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) library(officer, warn.conflicts = FALSE) library(flextable, warn.conflicts = FALSE) 14.4 Load data data(&quot;mtcars&quot;) 14.5 üîµ i and j i = rows j = columns 14.6 üîµ Flextable wrappers We can wrap flextable functions that we use repeatedly in a wrapper. my_ft_theme &lt;- function(ft, ...) { # Remove vertical cell padding ft &lt;- padding(ft, padding.top = 0, padding.bottom = 0, part = &quot;all&quot;) # Change font to TNR 11 ft &lt;- font(ft, fontname = &quot;Times New Roman&quot;, part = &quot;all&quot;) ft &lt;- fontsize(ft, part = &quot;all&quot;, size = 11) ft } And then use it like this: flextable(head(mtcars)) %&gt;% my_ft_theme() .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a66e06ec{}.cl-a6680738{font-family:'Times New Roman';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a668229a{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:0;padding-top:0;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a66863c2{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a66863cc{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a66863cd{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} mpgcyldisphpdratwtqsecvsamgearcarb21.061601103.902.62016.46014421.061601103.902.87517.02014422.84108933.852.32018.61114121.462581103.083.21519.44103118.783601753.153.44017.02003218.162251052.763.46020.221031 14.7 üîµ Adding/modifying table content 14.7.1 Add table title with bold part From SO 2020-08-23: https://stackoverflow.com/questions/63530204/is-there-a-way-to-bold-part-of-a-character-string-being-passed-to-add-header-lin?noredirect=1#comment112346997_63530204 mtcars_ft &lt;- flextable(head(mtcars)) %&gt;% # Add a blank title line to top of table add_header_lines(&quot;&quot;) %&gt;% # Use compose to bold &quot;Table #.&quot; compose( i = 1, part = &quot;header&quot;, value = as_paragraph( as_chunk(&quot;Table 1. &quot;, props = fp_text(bold = TRUE)), &quot;Here is my example mtcars ft.&quot; ), ) mtcars_ft .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a689fc8a{}.cl-a684a0be{font-family:'Arial';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a684a0c8{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a684aee2{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a684ea06{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a684ea07{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a684ea10{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} Table 1. Here is my example mtcars ft.mpgcyldisphpdratwtqsecvsamgearcarb21.061601103.902.62016.46014421.061601103.902.87517.02014422.84108933.852.32018.61114121.462581103.083.21519.44103118.783601753.153.44017.02003218.162251052.763.46020.221031 14.7.2 Adding blank rows I created a post about this on StackOverflow. When creating tables in Word reports, I often want to add blank rows in between variables. As a trivial toy example: doc &lt;- read_docx() table_no_breaks &lt;- mtcars %&gt;% count(cyl) table_no_breaks ## cyl n ## 1 4 11 ## 2 6 7 ## 3 8 14 table_no_breaks_ft &lt;- flextable(table_no_breaks) table_no_breaks_ft .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a69e77a0{}.cl-a699b382{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a699c23c{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a699e618{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a699e622{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a699e623{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} cyln41167814 doc &lt;- doc %&gt;% body_add_flextable(table_no_breaks_ft) %&gt;% body_add_par(&quot;&quot;) print( doc, &quot;examples/flextable_no_blank_rows.docx&quot; ) Results in a table that looks like this: flextable_no_blank_rows.docx I can add line breaks directly to the data frame like this: table_breaks &lt;- table_no_breaks %&gt;% mutate( across( everything(), as.character ) ) %&gt;% add_row(cyl = NA, n = NA, .after = 1) %&gt;% add_row(cyl = NA, n = NA, .after = 3) %&gt;% add_row(cyl = NA, n = NA, .after = 5) table_breaks ## cyl n ## 1 4 11 ## 2 &lt;NA&gt; &lt;NA&gt; ## 3 6 7 ## 4 &lt;NA&gt; &lt;NA&gt; ## 5 8 14 ## 6 &lt;NA&gt; &lt;NA&gt; table_breaks_ft &lt;- flextable(table_breaks) table_breaks_ft .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a6b9c2c6{}.cl-a6b4396e{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a6b44832{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a6b50dbc{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6b50dc6{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6b50dc7{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} cyln41167814 doc &lt;- doc %&gt;% body_add_flextable(table_breaks_ft) print( doc, &quot;examples/flextable_blank_rows.docx&quot; ) Which results in the Word table that I want: flextable_blank_rows.docx However, I would prefer to be able to add the blank rows directly to the flextable rather than the data frame the flextable is built from. To me, this is a formatting issue rather than a data issue, and I prefer to keep data issues (manipulation of data frames) and formatting issues (manipulation of Word tables) separate. Any advice is greatly appreciated! 14.7.3 Change column header text Example from Tables chapter, which is from L2C smartphone paper. Compose chapter in flextable book # Calculate group n&#39;s n_outcome &lt;- c(&quot;No&quot; = 53, &quot;Yes&quot; = 47) # Simulate data table &lt;- tribble( ~var, ~No, ~Yes, &quot;age&quot;, &quot;34.89 (30.19 - 39.58)&quot;, &quot;35.38 (30.58 - 40.19)&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;age_group&quot;, &quot;&quot;, &quot;&quot;, &quot; Younger than 30&quot;, &quot;58.49 (44.63 - 71.12)&quot;, &quot;61.70 (46.88 - 74.63)&quot;, &quot; 30 and Older&quot;, &quot;41.51 (28.88 - 55.37)&quot;, &quot;38.30 (25.37 - 53.12)&quot; ) flextable(table) %&gt;% width(width = c(3, 2, 2)) %&gt;% # Center the final two columns align(j = c(2, 3), align = &quot;center&quot;, part = &quot;all&quot;) %&gt;% # Change header names -- add subgroup Ns to headers set_header_labels( var = &quot;Characteristic&quot;, No = paste0(&quot;No\\n(n=&quot;, n_outcome[&quot;No&quot;], &quot;)&quot;), Yes = paste0(&quot;Yes\\n(n=&quot;, n_outcome[&quot;Yes&quot;], &quot;)&quot;) ) %&gt;% # Bold column headers bold(part = &quot;header&quot;) .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a6d9f4ec{}.cl-a6d520ca{font-family:'Helvetica';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a6d520d4{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a6d52e1c{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a6d52e26{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a6d5593c{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6d55946{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6d55947{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6d55948{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6d55950{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6d55951{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} CharacteristicNo(n=53)Yes(n=47)age34.89 (30.19 - 39.58)35.38 (30.58 - 40.19)age_group Younger than 3058.49 (44.63 - 71.12)61.70 (46.88 - 74.63) 30 and Older41.51 (28.88 - 55.37)38.30 (25.37 - 53.12) 14.7.4 Change row header text Example from Tables chapter, which is from L2C smartphone paper. Compose chapter in flextable book # Simulate data table &lt;- tribble( ~var, ~No, ~Yes, &quot;age&quot;, &quot;34.89 (30.19 - 39.58)&quot;, &quot;35.38 (30.58 - 40.19)&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;age_group&quot;, &quot;&quot;, &quot;&quot;, &quot; Younger than 30&quot;, &quot;58.49 (44.63 - 71.12)&quot;, &quot;61.70 (46.88 - 74.63)&quot;, &quot; 30 and Older&quot;, &quot;41.51 (28.88 - 55.37)&quot;, &quot;38.30 (25.37 - 53.12)&quot; ) flextable(table) %&gt;% width(width = c(3, 2, 2)) %&gt;% # Change text by location compose(i = 1, j = 1, value = as_paragraph(&quot;Age, mean (95% CI)&quot;)) %&gt;% # Change text conditionally compose(i = ~ var == &quot;age_group&quot;, j = 1, value = as_paragraph(&quot;Age group, row percent (95% CI)&quot;)) .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a6e9f3ec{}.cl-a6e51ef8{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a6e52be6{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a6e5506c{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6e55076{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6e55080{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6e55081{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6e55082{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6e5508a{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} varNoYesAge, mean (95% CI)34.89 (30.19 - 39.58)35.38 (30.58 - 40.19)Age group, row percent (95% CI) Younger than 3058.49 (44.63 - 71.12)61.70 (46.88 - 74.63) 30 and Older41.51 (28.88 - 55.37)38.30 (25.37 - 53.12) 14.7.5 Add footnote Example from Tables chapter, which is from L2C smartphone paper. Footnote documentation # Simulate data table &lt;- tribble( ~var, ~No, ~Yes, &quot;age&quot;, &quot;34.89 (30.19 - 39.58)&quot;, &quot;35.38 (30.58 - 40.19)&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;age_group&quot;, &quot;&quot;, &quot;&quot;, &quot; Younger than 30&quot;, &quot;58.49 (44.63 - 71.12)&quot;, &quot;61.70 (46.88 - 74.63)&quot;, &quot; 30 and Older&quot;, &quot;41.51 (28.88 - 55.37)&quot;, &quot;38.30 (25.37 - 53.12)&quot; ) Add a superscript ‚Äú1‚Äù behind age and a numbered footnote at the bottom of the table. flextable(table) %&gt;% width(width = c(3, 2, 2)) %&gt;% footnote(i = 1, j = 1, value = as_paragraph(&quot;Test Footnote&quot;)) .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a6fd453c{}.cl-a6f7ae88{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a6f7ae92{font-family:'Helvetica';font-size:6.6pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;position: relative;bottom:3.3pt;}.cl-a6f7bb76{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a6f7e09c{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6f7e0a6{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6f7e0a7{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6f7e0b0{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6f7e0b1{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6f7e0ba{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6f7e0bb{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a6f7e0bc{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} varNoYesage134.89 (30.19 - 39.58)35.38 (30.58 - 40.19)age_group Younger than 3058.49 (44.63 - 71.12)61.70 (46.88 - 74.63) 30 and Older41.51 (28.88 - 55.37)38.30 (25.37 - 53.12)1Test Footnote Or more than one at at a time: flextable(table) %&gt;% width(width = c(3, 2, 2)) %&gt;% footnote( i = c(1, 3), j = 1, value = as_paragraph( c(&quot;Age in years.&quot;, &quot;Age grouped above and below median.&quot;) ) ) .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a71138f8{}.cl-a70c0d6a{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a70c0d7e{font-family:'Helvetica';font-size:6.6pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;position: relative;bottom:3.3pt;}.cl-a70c1b7a{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a70c43e8{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a70c43f2{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a70c43f3{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a70c43fc{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a70c43fd{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a70c4406{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a70c4407{width:144pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a70c4408{width:216pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} varNoYesage134.89 (30.19 - 39.58)35.38 (30.58 - 40.19)age_group2 Younger than 3058.49 (44.63 - 71.12)61.70 (46.88 - 74.63) 30 and Older41.51 (28.88 - 55.37)38.30 (25.37 - 53.12)1Age in years.2Age grouped above and below median. 14.8 üîµ Formatting 14.8.1 Change font to TNR flextable(head(mtcars)) %&gt;% font(fontname = &quot;Times New Roman&quot;, part = &quot;all&quot;) .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a727b060{}.cl-a721de4c{font-family:'Times New Roman';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a721ebda{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a7222316{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a7222320{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a722232a{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} mpgcyldisphpdratwtqsecvsamgearcarb21.061601103.902.62016.46014421.061601103.902.87517.02014422.84108933.852.32018.61114121.462581103.083.21519.44103118.783601753.153.44017.02003218.162251052.763.46020.221031 14.8.2 Conditional formatting flextable(head(mtcars)) %&gt;% # If cyl is 4 turn all text blue color(i = ~ cyl == 4, color = &quot;blue&quot;) %&gt;% # mpg is greater than average mpg then format the color to red color(i = ~ mpg &gt; mean(mpg), j = &quot;mpg&quot;, color = &quot;red&quot;) .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a73d790e{}.cl-a73821b6{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a73821ca{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(255, 0, 0, 1.00);background-color:transparent;}.cl-a73821cb{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 255, 1.00);background-color:transparent;}.cl-a7382ff8{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a7386b9e{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a7386ba8{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a7386bb2{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} mpgcyldisphpdratwtqsecvsamgearcarb21.061601103.902.62016.46014421.061601103.902.87517.02014422.84108933.852.32018.61114121.462581103.083.21519.44103118.783601753.153.44017.02003218.162251052.763.46020.221031 14.9 üîµLayout 14.9.1 Autofit to contents flextable(head(mtcars)) %&gt;% autofit() .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a75eb1c8{}.cl-a757b6de{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a757c4da{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a757fd7e{width:35.8pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fd88{width:41.9pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fd92{width:34pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fd93{width:41.9pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fd9c{width:40.7pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fd9d{width:48.1pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fd9e{width:42.5pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fda6{width:31.5pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fda7{width:38.9pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fda8{width:41.9pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdb0{width:35.8pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdb1{width:40.7pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdb2{width:34pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdba{width:41.9pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdbb{width:42.5pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdbc{width:38.9pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdc4{width:48.1pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdc5{width:31.5pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdc6{width:35.8pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdce{width:38.9pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdcf{width:41.9pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdd0{width:41.9pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdd8{width:31.5pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdd9{width:34pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdda{width:48.1pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fde2{width:40.7pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fde3{width:42.5pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdec{width:41.9pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fded{width:42.5pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdee{width:40.7pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdef{width:31.5pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdf6{width:35.8pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fdf7{width:41.9pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fe00{width:34pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fe01{width:38.9pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fe02{width:48.1pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fe0a{width:35.8pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fe0b{width:41.9pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fe0c{width:48.1pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fe14{width:34pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fe1e{width:40.7pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fe1f{width:41.9pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fe20{width:42.5pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fe28{width:38.9pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a757fe29{width:31.5pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} mpgcyldisphpdratwtqsecvsamgearcarb21.061601103.902.62016.46014421.061601103.902.87517.02014422.84108933.852.32018.61114121.462581103.083.21519.44103118.783601753.153.44017.02003218.162251052.763.46020.221031 14.10 üîµ Examples Other good examples to check out: Sun Study report. stroke study -&gt; table_characteristics_by_network.Rmd. L2C quarterly reports. L2C paper_smartphone_app 14.10.1 LEAD panel summarize votes Simulate data summary_agreement_ad_abuse_type &lt;- tibble( CaseID = c(&quot;1001&quot;, &quot;1002&quot;, &quot;1003&quot;, &quot;1004&quot;, &quot;1005&quot;, &quot;1006&quot;), physical = rep(&quot;Agree&quot;, 6), sexual = rep(&quot;Agree&quot;, 6), emotional = c(&quot;Agree&quot;, &quot;Disagree&quot;, &quot;Agree&quot;, &quot;Agree&quot;, &quot;Agree&quot;, &quot;Agree&quot;), neglect = rep(&quot;Agree&quot;, 6), abandonment = c(&quot;Agree&quot;, &quot;Agree&quot;, NA, &quot;Agree&quot;, &quot;Agree&quot;, &quot;Agree&quot;), financial = rep(&quot;Agree&quot;, 6), selfneglect = rep(&quot;Agree&quot;, 6), TotalAgreement = c(TRUE, FALSE, FALSE, TRUE, TRUE, TRUE), AnyDisagreement = c(FALSE, TRUE, TRUE, FALSE, FALSE, FALSE) ) Make table summary_agreement_ad_abuse_type_ft &lt;- flextable( # Remove unneeded columns summary_agreement_ad_abuse_type %&gt;% select( CaseID, physical, sexual, emotional, neglect, abandonment, financial, selfneglect ) ) %&gt;% # Column width: Trial and error # Make a table and play with properties width( j = c(1:8), width = c(0.98, 0.66, 0.56, 0.78, 0.71, 1.01, 0.71, 0.90) ) %&gt;% # Improve readability of column headers set_header_labels(CaseID = &quot;Case Number&quot;, selfneglect = &quot;Self Neglect&quot;) %&gt;% # Add title to top of table # Add a blank title line to top of table add_header_lines(&quot;&quot;) %&gt;% # Use compose to bold &quot;Table #.&quot; compose( i = 1, part = &quot;header&quot;, value = as_paragraph( as_chunk(&quot;Table 2. &quot;, props = fp_text(bold = TRUE)), &quot;Presence/absence of unanimous agreement for each abuse type by case number.&quot; ), ) %&gt;% # Change font to times new roman font(fontname = &quot;Times New Roman&quot;, part = &quot;all&quot;) %&gt;% # Change background color of first column bg(j = 1, bg = &quot;#E5E8E8&quot;, part = &quot;body&quot;) %&gt;% # Center column headings align(i = 2, align = &quot;center&quot;, part = &quot;header&quot;) %&gt;% # Center body text align(align = &quot;center&quot;, part = &quot;body&quot;) %&gt;% # Conditionally format disagree to red color(i = ~ physical == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;physical&quot;), color = &quot;red&quot;) %&gt;% color(i = ~ sexual == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;sexual&quot;), color = &quot;red&quot;) %&gt;% color(i = ~ emotional == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;emotional&quot;), color = &quot;red&quot;) %&gt;% color(i = ~ neglect == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;neglect&quot;), color = &quot;red&quot;) %&gt;% color(i = ~ abandonment == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;abandonment&quot;), color = &quot;red&quot;) %&gt;% color(i = ~ financial == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;financial&quot;), color = &quot;red&quot;) %&gt;% color(i = ~ selfneglect == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;selfneglect&quot;), color = &quot;red&quot;) # For checking summary_agreement_ad_abuse_type_ft .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a7789e3a{}.cl-a772ce1a{font-family:'Arial';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a772ce24{font-family:'Times New Roman';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a772ce2e{font-family:'Times New Roman';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(255, 0, 0, 1.00);background-color:transparent;}.cl-a772db4e{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a772db58{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a7731474{width:70.6pt;background-color:rgba(229, 232, 232, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a773147e{width:47.5pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a773147f{width:40.3pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a7731480{width:56.2pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a7731488{width:51.1pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a7731489{width:64.8pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a773148a{width:72.7pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a773148b{width:70.6pt;background-color:rgba(229, 232, 232, 1.00);vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a7731492{width:56.2pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a7731493{width:51.1pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a7731494{width:72.7pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a7731495{width:64.8pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a773149c{width:47.5pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a773149d{width:40.3pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314a6{width:72.7pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314a7{width:51.1pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314a8{width:64.8pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314a9{width:70.6pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314b0{width:47.5pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314b1{width:40.3pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314ba{width:56.2pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314bb{width:47.5pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314bc{width:51.1pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314bd{width:72.7pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314c4{width:40.3pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314c5{width:56.2pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314c6{width:64.8pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a77314ce{width:70.6pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} Table 2. Presence/absence of unanimous agreement for each abuse type by case number.Case NumberphysicalsexualemotionalneglectabandonmentfinancialSelf Neglect1001AgreeAgreeAgreeAgreeAgreeAgreeAgree1002AgreeAgreeDisagreeAgreeAgreeAgreeAgree1003AgreeAgreeAgreeAgreeAgreeAgree1004AgreeAgreeAgreeAgreeAgreeAgreeAgree1005AgreeAgreeAgreeAgreeAgreeAgreeAgree1006AgreeAgreeAgreeAgreeAgreeAgreeAgree "],["language-for-publications.html", "15 Language for publications 15.1 ‚≠êÔ∏èOverview 15.2 üåéUseful websites 15.3 üì¶Load packages 15.4 Statistical software 15.5 IRB", " 15 Language for publications 15.1 ‚≠êÔ∏èOverview This chapter is about language I often need to use and adapt for peer reviewed publications. 15.2 üåéUseful websites R.Version Cite R and R packages 15.3 üì¶Load packages library(tidyverse, warn.conflicts = FALSE) library(freqtables) library(meantables) 15.4 Statistical software In manuscripts, I often want to say something about the software I used to conduct the statistical analyses. Here is an example. 15.4.1 R Statistical analyses were conducted using R version 4.1.0 (R Core Team, 2021) in RStudio version 1.4.1717 (RStudio Team, 2021) with the following packages: tidyverse (Wickham et al., 2019), freqtables (Cannell, 2020), meantables (Cannell, 2020). The functions below can be used to get citations and version numbers. citation() ## ## To cite R in publications use: ## ## R Core Team (2021). R: A language and environment for statistical ## computing. R Foundation for Statistical Computing, Vienna, Austria. ## URL https://www.R-project.org/. ## ## A BibTeX entry for LaTeX users is ## ## @Manual{, ## title = {R: A Language and Environment for Statistical Computing}, ## author = {{R Core Team}}, ## organization = {R Foundation for Statistical Computing}, ## address = {Vienna, Austria}, ## year = {2021}, ## url = {https://www.R-project.org/}, ## } ## ## We have invested a lot of time and effort in creating R, please cite it ## when using it for data analysis. See also &#39;citation(&quot;pkgname&quot;)&#39; for ## citing R packages. R.Version()$version.string ## [1] &quot;R version 4.1.0 (2021-05-18)&quot; # Won&#39;t run when I build book, but this is how you get the RStudio version number rstudioapi::versionInfo() ## Error: RStudio not running citation(&quot;tidyverse&quot;) ## ## Wickham et al., (2019). Welcome to the tidyverse. Journal of Open ## Source Software, 4(43), 1686, https://doi.org/10.21105/joss.01686 ## ## A BibTeX entry for LaTeX users is ## ## @Article{, ## title = {Welcome to the {tidyverse}}, ## author = {Hadley Wickham and Mara Averick and Jennifer Bryan and Winston Chang and Lucy D&#39;Agostino McGowan and Romain Fran√ßois and Garrett Grolemund and Alex Hayes and Lionel Henry and Jim Hester and Max Kuhn and Thomas Lin Pedersen and Evan Miller and Stephan Milton Bache and Kirill M√ºller and Jeroen Ooms and David Robinson and Dana Paige Seidel and Vitalie Spinu and Kohske Takahashi and Davis Vaughan and Claus Wilke and Kara Woo and Hiroaki Yutani}, ## year = {2019}, ## journal = {Journal of Open Source Software}, ## volume = {4}, ## number = {43}, ## pages = {1686}, ## doi = {10.21105/joss.01686}, ## } citation(&quot;freqtables&quot;) ## ## To cite package &#39;freqtables&#39; in publications use: ## ## Brad Cannell (2020). freqtables: Make Quick Descriptive Tables for ## Categorical Variables. R package version 0.1.0. ## https://CRAN.R-project.org/package=freqtables ## ## A BibTeX entry for LaTeX users is ## ## @Manual{, ## title = {freqtables: Make Quick Descriptive Tables for Categorical Variables}, ## author = {Brad Cannell}, ## year = {2020}, ## note = {R package version 0.1.0}, ## url = {https://CRAN.R-project.org/package=freqtables}, ## } 15.4.2 Stata All analyses were conducted using Stata 13 (StataCorp, 2013) 15.4.3 SAS All analyses were completed with SAS version 9.4 (SAS Institute, Cary, NC). 15.5 IRB The Committee for the Protection of Human Subjects at the University of Texas Health Science Center approved this project. The design and conduct of this study was reviewed and approved by the Committee for the Protection of Human Subjects at the University of Texas Health Science Center at Houston. The University of Florida‚Äôs IRB approved the use of de-identified data to conduct this analysis. "],["officer.html", "16 Officer 16.1 ‚≠êÔ∏èOverview 16.2 üåéUseful websites 16.3 üì¶Load packages 16.4 Formatted text 16.5 Bulleted list 16.6 Adding on to the end of a file. 16.7 Using bookmarks", " 16 Officer 16.1 ‚≠êÔ∏èOverview I don‚Äôt have time to do this right today, but I do make some good notes on using officer. Good examples to check out: LEAD panel monthly report. Sun Study report. stroke study -&gt; table_characteristics_by_network.Rmd. L2C quarterly reports. L2C Distress Tolerance Scale Paper At least until you figure out make files, I think the best thing to do is save tables and figures as files in the docs folder. Create a single R script to compile them all together and create the report. Use comments to specify what file the table/figure is created in. Still trying to figure out if it‚Äôs better to write text in Word and then add in tables and charts with bookmarks, or is it better to write everything in R? In general, it seems helpful/expedient to do as much of the prose and formatting as possible directly in the Word template. Then, just add numbers, tables, and graphs from R with bookmarks. ‚ö†Ô∏èWarning: When editing the code chunks below, you will need to add ‚Äú../../‚Äù in front of file paths that retrieve Word docs from or save word docs to the examples folder if you want them to work when you run them interactively. For example, ‚Äú../../examples/Word Template for Officer.docx.‚Äù However, you have to delete the ‚Äú../../‚Äù from the file paths in order for build book to work. 16.2 üåéUseful websites https://stackoverflow.com/ 16.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) library(officer, warn.conflicts = FALSE) library(flextable, warn.conflicts = FALSE) 16.4 Formatted text Can start with a template doc &lt;- read_docx(&quot;officer_word_template.docx&quot;) Or not doc &lt;- read_docx() %&gt;% body_add_par(&quot;DETECT LEAD Panel Initial Review Report&quot;, style = &quot;heading 1&quot;) %&gt;% body_add_par(paste(&quot;Updated: &quot;, Sys.Date())) %&gt;% body_add_par(&quot;&quot;) %&gt;% body_add_fpar( fpar( ftext( &quot;Total Initial Assessments:&quot;, prop = fp_text( font.family = &quot;Times New Roman&quot;, font.size = 11 ) ) ) ) print( doc, &quot;examples/officer_formatted_text.docx&quot; ) Link to Word Document on Dropbox # Output Word document # Update the year and month in the file name dynamically print( doc, paste(Sys.Date() %&gt;% format(&quot;%Y-%m&quot;), &quot; Initial Review Report.docx&quot;) ) 16.5 Bulleted list It‚Äôs possible to do. You need to make sure you create a bullet style in the template Word doc. See here: https://github.com/davidgohel/officer/issues/262 # Create Word doc ss_report &lt;- read_docx(&quot;examples/Word Template for Officer.docx&quot;) %&gt;% body_add_par(&quot;Sun Study Outcomes Report&quot;, style = &quot;heading 1&quot;) %&gt;% body_add_par(&quot;\\n&quot;) %&gt;% body_add_par(paste(&quot;Updated: &quot;, Sys.Date())) %&gt;% body_add_par(&quot;\\n&quot;) %&gt;% # Add bulleted list body_add_par(&quot;item 1&quot;, style = &quot;bullet&quot;) %&gt;% body_add_par(&quot;item 2&quot;, style = &quot;bullet&quot;) %&gt;% body_add_par(&quot;item 3&quot;, style = &quot;bullet&quot;) # Output Word document print( ss_report, &quot;examples/officer_bullets.docx&quot; ) Link to Word Document on Dropbox 16.6 Adding on to the end of a file. From the Sun Study. Need to clean up when I get time. Start with the same document we just made above. # Create Word doc ss_report &lt;- read_docx(&quot;examples/Word Template for Officer.docx&quot;) %&gt;% body_add_par(&quot;Sun Study Outcomes Report&quot;, style = &quot;heading 1&quot;) %&gt;% body_add_par(&quot;\\n&quot;) %&gt;% body_add_par(paste(&quot;Updated: &quot;, Sys.Date())) %&gt;% body_add_par(&quot;\\n&quot;) # Output Word document print( ss_report, &quot;examples/officer_bullets.docx&quot; ) Link to Word Document on Dropbox Now add a new section to the document. Section 1. Report on missing data # Load report and add to the end? ss_report &lt;- read_docx(&quot;examples/officer_bullets.docx&quot;) %&gt;% body_add_par(&quot;Test Text&quot;) # Output Word document print( ss_report, &quot;examples/officer_add_to_end.docx&quot; ) Link to Word Document on Dropbox This works. However, there was no advantage to doing it this way in the Sun Study example. In fact, what I‚Äôve found in general is that it typically works best to do as much adding text and formatting things as possible directly in the Word template. Then, just pretty much add flextables and plots to the Word template. 16.7 Using bookmarks Writing everything in an R script and then compiling to a Word document works alright, but wrapping everything in officer functions makes it hard to read. In this section, I‚Äôm seeing if I can type all the narrative in the Word template, then just add tables and figures into the Word template at bookmarks. Website about bookmarks: https://davidgohel.github.io/officer/reference/body_replace_text_at_bkm.html Have to create this with point and click in Word: http://howtomicrosoftofficetutorials.blogspot.com/2017/03/use-bookmarks-in-word-2016-for-mac.html Use Insert &gt; Links &gt; Bookmark If you don‚Äôt add other text around the bookmark, you will get this error: Error: bookmark ‚Äòexample_table‚Äô does not end in the same paragraph (or is on the whole paragraph) A hacky fix is to enclose bookmark text with bm text . Make sure only the ‚Äútext‚Äù part is the bookmark. I also found that you can‚Äôt continue piping the document after you‚Äôve added a flextable at a bookmark. You have to start overwriting the Word document object. See LEAD Panel Summary Report as an example. doc_w_bookmarks &lt;- read_docx(&quot;examples/Word Template for Officer Bookmarks.docx&quot;) %&gt;% body_replace_flextable_at_bkm( bookmark = &quot;example_table&quot;, value = flextable(head(mtcars)) ) print( doc_w_bookmarks, &quot;examples/officer_bookmarks.docx&quot; ) Link to Word Document on Dropbox After figuring this out, I think it makes more sense to write in Word and replace tables and figures with bookmarks. For ggplot graphs, it looks like you need to use ggsave to save the plot as an image file. Then, use the image file as the value to body_replace_img_at_bkm() Don‚Äôt forget to use external_img() Example from L2C quarterly report: doc &lt;- doc %&gt;% body_replace_text_at_bkm(&quot;n_phone_terminations&quot;, as.character(n_phone_terminations)) %&gt;% body_replace_img_at_bkm( &quot;fig_phone_terminations&quot;, external_img(&quot;fig_1.jpeg&quot;, width = 7, height = 4) ) For images, just add the bookmark to the end of the title without surrounding it with ‚Äúbm.‚Äù For example, ‚ÄúFigure 1. Overall trend in sunscreen application outcomes by study p_overall‚Äù Where ‚Äúp_overall is the bookmark. Otherwise, the‚Äùbm\" will still be there. For best results, the width and height used in ggsave() should match the width and height in external_img(). Deciding on the correct width and height might take some trial and error. To add an updated date, use this: doc_w_bookmarks &lt;- doc_w_bookmarks %&gt;% body_replace_text_at_bkm(&quot;date&quot;, as.character(Sys.Date())) "],["tables.html", "17 Tables 17.1 ‚≠êÔ∏èOverview 17.2 Projects to review and incorporate 17.3 üåéUseful websites 17.4 üì¶Load packages 17.5 üî¢Simulate data 17.6 üîµ Example: Table 1", " 17 Tables 17.1 ‚≠êÔ∏èOverview This chapter is about formatting and presenting statistical results in tables. The immediate results of statistical analyses are rarely fit for general consumption. This chapter walks through strategies and functions we can use to make our results ready for presentation/dissemination. Tables are one of the most popular ways to present information to our audience. When our goal is to show our readers precise numerical summaries of our data, the exact values that resulted from our analysis are important. However, the specific details that we may want to present from table to table, or the way in which we want to present them, can vary widely. For example, an initial table of descriptive information about our participants may or may not be stratified by subgroups of interest. Additionally, it may include variables of different types, and for any given type, it may include various different kinds of numerical summaries. Further, there are numerous types of inferential models that result in numerical summaries that we may want to present in a table. For these reasons, it is difficult to create a good one-size-fits-all approach to automating the process of making results ready for presentation and dissemination. Having said that, below we walk through some basic strategies for automating the processes of putting results into presentation-ready summary tables ‚Äì and in a way that makes updating them (which happens A LOT) as painless as possible. 17.2 Projects to review and incorporate stroke study -&gt; table_characteristics_by_network.Rmd to see an example of doing this with purrr::map. When you have time, you should add an example into this document. See Sun Study Report Template for a good example of automating this with Officer and Flextable. I used a little different method in Link2Care &gt; paper_smartphone_app &gt; table_use_app.Rmd. Try to work some of that in below. /Users/bradcannell/Dropbox/01 Research/Elder Abuse/DETECT NIH RFA-AG-18-010/LEAD Panel/summarise_lead_votes/report_filemaker.Rmd This chapter also kind of overlaps with the Flexdashboard and Officer chapters. At some point, I should think about the best way to link and organize the chapters. Another option is to put all the flextable stuff in this chapter. I might still want a separate chapter about officer. 17.3 üåéUseful websites Officer Word document generation Flextable Overview R gtsummary package 17.4 üì¶Load packages library(dplyr, warn.conflicts = FALSE) library(DT) library(meantables) library(freqtables) library(tidyr) library(purrr) library(flextable, warn.conflicts = FALSE) library(officer) 17.5 üî¢Simulate data Have you noticed how we will often calculate the same statistical measures for many different variables in our data? For example, let‚Äôs say that we have some pretty standard data about some study participants that looks like this: study &lt;- tibble( id = c(1:100), age = c(32, 30, 32, 29, 24, 38, 25, 24, 48, 29, 22, 29, 24, 28, 24, 25, 25, 22, 25, 24, 25, 24, 23, 24, 31, 24, 29, 24, 22, 23, 26, 23, 24, 25, 24, 33, 27, 25, 26, 26, 26, 26, 26, 27, 24, 43, 25, 24, 27, 28, 29, 24, 26, 28, 25, 24, 26, 24, 26, 31, 24, 26, 31, 34, 26, 25, 27, 40, 35, 43, 81, 18, 79, 45, 37, 66, 35, 81, 50, 54, 24, 47, 84, 38, 23, 74, 77, 65, 46, 55, 41, 84, 41, 29, 60, 60, 40, 53, 31, 77), age_group = c(2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2), gender = c(2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1), ht_in = c(70, 63, 62, 67, 67, 58, 64, 69, 65, 68, 63, 68, 69, 66, 67, 65, 64, 75, 67, 63, 60, 67, 64, 73, 62, 69, 67, 62, 68, 66, 66, 62, 64, 68, NA, 68, 70, 68, 68, 66, 71, 61, 62, 64, 64, 63, 67, 66, 69, 76, NA, 63, 64, 65, 65, 71, 66, 65, 65, 71, 64, 71, 60, 62, 61, 69, 66, NA, 73, 71, 72, 76, 74, 63, 65, 65, 73, 76, 66, 58, 65, 65, 65, 68, 71, 68, 60, 70, 68, 62, 74, 68, 76, 72, 59, 76, 61, 72, 69, 59), wt_lbs = c(216, 106, 145, 195, 143, 125, 138, 140, 158, 167, 145, 297, 146, 125, 111, 125, 130, 182, 170, 121, 98, 150, 132, 250, 137, 124, 186, 148, 134, 155, 122, 142, 110, 132, 188, 176, 188, 166, 136, 147, 178, 125, 102, 140, 139, 60, 147, 147, 141, 232, 186, 212, 110, 110, 115, 154, 140, 150, 130, NA, 171, 156, 92, 122, 102, 163, 141, NA, 106, 118, 205, 229, 198, 255, 268, 203, 269, 162, 115, 106, 139, 246, 147, 206, 202, 209, 123, 265, 119, 171, 195, 136, 208, 108, 201, 224, 261, 169, 295, 93) ) %&gt;% # Add calculated variables mutate( bmi = round(wt_lbs / ht_in^2 * 703, 2), bmi_4cat = case_when( is.na(bmi) ~ NA_real_, # Missing bmi &lt; 18.5 ~ 1, # Underweight bmi &lt; 25 ~ 2, # Normal weight bmi &lt; 30 ~ 3, # Overweight TRUE ~ 4 # Obese ) ) %&gt;% # Create exposure and outcome where, # Exposure is more likely in people over age 30 and # Outcome is more likely in peeople with exposure mutate( exposure = if_else( age_group == 1, sample(c(0,1), 100, TRUE, c(.9, .1)), sample(c(0,1), 100, TRUE, c(.7, .3)) ), outcome = if_else( exposure == 1, sample(c(0,1), 100, TRUE, c(.8, .2)), sample(c(0,1), 100, TRUE, c(.5, .5)) ) ) %&gt;% # Make factors mutate( age_group = factor(age_group, labels = c(&quot;Younger than 30&quot;, &quot;30 and Older&quot;)), gender = factor(gender, labels = c(&quot;Female&quot;, &quot;Male&quot;)), bmi_4cat = factor(bmi_4cat, labels = c(&quot;Underweight&quot;, &quot;Normal&quot;, &quot;Overweight&quot;, &quot;Obese&quot;)), exposure = factor(exposure, labels = c(&quot;No&quot;, &quot;Yes&quot;)), outcome = factor(outcome, labels = c(&quot;No&quot;, &quot;Yes&quot;)) ) datatable(study, options = list(scrollX = TRUE)) 17.6 üîµ Example: Table 1 This first example is perhaps the most common type of table we will create ‚Äì a Table 1 ‚Äì or basic descriptive table about our participants. Let‚Äôs start by looking at a complete example: Here is the minimum code needed to achieve the result in the screenshot above. Below, we will break this code down step-by-step. n_outcome &lt;- study %&gt;% count(outcome) %&gt;% pull(n) %&gt;% set_names(levels(study$outcome)) cont_stats_fn &lt;- function(.data, .outcome, .pred, .digits = 0) { .data %&gt;% # Calculations group_by({{ .outcome }}) %&gt;% mean_table({{ .pred }}) %&gt;% # Format statistics mean_format(&quot;mean (lcl - ucl)&quot;, name = &quot;mean_95&quot;) %&gt;% select(var = response_var, group_cat, mean_95) %&gt;% # Display by group_cat pivot_wider( names_from = &quot;group_cat&quot;, values_from = &quot;mean_95&quot; ) %&gt;% # Add a blank row add_row(var = &quot;&quot;) } cat_stats_fn &lt;- function(.data, .outcome, .pred, .digits = 0) { .data %&gt;% # Remove rows with missing values filter(!is.na({{ .pred }})) %&gt;% # Calculations freq_table({{ .outcome }}, {{ .pred }}) %&gt;% # Format statistics freq_format(&quot;percent_row (lcl_row - ucl_row)&quot;, name = &quot;percent_95&quot;, digits = 2) %&gt;% # Keep columns of interest select(row_cat, var = col_var, col_cat, percent_95) %&gt;% # Display by row_cat pivot_wider( names_from = &quot;row_cat&quot;, values_from = &quot;percent_95&quot; ) %&gt;% # Add spaces in front of category labels mutate(col_cat = paste0(&quot; &quot;, col_cat)) %&gt;% # Slide category labels under row variable label add_row(col_cat = !!quo_name(enquo(.pred)), .before = 1) %&gt;% select(-var, var = col_cat) %&gt;% # Add a blank row add_row(var = &quot;&quot;) } cont_cols &lt;- c(&quot;age&quot;, &quot;ht_in&quot;, &quot;wt_lbs&quot;, &quot;bmi&quot;) cat_cols &lt;- c(&quot;age_group&quot;, &quot;gender&quot;, &quot;bmi_4cat&quot;, &quot;exposure&quot;) stats_list &lt;- c( cont_cols %&gt;% set_names(cont_cols) %&gt;% map(~ cont_stats_fn(study, outcome, !! sym(.x))), cat_cols %&gt;% set_names(cat_cols) %&gt;% map(~ cat_stats_fn(study, outcome, !! sym(.x))) ) table_1 &lt;- map_dfr( .x = c(&quot;exposure&quot;, &quot;age&quot;, &quot;age_group&quot;, &quot;gender&quot;, &quot;ht_in&quot;, &quot;wt_lbs&quot;, &quot;bmi&quot;, &quot;bmi_4cat&quot;), .f = ~ bind_rows(stats_list[[.x]]) ) table_1_ft &lt;- flextable(table_1) %&gt;% # Change column widths. figure out through trial and error width(width = c(2.5, 2.01, 2.01)) %&gt;% # Center the final two columns align(j = c(2, 3), align = &quot;center&quot;, part = &quot;all&quot;) %&gt;% # Change header names -- add subgroup Ns to headers set_header_labels( var = &quot;Characteristic&quot;, No = paste0(&quot;No\\n(n=&quot;, n_outcome[&quot;No&quot;], &quot;)&quot;), Yes = paste0(&quot;Yes\\n(n=&quot;, n_outcome[&quot;Yes&quot;], &quot;)&quot;) ) %&gt;% # Bold column headers bold(part = &quot;header&quot;) %&gt;% # Edit row headers compose(i = ~ var == &quot;exposure&quot;, j = 1, as_paragraph(&quot;Exposure, row percent (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;age&quot;, j = 1, as_paragraph(&quot;Age, mean (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;age_group&quot;, j = 1, as_paragraph(&quot;Age group, row percent (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;gender&quot;, j = 1, as_paragraph(&quot;Gender, row percent (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;ht_in&quot;, j = 1, as_paragraph(&quot;Height, mean (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;wt_lbs&quot;, j = 1, as_paragraph(&quot;Weight, mean (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;bmi&quot;, j = 1, as_paragraph(&quot;BMI, mean (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;bmi_4cat&quot;, j = 1, as_paragraph(&quot;BMI category, row percent (95% CI)&quot;)) %&gt;% # Add footnotes footnote( i = c(5, 15, 17), j = 1, value = as_paragraph( c(&quot;Age in years.&quot;, &quot;Height in inches.&quot;, &quot;Weight in pounds.&quot;) ) ) %&gt;% # Remove vertical cell padding padding(padding.top = 0, padding.bottom = 0, part = &quot;all&quot;) %&gt;% # Change font to TNR 11 font(fontname = &quot;Times New Roman&quot;, part = &quot;all&quot;) %&gt;% fontsize(part = &quot;all&quot;, size = 11) doc &lt;- read_docx(&quot;examples/template_descriptive_analysis.docx&quot;) %&gt;% body_replace_text_at_bkm(&quot;date&quot;, as.character(Sys.Date())) %&gt;% body_replace_text_at_bkm(&quot;n_table_1&quot;, as.character(sum(n_outcome))) %&gt;% body_replace_flextable_at_bkm(&quot;table_1&quot;, table_1_ft) print( doc, &quot;examples/Example Table 1.docx&quot; ) Link to Word Document on Dropbox After cleaning your data, which isn‚Äôt covered in this chapter, a typical workflow for creating a Table 1 like this may look like the following: 17.6.1 Step 1. Calculate the outcome distribution As our first step, we typically want to see how many people have each value for the outcome of interest. We will also store these values so that we can add them to our table header as (N = XX) later. n_outcome &lt;- study %&gt;% count(outcome) %&gt;% pull(n) %&gt;% set_names(levels(study$outcome)) n_outcome ## No Yes ## 51 49 17.6.2 Step 2. Prepare to calculate summary statistics 17.6.2.1 Calculate statistics for single variables Eventually, we are going to want to calculate summary statistics for multiple different variables that will go into our Table 1. Before we do that, it can be useful to write code that will calculate the summary statistics we are interested in for one continuous variable and one categorical variable. Later, we can use iterative processing to apply that code to all of the variables we are interested in. üóíSide Note: This chapter isn‚Äôt about how to calculate or interpret all the various different statistics we may want to calculate from project to project. For more details on descriptive statistics see: R4Epi Descriptive Analysis meantables freqtables 17.6.2.1.1 One continuous variable In this example, we want to calculate the mean and 95% confidence interval for continuous variables. Because this is an example, we will break it down into multiple steps. In a real analysis, we would probably put all of the code in this section into a single code chunk. Calculations Do the basic calculations. Here we are using the mean_table() function from the meantables package. one_cont_var &lt;- study %&gt;% group_by(outcome) %&gt;% mean_table(age) %&gt;% print() ## # A tibble: 2 √ó 11 ## response_var group_var group_cat n mean sd sem lcl ucl min ## &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 age outcome No 51 34.9 15.2 2.13 30.6 39.2 22 ## 2 age outcome Yes 49 35.4 18.2 2.59 30.1 40.6 18 ## # ‚Ä¶ with 1 more variable: max &lt;dbl&gt; Format statistics Combine the mean and 95% confidence interval into a single variable and keep only the columns of interest for reporting. Additionally, we no longer need the group_var column and we will rename response_var to var to make it easier to row bind with our categorical variables later. one_cont_var &lt;- one_cont_var %&gt;% mean_format(&quot;mean (lcl - ucl)&quot;, name = &quot;mean_95&quot;) %&gt;% select(var = response_var, group_cat, mean_95) %&gt;% print() ## # A tibble: 2 √ó 3 ## var group_cat mean_95 ## &lt;chr&gt; &lt;fct&gt; &lt;chr&gt; ## 1 age No 34.9 (30.62 - 39.18) ## 2 age Yes 35.35 (30.13 - 40.56) Display by group_cat In the final table, we don‚Äôt want the results stacked on top of each other vertically, we want them spread out horizontally across columns ‚Äì one column for each level (i.e., category) of our outcome variable. We can use pivot_wider() from the tidyr package to do this. See the chapter on restructuring data frames for more info on pivot_wider. one_cont_var &lt;- one_cont_var %&gt;% pivot_wider( names_from = &quot;group_cat&quot;, values_from = &quot;mean_95&quot; ) %&gt;% print() ## # A tibble: 1 √ó 3 ## var No Yes ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 age 34.9 (30.62 - 39.18) 35.35 (30.13 - 40.56) Add a blank row Finally, we want to add a blank row to the bottom of our results table. This will create some vertical separation between variables in our table when we eventually row bind all the variables together. one_cont_var &lt;- one_cont_var %&gt;% add_row(var = &quot;&quot;) %&gt;% print() ## # A tibble: 2 √ó 3 ## var No Yes ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;age&quot; 34.9 (30.62 - 39.18) 35.35 (30.13 - 40.56) ## 2 &quot;&quot; &lt;NA&gt; &lt;NA&gt; Putting it all together And that‚Äôs the final result we are looking for. Putting it all together, it looks like this: one_cont_var &lt;- study %&gt;% # Calculations group_by(outcome) %&gt;% mean_table(age) %&gt;% # Format statistics mean_format(&quot;mean (lcl - ucl)&quot;, name = &quot;mean_95&quot;) %&gt;% select(var = response_var, group_cat, mean_95) %&gt;% # Display by group_cat pivot_wider( names_from = &quot;group_cat&quot;, values_from = &quot;mean_95&quot; ) %&gt;% # Add a blank row add_row(var = &quot;&quot;) %&gt;% print() ## # A tibble: 2 √ó 3 ## var No Yes ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;age&quot; 34.9 (30.62 - 39.18) 35.35 (30.13 - 40.56) ## 2 &quot;&quot; &lt;NA&gt; &lt;NA&gt; Below, we will combine the whole sequence together into a function that we can call repeatedly on each of our continuous variables. 17.6.2.1.2 One categorical variable In this example, we want to calculate the row percent and 95% confidence interval for categorical variables. Because this is an example, we will break it down into multiple steps. In a real analysis, we would probably put all of the code in this section into a single code chunk. Calculations Do the basic calculations. Here we are using the freq_table() function from the freqtables package. one_cat_var &lt;- study %&gt;% freq_table(outcome, age_group) %&gt;% print() ## # A tibble: 4 √ó 17 ## row_var row_cat col_var col_cat n n_row n_total percent_total se_total ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 outcome No age_group Younger ‚Ä¶ 29 51 100 29 4.56 ## 2 outcome No age_group 30 and O‚Ä¶ 22 51 100 22 4.16 ## 3 outcome Yes age_group Younger ‚Ä¶ 31 49 100 31 4.65 ## 4 outcome Yes age_group 30 and O‚Ä¶ 18 49 100 18 3.86 ## # ‚Ä¶ with 8 more variables: t_crit_total &lt;dbl&gt;, lcl_total &lt;dbl&gt;, ## # ucl_total &lt;dbl&gt;, percent_row &lt;dbl&gt;, se_row &lt;dbl&gt;, t_crit_row &lt;dbl&gt;, ## # lcl_row &lt;dbl&gt;, ucl_row &lt;dbl&gt; Format statistics Combine the row percent and 95% confidence interval into a single variable and keep only the columns of interest for reporting. one_cat_var &lt;- one_cat_var %&gt;% freq_format(&quot;percent_row (lcl_row - ucl_row)&quot;, name = &quot;percent_95&quot;, digits = 2) %&gt;% print() ## # A tibble: 4 √ó 18 ## row_var row_cat col_var col_cat n n_row n_total percent_total se_total ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 outcome No age_group Younger ‚Ä¶ 29 51 100 29 4.56 ## 2 outcome No age_group 30 and O‚Ä¶ 22 51 100 22 4.16 ## 3 outcome Yes age_group Younger ‚Ä¶ 31 49 100 31 4.65 ## 4 outcome Yes age_group 30 and O‚Ä¶ 18 49 100 18 3.86 ## # ‚Ä¶ with 9 more variables: t_crit_total &lt;dbl&gt;, lcl_total &lt;dbl&gt;, ## # ucl_total &lt;dbl&gt;, percent_row &lt;dbl&gt;, se_row &lt;dbl&gt;, t_crit_row &lt;dbl&gt;, ## # lcl_row &lt;dbl&gt;, ucl_row &lt;dbl&gt;, percent_95 &lt;chr&gt; Keep columns of interest We only need the values from row_cat, col_var, col_cat, and percent_95 in our final table. Additionally, we will rename col_var to var to make it easier to row bind with our continuous variables later. one_cat_var &lt;- one_cat_var %&gt;% select(row_cat, var = col_var, col_cat, percent_95) %&gt;% print() ## # A tibble: 4 √ó 4 ## row_cat var col_cat percent_95 ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 No age_group Younger than 30 56.86 (42.79 - 69.91) ## 2 No age_group 30 and Older 43.14 (30.09 - 57.21) ## 3 Yes age_group Younger than 30 63.27 (48.74 - 75.73) ## 4 Yes age_group 30 and Older 36.73 (24.27 - 51.26) Display by row_cat In the final table, we don‚Äôt want all of the results stacked on top of each other vertically as it is above. Instead, we want the results spread out horizontally across columns ‚Äì one column for each level (i.e., category) of our outcome variable. We can use pivot_wider() from the tidyr package to do this. See the chapter on restructuring data frames for more info on pivot_wider. one_cat_var &lt;- one_cat_var %&gt;% pivot_wider( names_from = &quot;row_cat&quot;, values_from = &quot;percent_95&quot; ) %&gt;% print() ## # A tibble: 2 √ó 4 ## var col_cat No Yes ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 age_group Younger than 30 56.86 (42.79 - 69.91) 63.27 (48.74 - 75.73) ## 2 age_group 30 and Older 43.14 (30.09 - 57.21) 36.73 (24.27 - 51.26) Add spaces in front of category labels In our final Word table, we will want our category labels (e.g., ‚ÄúYounger than 30‚Äù and ‚Äú30 and Older‚Äù) to be indented slightly relative to the row variable label (e.g., ‚Äúage_group‚Äù). We will go ahead and add 2 spaces now. üóíSide Note: The spaces won‚Äôt be visible while testing in RStudio, but they will show up in the final Word document. one_cat_var &lt;- one_cat_var %&gt;% mutate(col_cat = paste0(&quot; &quot;, col_cat)) %&gt;% print() ## # A tibble: 2 √ó 4 ## var col_cat No Yes ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 age_group &quot; Younger than 30&quot; 56.86 (42.79 - 69.91) 63.27 (48.74 - 75.73) ## 2 age_group &quot; 30 and Older&quot; 43.14 (30.09 - 57.21) 36.73 (24.27 - 51.26) Slide category labels under row variable label In our final Word table, we will want our category labels (e.g., ‚ÄúYounger than 30‚Äù and ‚Äú30 and Older‚Äù) to be in the same column ‚Äì and underneath ‚Äì the row variable label (e.g., ‚Äúage_group‚Äù). In other words, we want our final table to look like this: Characteristic No Yes Age Group Younger than 30 56.14 (42.86 - 68.59) 65.12 (49.54 - 78.02) 30 and Older 43.86 (31.41 - 57.14) 34.88 (21.98 - 50.46) Instead of this: Characteristic Category No Yes Age Group Younger than 30 56.14 (42.86 - 68.59) 65.12 (49.54 - 78.02) Age group 30 and Older 43.86 (31.41 - 57.14) 34.88 (21.98 - 50.46) To do this, we will: Add a new top row to the data frame that will contain the variable label in the current col_cat column. Drop the current var column, which is no longer needed. Rename the col_cat to var to make it easier to row bind with our categorical variables later. one_cat_var &lt;- one_cat_var %&gt;% add_row(col_cat = &quot;age_group&quot;, .before = 1) %&gt;% select(-var, var = col_cat) %&gt;% print() ## # A tibble: 3 √ó 3 ## var No Yes ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;age_group&quot; &lt;NA&gt; &lt;NA&gt; ## 2 &quot; Younger than 30&quot; 56.86 (42.79 - 69.91) 63.27 (48.74 - 75.73) ## 3 &quot; 30 and Older&quot; 43.14 (30.09 - 57.21) 36.73 (24.27 - 51.26) Add a blank row Finally, we want to add a blank row to the bottom of our results table. This will create some vertical separation between variables in our table when we eventually row bind all the variables together. one_cat_var &lt;- one_cat_var %&gt;% add_row(var = &quot;&quot;) %&gt;% print() ## # A tibble: 4 √ó 3 ## var No Yes ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;age_group&quot; &lt;NA&gt; &lt;NA&gt; ## 2 &quot; Younger than 30&quot; 56.86 (42.79 - 69.91) 63.27 (48.74 - 75.73) ## 3 &quot; 30 and Older&quot; 43.14 (30.09 - 57.21) 36.73 (24.27 - 51.26) ## 4 &quot;&quot; &lt;NA&gt; &lt;NA&gt; Putting it all together And that‚Äôs the final result we are looking for. Putting it all together, it looks like this: one_cat_var &lt;- study %&gt;% # Calculations freq_table(outcome, age_group) %&gt;% # Format statistics freq_format(&quot;percent_row (lcl_row - ucl_row)&quot;, name = &quot;percent_95&quot;, digits = 2) %&gt;% # Keep columns of interest select(row_cat, var = col_var, col_cat, percent_95) %&gt;% # Display by row_cat pivot_wider( names_from = &quot;row_cat&quot;, values_from = &quot;percent_95&quot; ) %&gt;% # Add spaces in front of category labels mutate(col_cat = paste0(&quot; &quot;, col_cat)) %&gt;% # Slide category labels under row variable label add_row(col_cat = &quot;age_group&quot;, .before = 1) %&gt;% select(-var, var = col_cat) %&gt;% # Add a blank row add_row(var = &quot;&quot;) %&gt;% print() ## # A tibble: 4 √ó 3 ## var No Yes ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;age_group&quot; &lt;NA&gt; &lt;NA&gt; ## 2 &quot; Younger than 30&quot; 56.86 (42.79 - 69.91) 63.27 (48.74 - 75.73) ## 3 &quot; 30 and Older&quot; 43.14 (30.09 - 57.21) 36.73 (24.27 - 51.26) ## 4 &quot;&quot; &lt;NA&gt; &lt;NA&gt; Below, we will combine the whole sequence together into a function that we can call repeatedly on each of our continuous variables. 17.6.2.2 Create helper functions Above, we saw how to calculate the summary statistics we wanted for one continuous variable and one categorical variable. We could repeat that process for each variable we are interested in using copy and paste, but it is much more efficient and much less error prone to wrap those processes in a function that we can call repeatedly on each variable we want to analyze. That‚Äôs what we will do in this section. In each of the code chunks below, all we‚Äôre going to do is cut the copy the code from above, paste it below, wrap it in the function() function, and then make a few tweaks that will allow us to repeatedly pass variable names into the code. See the chapter on writing functions for more info on pivot_wider. 17.6.2.2.1 Continuous stats function cont_stats_fn &lt;- function(.data, .outcome, .pred, .digits = 0) { .data %&gt;% # Calculations group_by({{ .outcome }}) %&gt;% mean_table({{ .pred }}) %&gt;% # Format statistics mean_format(&quot;mean (lcl - ucl)&quot;, name = &quot;mean_95&quot;) %&gt;% select(var = response_var, group_cat, mean_95) %&gt;% # Display by group_cat pivot_wider( names_from = &quot;group_cat&quot;, values_from = &quot;mean_95&quot; ) %&gt;% # Add a blank row add_row(var = &quot;&quot;) } # For testing cont_stats_fn(study, outcome, age, .digits = 1) ## # A tibble: 2 √ó 3 ## var No Yes ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;age&quot; 34.9 (30.62 - 39.18) 35.35 (30.13 - 40.56) ## 2 &quot;&quot; &lt;NA&gt; &lt;NA&gt; 17.6.2.2.2 Categoorical stats function cat_stats_fn &lt;- function(.data, .outcome, .pred, .digits = 0) { .data %&gt;% # Remove rows with missing values filter(!is.na({{ .pred }})) %&gt;% # Calculations freq_table({{ .outcome }}, {{ .pred }}) %&gt;% # Format statistics freq_format(&quot;percent_row (lcl_row - ucl_row)&quot;, name = &quot;percent_95&quot;, digits = 2) %&gt;% # Keep columns of interest select(row_cat, var = col_var, col_cat, percent_95) %&gt;% # Display by row_cat pivot_wider( names_from = &quot;row_cat&quot;, values_from = &quot;percent_95&quot; ) %&gt;% # Add spaces in front of category labels mutate(col_cat = paste0(&quot; &quot;, col_cat)) %&gt;% # Slide category labels under row variable label add_row(col_cat = !!quo_name(enquo(.pred)), .before = 1) %&gt;% select(-var, var = col_cat) %&gt;% # Add a blank row add_row(var = &quot;&quot;) } # For testing cat_stats_fn(study, outcome, bmi_4cat, .digits = 1) ## # A tibble: 6 √ó 3 ## var No Yes ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;bmi_4cat&quot; &lt;NA&gt; &lt;NA&gt; ## 2 &quot; Underweight&quot; 6.25 (1.98 - 18.07) 12.50 (5.62 - 25.53) ## 3 &quot; Normal&quot; 45.83 (32.12 - 60.21) 52.08 (37.84 - 65.99) ## 4 &quot; Overweight&quot; 22.92 (12.99 - 37.19) 25.00 (14.59 - 39.42) ## 5 &quot; Obese&quot; 25.00 (14.59 - 39.42) 10.42 (4.31 - 23.08) ## 6 &quot;&quot; &lt;NA&gt; &lt;NA&gt; 17.6.3 Step 3. Create a data frame that contains our summary statistics In general, we won‚Äôt want to present or distribute summary statistics in the form of an R data frame. However, an preliminary step in creating our final table ‚Äì regardless of the method we use ‚Äì will usually be to create an R data frame that contains our summary statistics of interest. The next step in this proc cont_cols &lt;- c(&quot;age&quot;, &quot;ht_in&quot;, &quot;wt_lbs&quot;, &quot;bmi&quot;) cat_cols &lt;- c(&quot;age_group&quot;, &quot;gender&quot;, &quot;bmi_4cat&quot;, &quot;exposure&quot;) 17.6.3.1 Repeatedly apply cont_stats_fn Calculate summary statistics for each of the continuous variables we are interested in. Each time we pass a new variable to cont_stats_fn the result will be a data frame of summary statistics for that variable. For now, we will save each of those data frames to a list that we can later reorder and row bind together. stats_list &lt;- cont_cols %&gt;% set_names(cont_cols) %&gt;% map(~ cont_stats_fn(study, outcome, !! sym(.x))) 17.6.3.2 Repeatedly apply cat_stats_fn Calculate summary statistics for each of the categorical variables we are interested in. Each time we pass a new variable to cat_stats_fn the result will be a data frame of summary statistics for that variable. For now, we will save each of those data frames to a list that we can later reorder and row bind together. stats_list &lt;- c( stats_list, cat_cols %&gt;% set_names(cat_cols) %&gt;% map(~ cat_stats_fn(study, outcome, !! sym(.x))) ) At this point, stats_list contains all of our summary statistics of interest as a list of data frames. 17.6.3.3 Bind together the continuous and categorical summary stats table_1 &lt;- map_dfr( .x = c(&quot;exposure&quot;, &quot;age&quot;, &quot;age_group&quot;, &quot;gender&quot;, &quot;ht_in&quot;, &quot;wt_lbs&quot;, &quot;bmi&quot;, &quot;bmi_4cat&quot;), .f = ~ bind_rows(stats_list[[.x]]) ) %&gt;% print() ## # A tibble: 26 √ó 3 ## var No Yes ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;exposure&quot; &lt;NA&gt; &lt;NA&gt; ## 2 &quot; No&quot; 76.47 (62.65 - 86.30) 91.84 (79.81 - 96.97) ## 3 &quot; Yes&quot; 23.53 (13.70 - 37.35) 8.16 (3.03 - 20.19) ## 4 &quot;&quot; &lt;NA&gt; &lt;NA&gt; ## 5 &quot;age&quot; 34.9 (30.62 - 39.18) 35.35 (30.13 - 40.56) ## 6 &quot;&quot; &lt;NA&gt; &lt;NA&gt; ## 7 &quot;age_group&quot; &lt;NA&gt; &lt;NA&gt; ## 8 &quot; Younger than 30&quot; 56.86 (42.79 - 69.91) 63.27 (48.74 - 75.73) ## 9 &quot; 30 and Older&quot; 43.14 (30.09 - 57.21) 36.73 (24.27 - 51.26) ## 10 &quot;&quot; &lt;NA&gt; &lt;NA&gt; ## # ‚Ä¶ with 16 more rows Remove the final blank row. It makes the Word table look cleaner. table_1 &lt;- slice(table_1, -nrow(table_1)) üóíSide Note: It might be interesting/worthwhile to come back to this at some point and turn everything from in ‚ÄúStep 3. Create a data frame that contains our summary statistics‚Äù into a function. 17.6.4 Step 5. Create flextable At this point, we have a complete table of summary statistics and it is roughly laid out in the way we want it to be. But, as we discussed above, we don‚Äôt want to present or distribute summary statistics in the form of an R data frame. The flextable package is one awesome tool we can use to transform our data frames of summary statistics into presentation-ready tables for Word, PowerPoint, or HTML documents. The flextable chapter gives more details on using the flextable package. But, for the sake of completeness, we will go ahead and finish our formatted Table 1. Technically, the following single function call will turn our Table 1 into a flextable object. table_1_ft &lt;- flextable(table_1) table_1_ft .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a9265330{}.cl-a920f6b0{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a9210434{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a9213da0{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a9213daa{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a9213dab{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} varNoYesexposure No76.47 (62.65 - 86.30)91.84 (79.81 - 96.97) Yes23.53 (13.70 - 37.35)8.16 (3.03 - 20.19)age34.9 (30.62 - 39.18)35.35 (30.13 - 40.56)age_group Younger than 3056.86 (42.79 - 69.91)63.27 (48.74 - 75.73) 30 and Older43.14 (30.09 - 57.21)36.73 (24.27 - 51.26)gender Female58.82 (44.68 - 71.64)55.10 (40.83 - 68.58) Male41.18 (28.36 - 55.32)44.90 (31.42 - 59.17)ht_in66.88 (65.56 - 68.2)66.5 (65.29 - 67.71)wt_lbs165.44 (151.92 - 178.96)155.21 (140.71 - 169.71)bmi26.03 (23.76 - 28.31)24.38 (22.5 - 26.27)bmi_4cat Underweight6.25 (1.98 - 18.07)12.50 (5.62 - 25.53) Normal45.83 (32.12 - 60.21)52.08 (37.84 - 65.99) Overweight22.92 (12.99 - 37.19)25.00 (14.59 - 39.42) Obese25.00 (14.59 - 39.42)10.42 (4.31 - 23.08) 17.6.5 Step 6. Formatting flextable The flextable object we created above is a good start; however, we will still want to do some additional formatting before presenting our final table 1 to others. üóíSide Note: We could have done some of this formatting directly in the R data frame, but it‚Äôs generally a good idea to do formatting in the flextable object when possible. table_1_ft &lt;- table_1_ft %&gt;% # Change column widths. figure out through trial and error width(width = c(2.5, 2.01, 2.01)) %&gt;% # Center the final two columns align(j = c(2, 3), align = &quot;center&quot;, part = &quot;all&quot;) %&gt;% # Change header names -- add subgroup Ns to headers set_header_labels( var = &quot;Characteristic&quot;, No = paste0(&quot;No\\n(n=&quot;, n_outcome[&quot;No&quot;], &quot;)&quot;), Yes = paste0(&quot;Yes\\n(n=&quot;, n_outcome[&quot;Yes&quot;], &quot;)&quot;) ) %&gt;% # Bold column headers bold(part = &quot;header&quot;) %&gt;% # Edit row headers compose(i = ~ var == &quot;exposure&quot;, j = 1, as_paragraph(&quot;Exposure, row percent (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;age&quot;, j = 1, as_paragraph(&quot;Age, mean (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;age_group&quot;, j = 1, as_paragraph(&quot;Age group, row percent (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;gender&quot;, j = 1, as_paragraph(&quot;Gender, row percent (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;ht_in&quot;, j = 1, as_paragraph(&quot;Height, mean (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;wt_lbs&quot;, j = 1, as_paragraph(&quot;Weight, mean (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;bmi&quot;, j = 1, as_paragraph(&quot;BMI, mean (95% CI)&quot;)) %&gt;% compose(i = ~ var == &quot;bmi_4cat&quot;, j = 1, as_paragraph(&quot;BMI category, row percent (95% CI)&quot;)) %&gt;% # Add footnotes footnote( i = c(5, 15, 17), j = 1, value = as_paragraph( c(&quot;Age in years.&quot;, &quot;Height in inches.&quot;, &quot;Weight in pounds.&quot;) ) ) %&gt;% # Remove vertical cell padding padding(padding.top = 0, padding.bottom = 0, part = &quot;all&quot;) %&gt;% # Change font to TNR 11 font(fontname = &quot;Times New Roman&quot;, part = &quot;all&quot;) %&gt;% fontsize(part = &quot;all&quot;, size = 11) table_1_ft .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-a93bf398{}.cl-a936de4e{font-family:'Times New Roman';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a936de62{font-family:'Times New Roman';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-a936de63{font-family:'Times New Roman';font-size:6.6pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;position: relative;bottom:3.3pt;}.cl-a936ecb8{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:0;padding-top:0;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a936ecb9{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:0;padding-top:0;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-a9372b60{width:144.7pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a9372b6a{width:180pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a9372b6b{width:180pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a9372b6c{width:144.7pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a9372b74{width:180pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a9372b75{width:144.7pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a9372b76{width:144.7pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-a9372b77{width:180pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} CharacteristicNo(n=51)Yes(n=49)Exposure, row percent (95% CI) No76.47 (62.65 - 86.30)91.84 (79.81 - 96.97) Yes23.53 (13.70 - 37.35)8.16 (3.03 - 20.19)Age, mean (95% CI)134.9 (30.62 - 39.18)35.35 (30.13 - 40.56)Age group, row percent (95% CI) Younger than 3056.86 (42.79 - 69.91)63.27 (48.74 - 75.73) 30 and Older43.14 (30.09 - 57.21)36.73 (24.27 - 51.26)Gender, row percent (95% CI) Female58.82 (44.68 - 71.64)55.10 (40.83 - 68.58) Male41.18 (28.36 - 55.32)44.90 (31.42 - 59.17)Height, mean (95% CI)266.88 (65.56 - 68.2)66.5 (65.29 - 67.71)Weight, mean (95% CI)3165.44 (151.92 - 178.96)155.21 (140.71 - 169.71)BMI, mean (95% CI)26.03 (23.76 - 28.31)24.38 (22.5 - 26.27)BMI category, row percent (95% CI) Underweight6.25 (1.98 - 18.07)12.50 (5.62 - 25.53) Normal45.83 (32.12 - 60.21)52.08 (37.84 - 65.99) Overweight22.92 (12.99 - 37.19)25.00 (14.59 - 39.42) Obese25.00 (14.59 - 39.42)10.42 (4.31 - 23.08)1Age in years.2Height in inches.3Weight in pounds. 17.6.6 üìù Load Word template for officer In general, it seems helpful/expedient to do as much of the prose and formatting as possible directly in the Word template. Then, just add numbers, tables, and graphs from R with bookmarks. doc &lt;- read_docx(&quot;examples/template_descriptive_analysis.docx&quot;) %&gt;% body_replace_text_at_bkm(&quot;date&quot;, as.character(Sys.Date())) %&gt;% body_replace_text_at_bkm(&quot;n_table_1&quot;, as.character(sum(n_outcome))) %&gt;% body_replace_flextable_at_bkm(&quot;table_1&quot;, table_1_ft) 17.6.7 üìù Generate Word reports print( doc, &quot;examples/Example Table 1.docx&quot; ) Link to Word Document on Dropbox "],["git-and-github.html", "18 Git and GitHub 18.1 ‚≠êÔ∏èOverview 18.2 üåéUseful websites 18.3 Get rid of .DS_Store 18.4 Amend 18.5 Pull Requests 18.6 Branches", " 18 Git and GitHub 18.1 ‚≠êÔ∏èOverview This chapter is about using Git and GitHub to collaborate. The goal is not to make you a git expert ‚Äî I‚Äôm not a git expert myself. Instead, the goal is to teach you enough git to work with me and my team on research projects. I will also provide you with some additional resources in case you want to become an expert. 18.2 üåéUseful websites How to Use Git/GitHub with R Git Book Happy Git and GitHub for the useR GitHub Hello World tutorial 18.3 Get rid of .DS_Store The .DS_Store file can be an annoyance when working with Git on MacOS. Here is a link to instructions for removing .DS_Store from your repository. Do it early and never worry about it again. In the terminal, run the following code from the root directory: # Remove existing files from the repository: find . -name &quot;*.DS_Store&quot; -type f -exec git-rm {} \\; # Add .DS_Store to .gitignore echo .DS_Store &gt;&gt; .gitignore # Commit the file to the repo git add .gitignore git commit -m &#39;.DS_Store banished!&#39; 18.4 Amend Edit -&gt; commit -&gt; edit -&gt; amend -&gt; commit = no problem! Edit -&gt; commit -&gt; push -&gt; edit -&gt; amend -&gt; commit -&gt; push = problem! Short answer, don‚Äôt do it. Adding more chages to your last commit 18.5 Pull Requests Instructions for leaving comments Very simple merge conflicts can be resolved directly on GitHub.com Use command line instructions to try out the code to resolve more complex merge conflicts. Example command line pull request merge conflict If there are already changes on the branch (so you can‚Äôt pull), you need to either: Commit the changes on the branch (if you want to keep them) Throw away local changes with git checkout -f, and then remove untracked files with git clean -fd 18.6 Branches Naming convention: issue-#-short-description Basic workflow: Create new branch - never develop on Master Push new branch to remote Do some work - commit - amend - push along the way When work is done, create a pull request for Master Deal with merge conflicts if they exist, and merge into Master Delete development branch Merging specific files from another branch. Also, if you haven‚Äôt committed the files you don‚Äôt want to move over yet: Commit just the files you DO want to merge into master. Push Create a request to pull the changes you just committed into the master branch. Don‚Äôt delete the issue branch. Just continue working on the files you don‚Äôt commit and merge with the pull request. "],["appendix-a-terms-and-definitions.html", "19 Appendix A: Terms and Definitions 19.1 ‚≠êÔ∏èOverview 19.2 üåéUseful websites 19.3 üìñTerms", " 19 Appendix A: Terms and Definitions Need to sort and define: Terms to add to R Notes: * Probability. Look up * Risk. 57, but look up. * Incidence time. 58 * Censoring. 59 * Person time at risk. 60 * Incidence rate. 61 * Inverse time. I think it just means per year, per month, per week, etc. 61 19.1 ‚≠êÔ∏èOverview There are so many terms in epidemiology that are used inconsistently. This note is supposed to help keep track of them all. 19.2 üåéUseful websites https://stackoverflow.com/ 19.3 üìñTerms 19.3.1 General Terms üóíSide Note: At some point, you may want to improve the organization of this note and/or add some graphics. Cohort. A group of persons for whom membership is defined in a permanent fashion, or a population in which membership is determined by satisfying a set of defining events and so becomes permanent. An example of a cohort would be the members of the graduating class of a school in a given year‚Ä¶ With this definition, the members of any cohort constitute a closed population along the time axis in which the chronologically last defining event (e.g., birth with Down syndrome or study recruitment) is taken as the index time.2 Closed population. A closed population adds no new members over time and loses members only to death.2 Open population. Open populations may gain members over time, through immigration or birth, or lose members over time through emigration or death.2 Think of a population defined by a geographic area or political boundary. 19.3.2 General statistics terms Odds. Proportion. Percentage. Ratio. 19.3.3 Measures of occurence Incident. A single occurrence of an outcome of interest. We might also talk about the number of incident cases. Incidence. Incidence proportion. Prevalence. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
