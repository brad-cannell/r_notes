[["index.html", "R Notes Welcome Organization", " R Notes Brad Cannell 2021-11-12 Welcome Welcome to Brad Cannell‚Äôs R Notes! This is a Bookdown version Brad Cannell‚Äôs R Notes. I‚Äôm really making this ‚Äúbook‚Äù for me, but even better if you find it useful too! Why am I doing this (as opposed to just keeping notes locally)? Better organized (e.g., chapter structure and search) Easy access ‚Äì just click on the bookmark on web browser Practice using bookdown Might help with R4Epi ‚Äì This can be sort of a sandbox for developing before I add things to R4Epi. This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License. Organization These notes are loosely organized into the following parts: Programming: Things that have to do with optimizing code, writing functions, creating packages, and repeated operations. Working with external files: Things like data transfer, web scraping, PDF scraping, and using Officer to scrape Microsoft Office documents. Data management: Things related to manipulating/transforming/filtering data that is already in R. Data analysis: Things related to creating numerical summaries of data. Data visualization: Things related to graphical summaries of data. A lot of this will be about ggplot. Presenting results: Things related to making numerical and graphical summaries accessible outside of R. This can include webpages, static dashboards, PDF documents, Microsoft Office documents, ect. This does not include Shiny apps. Shiny: Things related to using Shiny to create interactive web apps. Eventually, this may need its own Bookdown project. "],["my-package-notes.html", "1 Packages: Quick Start 1.1 ‚≠êÔ∏èOverview 1.2 üåéUseful websites 1.3 Step 1: Create the package project 1.4 Step 3: Writing help pages 1.5 Step 4: Synchronize with GitHub 1.6 Step 5: Testing 1.7 Vignettes 1.8 Adding and documenting data 1.9 Errors, warnings, notes", " 1 Packages: Quick Start 1.1 ‚≠êÔ∏èOverview This chapter is my quick start guide for creating packages. Using packages to create reproducible analyses This is proposed in the Robert Flight‚Äôs Blog. I played around with it, but have decided that it‚Äôs better to do analysis as a project rather than a package. You can get most of the benefits of this technique - including Git and Packrat - using a project. Just share the entire project folder with a collaborator and / or post on Github. Packages require a bunch of extra work on the front end and are harder to keep up to date. 1.2 üåéUseful websites Hadley Wickham and Jenny Bryan‚Äôs R Packages book RStudio Tutorial devtools package usethis package 1.3 Step 1: Create the package project File &gt; New Project New Directory &gt; R Package Give the package a new (Hadley‚Äôs naming strategies) If you have R scripts written already, and wish to add them to the package, you can do so using the dialogue box titled ‚ÄúCreate package based on source files‚Äù Check ‚ÄúCreate a git repository‚Äù (You can add later) At this point RStudio should automatically open up the Rproj file we just created. Make sure you have the latest version of R, then run the following code to get the packages you‚Äôll need: install.packages(c(&quot;devtools&quot;, &quot;roxygen2&quot;, &quot;testthat&quot;, &quot;knitr&quot;)) Use the following code to access new devtools functions as I develop them. This is particularly important during the development of the book. devtools::install_github(&quot;hadley/devtools&quot;) library(devtools) has_devel() 1.3.1 Step 2: Modify the description file Open the description file and make some changes. Here is an example: Package: freqtables Type: Package Title: Make Quick Descriptive Tables For Categorical Variables Description: Quickly make tables of descriptive statistics (i.e., counts, percentages, confidence intervals) for categorical variables. This package is designed to work in a tidyverse pipeline, and consideration has been given to get results from R to Microsoft Word ¬Æ with minimal pain. Version: 0.1.0 Authors@R: person(&quot;Brad&quot;, &quot;Cannell&quot;, email = &quot;brad.cannell@gmail.com&quot;, role = c(&quot;aut&quot;, &quot;cre&quot;)) Maintainer: Brad Cannell &lt;brad.cannell@gmail.com&gt; URL: https://github.com/brad-cannell/freqtables BugReports: https://github.com/brad-cannell/freqtables/issues License: MIT + file LICENSE Encoding: UTF-8 LazyData: true RoxygenNote: 7.0.2 Imports: dplyr Remember that Title Case is required for the Title Do Not use library(package) in R scripts - instead add package dependencies to the Imports or Remotes field in the DESCRIPTION. Do use library(package) in vignette .Rmd files, and do not add these package dependencies to the DESCRIPTION If we added R scripts to the package in Step 1, bullet 4 above, we need to open them now and make sure to remove all the library functions. Note that these R scripts are not linked to the original R scripts. In other words, if I make a change to props.R inside my package, those changes are reflected in the original props.R script. If you use MIT license, remember to add the license file (without file extension) to the main package directory. When adding CRAN packages to imports, you must first make sure they are installed. Instructions for installing dependencies from sources other than CRAN are given here. 1.3.2 Working with R scripts Don‚Äôt write or alter your functions in the console as you would in a typical interactive session. If you do, it‚Äôs easy for the version you‚Äôre using interactively and the version you are actually including in your package to get out of sync. Instead, load the package. Click the build tab &gt; More &gt; Load All, or devtools::load_all, or shift + cmd + L 1.4 Step 3: Writing help pages Help pages are contained in .Rd files saved in the man folder. It‚Äôs best practice to use roxygen with your script files to automatically generate the .Rd files. Doing so helps to keep your scripts and your help pages in sync. To use roxygen: Make sure the R script you want to document is active. Click Project Options &gt; Build Tools &gt; Generate documentation with Roxygen Place your cursor in the function you want to document Insert a Roxygen skeleton with the keyboard shortcut cmd + alt + shift + R After you‚Äôve filled in the skeleton click Build &gt; More &gt; Document, or use the keyboard shortcut shift + cmd + D. RStudio will then automatically generate the help pages in your man folder. Click the build tab &gt; More &gt; Load All, or devtools::load_all, or shift + cmd + L Check your help page by typing ?function_name in the console. 1.4.1 Example roxygen header #&#39; @title Compact Table of Summary Statistics #&#39; #&#39; @description Based on Stata&#39;s &quot;tabstat&quot; command. &quot;tabstat displays summary #&#39; statistics for a series of numeric variables in one table. It allows you #&#39; to specify the list of statistics to be displayed. Statistics can be #&#39; calculated (conditioned on) another variable. tabstat allows substantial #&#39; flexibility in terms of the statistics presented and the format of the #&#39; table&quot; (Stata, 2016). #&#39; #&#39; @param x A continuous variable. #&#39; @param digits Rounds the values returned to the specified number of decimal #&#39; places (default 3). #&#39; @param stats Return specified statistics. Options include: #&#39; \\describe{ #&#39; \\item{n}{Count of nonmissing values of x} #&#39; \\item{nmiss}{Count of missing values of x} #&#39; \\item{ci}{95 percent confidence interval for the mean of x} #&#39; \\item{sum}{Sum of x} #&#39; \\item{max}{Maximum value of x} #&#39; \\item{min}{Minimum value of x} #&#39; \\item{range}{(Maximum value of x) - (minimum value of x)} #&#39; \\item{sd}{Standard deviation of x} #&#39; \\item{var}{Variance of x} #&#39; \\item{cv}{Coefficient of variation (sd / mean) of x} #&#39; \\item{sem}{Standard error of the mean of x} #&#39; \\item{skew}{Skewness of x} #&#39; \\item{kurt}{Kurtosis of x} #&#39; \\item{p1}{1st percentile of x} #&#39; \\item{p5}{5th percentile of x} #&#39; \\item{p10}{10th percentile of x} #&#39; \\item{p25}{25th percentile of x} #&#39; \\item{p50}{Median value of x} #&#39; \\item{median}{Median value of x} #&#39; \\item{p75}{75th percentile of x} #&#39; \\item{p90}{90th percentile of x} #&#39; \\item{p95}{95th percentile of x} #&#39; \\item{p99}{99th percentile of x} #&#39; \\item{iqr}{Interquartile range (p75 - p25)} #&#39; \\item{q}{Equivalent to specifying p25 p50 p75} #&#39; } #&#39; #&#39; @return A data frame. By default, the data frame contains the variable name #&#39; and mean. #&#39; @export #&#39; #&#39; @references Stata 14 help for tabstat #&#39; \\url{http://www.stata.com/help.cgi?tabstat} #&#39; #&#39; @examples #&#39; data(mtcars) #&#39; #&#39; # Single univariate analysis with Defaults #&#39; tabstat(mtcars$mpg) #&#39; #&#39; # Single univariate analysis with all stats #&#39; tabstat(mtcars$mpg, stats = c(&quot;n&quot;, &quot;nmiss&quot;, &quot;ci&quot;, &quot;sum&quot;, &quot;max&quot;, &quot;min&quot;, #&#39; &quot;range&quot;, &quot;sd&quot;, &quot;var&quot;, &quot;cv&quot;, &quot;sem&quot;, &quot;skew&quot;, &quot;kurt&quot;, &quot;p1&quot;, &quot;p5&quot;, &quot;p10&quot;, #&#39; &quot;p25&quot;, &quot;p50&quot;, &quot;median&quot;, &quot;p75&quot;, &quot;p90&quot;, &quot;p95&quot;, &quot;p99&quot;, &quot;iqr&quot;, &quot;q&quot;)) 1.4.2 Don‚Äôt run the examples If you don‚Äôt want the examples to actually run, You can surround the example code with like this: #&#39; @examples #&#39; \\dontrun{ #&#39; library(dplyr) #&#39; library(meantables) #&#39; #&#39; data(mtcars) #&#39; #&#39; # Overall mean table with defaults #&#39; #&#39; mtcars %&gt;% #&#39; mean_table(mpg) #&#39; #&#39; # A tibble: 1 x 9 #&#39; response_var n mean sd sem lcl ucl min max #&#39; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; #&#39; 1 mpg 32 20.1 6.03 1.07 17.9 22.3 10.4 33.9 #&#39; } 1.4.3 Documenting Package: You can use roxygen to provide a help page for your package as a whole. More information is available from Hadley here. At this point, you have a usable package 1.4.4 Once package is complete (ish) Update documentation (help pages). Build &gt; More &gt; Document, or shift + cmd + D. Check the package by clicking Build &gt; Check. This will look for common package problems Click Build &gt; Build &amp; Reload. That will build the package and install it in your local package directory If you want to copy the package to send to someone else, click Build &gt; More &gt; Build source package. RStudio will build the package and save it as a .tar.gz file. You can then send it to another user to be installed on their system. If you are using GitHub, you need to commit changes and then push them to GitHub. More information about using Git and GitHub are available here. Other users can install your package directly from GitHub with install.packages(\"devtools\") followed by devtools::install_github(\"username/packagename\"). 1.4.5 Notes about package notes: Because packages are almost always a work in progress, you will want to add notes to yourself about the project in the source package that you don‚Äôt want others to see. You can do this by creating a notes directory, and then listing that directory in .Rbuildignore. You can add to buildignore using usethis::use_build_ignore(\"notes\"). More information is available here. Also make sure to add NOTES to .gitignore with usethis::use_git_ignore(\"notes\") Use NOTES for notes, but not tasks. Why or how, but not what. Tasks go into issues. There is a NOTES template in R/Templates. 1.5 Step 4: Synchronize with GitHub Again, details are available in Hadley Wickham‚Äôs Book. Note: to exculde files from add them to .gitignore manually, or by clicking Git &gt; More &gt; Ignore. If you didn‚Äôt check ‚ÄúCreate a git repository‚Äù in step 1, you‚Äôll need to create one now. Do so by clicking Project Options &gt; Git/SVN &gt; Version Control System. May need to restart R Create a README.md file (devtools::use_readme_rmd()) Note: This only works if you set up the project as a package. Do this, even if you don‚Äôt intend to create a package. There are just nice extra tools avaialable when you select project type &gt; R Package. Create a new repo on GitHub: https://github.com/new. Give it the same name as your package, and include the package title as the repo description. Leave all the other options as is, then click Submit. Open a shell, then type git remote add origin https://github.com/mbcann01/dataclean.git Modify DESCRIPTION to add URL and BugReports fields that link to your new GitHub site. Save the file and commit (with the message ‚ÄúUpdating DESCRIPTION to add links to GitHub site‚Äù) Open a shell, then type git push -u origin master Enter username mbcann01 and password asdf1234 Go to your GitHub page and look at the DESCRIPTION 1.5.1 Get rid of .DS_Store The .DS_Store file can be an annoyance when working with Git on MacOS. Here is a link to instructions for removing .DS_Store from your repository. Do it early and never worry about it again. In the terminal, run the following code from the root directory: # Remove existing files from the repository: find . -name &quot;*.DS_Store&quot; -type f -exec git-rm {} \\; # Add .DS_Store to .gitignore echo .DS_Store &gt;&gt; .gitignore # Commit the file to the repo git add .gitignore git commit -m &#39;.DS_Store banished!&#39; 1.5.2 Example: Modify Description URL: https://github.com/mbcann01/dataclean BugReports: https://github.com/mbcann01/dataclean/issues 1.5.3 Example Installation instructions for README: All files can be viewed directly on Github. To install this package locally, simply use devtools: library(devtools) devtools::install_github(&quot;mbcann01/detectPilotTest&quot;) library(detectPilotTest) browseVignettes(&quot;detectPilotTest&quot;) 1.6 Step 5: Testing Testing is an important part of programming. For detailed information on testing see the appropriate chapter in Hadley Wickham‚Äôs Book. Further guidance is available at the R Journal. Get started with devtools::use_testthat(). Create test file. Must be in tests/testhat. File name should start with test_ and the function name. For example, test_check_catvars. Modify your code or tests Test your package with Ctrl/Cmd + Shift + T or devtools::test(). Repeat until all tests pass. 1.7 Vignettes There are some great vignette resources on the internet: Chapter on vignettes in Hadley‚Äôs Package book Leisch‚Äôs creating R packages tutorial Flight‚Äôs article on creating an analysis as a package and vignette 1.7.1 To create a vignette: run usethis::use_vignette(\"my-vignette\") Open vignettes/my-vignette.Rmd Create the vignette Unlike R scripts, install and load packages directly in the vignettes. Knit the vignette - The default action will be to create a version of the vignette that can be viewed in RStudio. However, devtools::install_github() (and friends) will not build vignettes by default because they‚Äôre time consuming and may require additional packages. So, in order to be able to view the vignette in RStudio, you must use vignettes = TRUE, e.g., devtools::install_github(‚Äúbrad-cannell/bfuncs,‚Äù build_vignettes = TRUE) instead. Use devtools::build_vignettes() to create an html version of the vignette in inst/doc that you can provide a link to on your Github README page. By default, these folders will be added to .gitignore. Remove them from .gitignore to be able to view/use them on Github. Create a rawgit version of the html vignette file, and providea link to it on README. use use devtools::build() to create a package bundle with the vignettes included. RStudio‚Äôs ‚ÄúBuild &amp; reload‚Äù does not build vignettes to save time. When you add or update vignettes, push to Github again. 1.7.2 Vignette Notes: This builds the vignettes, and is probably fine for a regular package of functions. However, when using packages as a means for reproducible, self-contained analysis projects, the vignettes have greater importance, and by default are not easily accessible. Need to find a way to make the vignettes more ‚Äúfront and center‚Äù Create a help page for the entire package that includes links to the vignettes? Include links to the README.md file and upload to GitHub (with the data sets excluded)? Remember to use system.file() when reading in data inside a code chunk. If you have trouble getting it to work, try build &amp; reload. To save a data frame to data/ inside a vignette, you can use the rprojroot package. use rprojroot::find_root(\"DESCRIPTION\") 1.8 Adding and documenting data The explanation in the R Packages book is good, short, and easy to follow. 1.9 Errors, warnings, notes Below are some common errors, warnings and notes I‚Äôve encountered during build tests. W checking for unstated dependencies in examples ‚Ä¶ ‚Äòlibrary‚Äô or ‚Äòrequire‚Äô call not declared from: ‚Äòtidyverse‚Äô E checking examples (707ms) Running examples in ‚Äòfreqtables-Ex.R‚Äô failed The error most likely occurred in: I got this error because I had library(tidyverse) in theexamples? section of my roxygen2 header in one of my R scripts, but I did not have tidyverse in the Imports section of my DESCRIPTION file. I could add tidyverse to the DESCRIPTION file (usethis::use_package(\"tidyverse\", type = \"Imports\")). However, in this case I chose to use library(dplyr), which was already in the Imports section of my DESCRIPTION file, instead. W checking dependencies in R code (369ms) ‚Äò::‚Äô or ‚Äò:::‚Äô import not declared from: ‚Äòrlang‚Äô To fix this one simply run the following code in the console: usethis::use_package(\"rlang\", type = \"Imports\") Warning: ‚Äòinst/doc‚Äô files ‚Ä¶ ignored as vignettes have been rebuilt. Just ignore this one. Warning in strptime(xx, f &lt;- ‚Äú%Y-%m-%d %H:%M:%OS,‚Äù tz = tz) : unknown timezone ‚Äòzone/tz/2017c.1.0/zoneinfo/America/Chicago‚Äô Just ingnore this one. It‚Äôs a problem with my computer, not with the package code. Non-standard files/directories found at top level: ‚Äòdevelop_test_table.Rmd‚Äô ‚Äòdevelop_test_table.nb.html‚Äô Need to delete these files when I‚Äôm done developing chi-square test. Prevents R CMD check: ‚Äúno visible binding for global variable ‚Äò.‚Äô‚Äù Put the following (for example) directly inside the function definition in the R script where the function is defined: # ------------------------------------------------------------------ # Prevents R CMD check: &quot;no visible binding for global variable ‚Äò.‚Äô&quot; # ------------------------------------------------------------------ n = n_total = prop = t_crit = se = lcl_wald = ucl_wald = percent = NULL N checking R code for possible problems (1.8s) get_group_n: no visible global function definition for ‚Äò%&gt;%‚Äô Undefined global functions or variables: %&gt;% Info on fixing this issue Short answer: Add the following directly inside the roxygen2 header in the R script where the function is defined: @importFrom dplyr %&gt;%. You must also make sure that it gets to the NAMESPACE. Run usethis::use_namespace() and then devtools::document() to get it into NAMESPACE. ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached): ## [1] bookdown_0.22 digest_0.6.27 R6_2.5.1 jsonlite_1.7.2 ## [5] magrittr_2.0.1 evaluate_0.14 stringi_1.7.3 rlang_0.4.12 ## [9] rstudioapi_0.13 jquerylib_0.1.4 bslib_0.2.5.1 rmarkdown_2.9 ## [13] tools_4.1.0 stringr_1.4.0 xfun_0.24 yaml_2.2.1 ## [17] compiler_4.1.0 htmltools_0.5.1.1 knitr_1.33 sass_0.4.0 "],["creating-rmd-templates.html", "2 Creating Rmd Templates 2.1 ‚≠êÔ∏èOverview 2.2 üåéUseful websites 2.3 Create a package 2.4 Add a template to your package", " 2 Creating Rmd Templates 2.1 ‚≠êÔ∏èOverview This file contains notes on creating Rmd templates for RStudio. In RStudio, click on the ‚Äúnew file‚Äù button. Click ‚ÄúR Markdown‚Ä¶‚Äù Click ‚ÄúFrom Template‚Äù in the left sidebar menu. A list of Rmd templates appears in the ‚ÄúTemplate:‚Äù list. You can create your own templates and add them to this menu, which can be really handy! Below, I describe how to do that. Important: Rmd templates can only be added to RStudio‚Äôs template list by adding the Rmd template to a package and then installing that package on your computer. Read Hadley Wickham and Jenny Bryan‚Äôs R Packages book for an overview of creating R packages. 2.2 üåéUseful websites https://bookdown.org/yihui/rmarkdown/document-templates.html https://r-pkgs.org/ 2.3 Create a package See R Packages and/or my R packages notes. 2.4 Add a template to your package Step 1. Create directory for template Templates are located within the inst/rmarkdown/templates directory of a package. This structure can be generated automatically with the use_rmarkdown_template() function from the usethis package. It is possible to contain multiple templates in a single package, with each template stored in a separate sub-directory. Step 2. For example, the ‚ÄúNo Output‚Äù Rmd template can be viewed at: https://github.com/brad-cannell/templates/blob/master/inst/rmarkdown/templates/no_output/skeleton/skeleton.Rmd Step 3. Change the name of the folder in inst/rmarkdown/templates from template-name. For example, no_output. Step 4. Open the folder you just renamed and update template.yaml. The value you pass to the name: parameter will determine how the template is listed in RStudio‚Äôs template list. For example, name: No Output. The value you pass to the description: parameter appear as a tool tip when you hover your mouse over the template‚Äôs name in RStudio‚Äôs template list. For, example, Brad Cannell's template for an Rmd file with no output. Step 5. Create (or copy and paste) your Rmd template file into skeleton/skeleton.Rmd. üóíSide Note: If you already have a template in your package, you can create another one by pasting usethis::use_rmarkdown_template() in the console again and following the steps above. ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## loaded via a namespace (and not attached): ## [1] bookdown_0.22 digest_0.6.27 R6_2.5.1 jsonlite_1.7.2 ## [5] magrittr_2.0.1 evaluate_0.14 highr_0.9 stringi_1.7.3 ## [9] rlang_0.4.12 rstudioapi_0.13 jquerylib_0.1.4 bslib_0.2.5.1 ## [13] rmarkdown_2.9 tools_4.1.0 stringr_1.4.0 xfun_0.24 ## [17] yaml_2.2.1 compiler_4.1.0 htmltools_0.5.1.1 knitr_1.33 ## [21] sass_0.4.0 "],["tidy-evaluation.html", "3 Tidy Evaluation 3.1 ‚≠êÔ∏èOverview 3.2 üåéUseful websites 3.3 üì¶Load packages 3.4 üî¢Simulate data 3.5 Load Starwars data 3.6 Key Functions 3.7 Example using Tidy Eval in For Loop 3.8 Example using Tidy Eval in Functions 3.9 Using tidyeval with purrr 3.10 Other Quirks and Lessons Learned 3.11 Example I created for Steph Yap 3.12 Other questions / notes / reminders", " 3 Tidy Evaluation Created: 2017-06-24 Updated: 2021-11-12 3.1 ‚≠êÔ∏èOverview This chapter is about tidy evaluation. 3.2 üåéUseful websites Tidy evaluation book Programming with dplyr Using ggplot2 in packages Rlang adds curly-curly Advanced R, metaprogramming 3.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) library(tidyr, warn.conflicts = FALSE) library(purrr, warn.conflicts = FALSE) 3.4 üî¢Simulate data # Do this later # set.seed(123) # df &lt;- tibble( # x = rnorm(26), # y = letters # ) 3.5 Load Starwars data data(starwars) Tidy Eval is as system for programming, as opposed to working interactively, with dplyr. Tidy Eval is all about quoting. Not in the \"\" sense, which is to create a character string. Rather, Quoting is the action of capturing an expression instead of evaluating it. This is similar to the way formulas work in R. For example: # Computing the value of the expression: toupper(letters[1:5]) ## [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;E&quot; # Capturing the expression: quote(toupper(letters[1:5])) ## toupper(letters[1:5]) Don‚Äôt forget: When using quoted expressions, or quotures inside functions, you must unquote them where you want the expression evaluated. You can unquote with !! or unquote-splice with !!!. You can also use the curly-curly syntax to unquote: {{}}. I‚Äôm still not clear on when to use one vs.¬†the other. 3.6 Key Functions .data pronoun Not officially part of Tidy Eval (part of rlang). However, useful to keep in mind in situations where you might be programming over multiple data frames. If you‚Äôre in that situation, go check out the Pragramming with dplyr link above for more details. quo() This is sort of the foundational function in Tidy Eval. It creates a class quoture object, which is a special type of formula. quo() captures expressions when outside of user-defined functions. # What does quo() return? quo(species) # Where species is a variable in the Starwars tibble ## &lt;quosure&gt; ## expr: ^species ## env: global # Basic usage of quo() in function freq_table &lt;- function(df, x, ...) { df %&gt;% # No quoting and unquoting necessary for the tibble group_by(!!x) %&gt;% # Don&#39;t forget to unquote (!!) where you want the quoture evaluated summarise(N = n()) %&gt;% # Calculate freq top_n(3, N) # Return top 3 results } freq_table(df = starwars, x = quo(species)) ## # A tibble: 3 √ó 2 ## species N ## &lt;chr&gt; &lt;int&gt; ## 1 Droid 6 ## 2 Human 35 ## 3 &lt;NA&gt; 4 enquo() If you don‚Äôt want the user of your function to be able to pass the variable name as an argument without wrapping in quo(), that‚Äôs where enquo() comes in. # Basic usage of enquo() in function freq_table &lt;- function(df, x, ...) { x &lt;- enquo(x) # Capturing function argument and turning it into a quoture df %&gt;% group_by(!!x) %&gt;% summarise(N = n()) %&gt;% top_n(3, N) } freq_table(df = starwars, x = species) # Notice we no longer need to wrop species with quo() ## # A tibble: 3 √ó 2 ## species N ## &lt;chr&gt; &lt;int&gt; ## 1 Droid 6 ## 2 Human 35 ## 3 &lt;NA&gt; 4 quos() Use quos() with ... when you want to pass multiple variables / arguments / expressions into your function. Must unquote-splice !!! in your function to evaluate. # What does quos() return? quos(species, name) # Where species and name are variables in the Starwars tibble ## &lt;list_of&lt;quosure&gt;&gt; ## ## [[1]] ## &lt;quosure&gt; ## expr: ^species ## env: global ## ## [[2]] ## &lt;quosure&gt; ## expr: ^name ## env: global You can iterate over the list of quotures returned by quos() my_quos &lt;- quos(species, name) for(i in seq_along(my_quos)) { print(my_quos[[i]]) } ## &lt;quosure&gt; ## expr: ^species ## env: global ## &lt;quosure&gt; ## expr: ^name ## env: global Don‚Äôt forget to unquote-splice with !!! # Basic use of quos() in a for loop my_quos &lt;- quos(species, name) for(i in seq_along(my_quos)) { summarise(starwars, n_miss = sum(is.na(!!my_quos[[i]]))) %&gt;% print # Can use !! or !!! in this case } ## # A tibble: 1 √ó 1 ## n_miss ## &lt;int&gt; ## 1 4 ## # A tibble: 1 √ó 1 ## n_miss ## &lt;int&gt; ## 1 0 # Basic usage of quos() in function freq_table &lt;- function(df, ...) { # Notice we dropped the &quot;x&quot; argument x &lt;- quos(...) # Capturing function argument and turning it into a quoture list df %&gt;% group_by(!!!x) %&gt;% # Must use unquote-splice (!!!) in this case summarise(N = n()) %&gt;% ungroup() %&gt;% slice(1:5) } freq_table(df = starwars, species, hair_color) ## `summarise()` has grouped output by &#39;species&#39;. You can override using the `.groups` argument. ## # A tibble: 5 √ó 3 ## species hair_color N ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 Aleena none 1 ## 2 Besalisk none 1 ## 3 Cerean white 1 ## 4 Chagrian none 1 ## 5 Clawdite blonde 1 quo_name() Sometimes we want to convert the argument to a string for use in our function output. For example, we may want to dynamically create variable names inside the function. # What does quo_name return? quo_name(&quot;height&quot;) # Input must be a string or a quoture ## [1] &quot;height&quot; # What does quo_name return? height &lt;- quo(height) quo_name(height) # Input must be a string or a quoture ## [1] &quot;height&quot; # Basic usage of quos() in function continuous_table &lt;- function(df, x) { x2 &lt;- enquo(x) # Must enquo first mean_name &lt;- paste0(&quot;mean_&quot;, quo_name(x2)) sum_name &lt;- paste0(&quot;sum_&quot;, quo_name(x2)) df %&gt;% summarise( !!mean_name := mean(!!x2, na.rm = TRUE), # Must use !! and := to set the variable names !!sum_name := sum(!!x2, na.rm = TRUE) ) } continuous_table(starwars, height) ## # A tibble: 1 √ó 2 ## mean_height sum_height ## &lt;dbl&gt; &lt;int&gt; ## 1 174. 14123 rlang::sym() Takes a string as an input and turns it into a symbol my_col &lt;- &quot;height&quot; rlang::qq_show( starwars %&gt;% summarize( mean(my_col) ) ) ## starwars %&gt;% summarize(mean(my_col)) Doesn‚Äôt work because R will look for a variable named ‚Äúmy_col‚Äù in the data frame ‚Äústarwars.‚Äù my_col &lt;- &quot;height&quot; rlang::qq_show( starwars %&gt;% summarize( mean(!!my_col) ) ) ## starwars %&gt;% summarize(mean(&quot;height&quot;)) Doesn‚Äôt work because R will try to calculate the mean of the character string ‚Äúheight.‚Äù my_col &lt;- rlang::sym(&quot;height&quot;) rlang::qq_show( starwars %&gt;% summarize( mean(!!my_col) ) ) ## starwars %&gt;% summarize(mean(height)) This looks like what we would type manually. my_col &lt;- rlang::sym(&quot;height&quot;) starwars %&gt;% summarize( mean = mean(!!my_col, na.rm = TRUE) ) ## # A tibble: 1 √ó 1 ## mean ## &lt;dbl&gt; ## 1 174. And it works as expeccted rlang::syms() Like sym, but can convert multiple strings into a list of symbols my_cols &lt;- rlang::syms(c(&quot;height&quot;, &quot;mass&quot;)) rlang::qq_show( starwars %&gt;% summarize( mean(!!my_cols) ) ) ## starwars %&gt;% summarize(mean(&lt;list: height, mass&gt;)) Notice that unquoting with !! returns a list of symbols. To unlist them, we must use the splice operator. my_cols &lt;- rlang::syms(c(&quot;height&quot;, &quot;mass&quot;)) rlang::qq_show( starwars %&gt;% summarize( mean(!!!my_cols) ) ) ## starwars %&gt;% summarize(mean(height, mass)) Of course, to make this meaningful we need to map it over height and mass my_cols &lt;- rlang::syms(c(&quot;height&quot;, &quot;mass&quot;)) summarise_avg &lt;- function(data, col) { col &lt;- enquo(col) data %&gt;% summarise(avg = mean(!!col, na.rm = TRUE)) } results &lt;- purrr::map_df(my_cols, summarise_avg, data = starwars) results ## # A tibble: 2 √ó 1 ## avg ## &lt;dbl&gt; ## 1 174. ## 2 97.3 3.7 Example using Tidy Eval in For Loop In this example, I‚Äôm creating a table of summary statistics using the Starwars data. The table will compare some simple characteristics of the characters by species. First, I‚Äôm going to reclassify every character as Human or Not Human starwars &lt;- mutate(starwars, human = if_else(species == &quot;Human&quot;, &quot;Yes&quot;, &quot;No&quot;, NA_character_)) Now I‚Äôm going to create the table shell vars = 3 # Number of vars rows = vars + 1 # Additional row for group sample size table &lt;- tibble( Variable = vector(mode = &quot;character&quot;, length = rows), Human = vector(mode = &quot;character&quot;, length = rows), `Not Human` = vector(mode = &quot;character&quot;, length = rows) ) # N for Human table[1, 2] &lt;- paste0( &quot;(N = &quot;, filter(starwars, human == &quot;Yes&quot;) %&gt;% nrow() %&gt;% format(big.mark = &quot;,&quot;), &quot;)&quot; ) # N for Not Human table[1, 3] &lt;- paste0( &quot;(N = &quot;, filter(starwars, human == &quot;No&quot;) %&gt;% nrow() %&gt;% format(big.mark = &quot;,&quot;), &quot;)&quot; ) table ## # A tibble: 4 √ó 3 ## Variable Human `Not Human` ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;&quot; &quot;(N = 35)&quot; &quot;(N = 48)&quot; ## 2 &quot;&quot; &quot;&quot; &quot;&quot; ## 3 &quot;&quot; &quot;&quot; &quot;&quot; ## 4 &quot;&quot; &quot;&quot; &quot;&quot; Finally, I‚Äôll fill in the table using a for loop. In this case, I just want to compare the mean height, mass, and birth year of humans and non-humans. vars &lt;- c(quo(height), quo(mass), quo(birth_year)) # Create vector of quotures for variables of interest for(i in seq_along(vars)) { table[i + 1, ] &lt;- starwars %&gt;% # Chunk of table to receive loop output filter(!is.na(human)) %&gt;% group_by(human) %&gt;% summarise(Mean = mean(!!vars[[i]], na.rm = TRUE)) %&gt;% # Use !! with vars[[i]] mutate(Mean = round(Mean, 1) %&gt;% format(nsmall = 1)) %&gt;% tidyr::spread(human, Mean) %&gt;% mutate(Variable = quo_name(vars[[i]])) %&gt;% # Use quo_name to get variable name for first column select(Variable, Yes, No) } table ## # A tibble: 4 √ó 3 ## Variable Human `Not Human` ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;&quot; &quot;(N = 35)&quot; (N = 48) ## 2 &quot;height&quot; &quot;176.6&quot; 172.4 ## 3 &quot;mass&quot; &quot; 82.8&quot; 107.6 ## 4 &quot;birth_year&quot; &quot; 53.4&quot; 139.3 This works! How can I keep from having to type quo around every variable? vars &lt;- quos(height, mass, birth_year) for(i in seq_along(vars)) { table[i + 1, ] &lt;- starwars %&gt;% # Chunk of table to receive loop output filter(!is.na(human)) %&gt;% group_by(human) %&gt;% summarise(Mean = mean(!!vars[[i]], na.rm = TRUE)) %&gt;% # Use !! with vars[[i]] mutate(Mean = round(Mean, 1) %&gt;% format(nsmall = 1)) %&gt;% tidyr::spread(human, Mean) %&gt;% mutate(Variable = quo_name(vars[[i]])) %&gt;% # Use quo_name to get variable name for first column select(Variable, Yes, No) } table ## # A tibble: 4 √ó 3 ## Variable Human `Not Human` ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;&quot; &quot;(N = 35)&quot; (N = 48) ## 2 &quot;height&quot; &quot;176.6&quot; 172.4 ## 3 &quot;mass&quot; &quot; 82.8&quot; 107.6 ## 4 &quot;birth_year&quot; &quot; 53.4&quot; 139.3 3.8 Example using Tidy Eval in Functions In this example, I‚Äôm creating a table of summary statistics using the Starwars data. The table will compare some simple characteristics of the characters by species. First, I‚Äôm going to reclassify every character as Human or Not Human starwars &lt;- mutate(starwars, human = if_else(species == &quot;Human&quot;, &quot;Yes&quot;, &quot;No&quot;, NA_character_)) Now I‚Äôm going to create the table shell vars = 3 # Number of vars rows = vars + 1 # Additional row for group sample size table &lt;- tibble( Variable = vector(mode = &quot;character&quot;, length = rows), Human = vector(mode = &quot;character&quot;, length = rows), `Not Human` = vector(mode = &quot;character&quot;, length = rows) ) # N for Human table[1, 2] &lt;- paste0( &quot;(N = &quot;, filter(starwars, human == &quot;Yes&quot;) %&gt;% nrow() %&gt;% format(big.mark = &quot;,&quot;), &quot;)&quot; ) # N for Not Human table[1, 3] &lt;- paste0( &quot;(N = &quot;, filter(starwars, human == &quot;No&quot;) %&gt;% nrow() %&gt;% format(big.mark = &quot;,&quot;), &quot;)&quot; ) table ## # A tibble: 4 √ó 3 ## Variable Human `Not Human` ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;&quot; &quot;(N = 35)&quot; &quot;(N = 48)&quot; ## 2 &quot;&quot; &quot;&quot; &quot;&quot; ## 3 &quot;&quot; &quot;&quot; &quot;&quot; ## 4 &quot;&quot; &quot;&quot; &quot;&quot; Finally, I‚Äôll fill in the table using a user-defined function. In this case, I just want to compare the mean height, mass, and birth year of humans and non-humans. my_stats &lt;- function(...) { vars &lt;- quos(...) # Creates a list of quotures from variable names temp &lt;- get(&quot;table&quot;) # Grabs a copy of the table shell from the environment temp &lt;- temp[0, ] # Only keep the column headers for(i in seq_along(vars)) { # Loop over all variables in ... out &lt;- quo(!!vars[[i]]) # Not necessary, but makes more readable. name &lt;- quo_name(out) # Turns variable name into string for mutate below. row &lt;- starwars %&gt;% # Creates a single row of stats for the table. filter(!is.na(human)) %&gt;% group_by(human) %&gt;% summarise(Mean = mean(!!out, na.rm = TRUE)) %&gt;% # Still need !! mutate(Mean = round(Mean, 1) %&gt;% format(nsmall = 1)) %&gt;% tidyr::spread(human, Mean) %&gt;% mutate(Variable = name) %&gt;% select(Variable, Yes, No) temp &lt;- rbind(temp, row) } temp } table[2:4, ] &lt;- my_stats(height, mass, birth_year) # Notice that we no longer need to us quo table ## # A tibble: 4 √ó 3 ## Variable Human `Not Human` ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;&quot; &quot;(N = 35)&quot; (N = 48) ## 2 &quot;height&quot; &quot;176.6&quot; 172.4 ## 3 &quot;mass&quot; &quot; 82.8&quot; 107.6 ## 4 &quot;birth_year&quot; &quot; 53.4&quot; 139.3 3.9 Using tidyeval with purrr I have a situation that I‚Äôm a little confused about. I think if I could understand the contrived situation below, then I could figure out my issue. Essentially, when I use map(x, function(x) { !!x }) with tidyeval I get the result that I expect. When I try to use the purrr shortcut, i.e., map(x, ~ { !!. }) I get an error. I don‚Äôt understand why. If anybody has insight that they care to share, I would really appreciate it! A reprex is below: This works as expected: vars &lt;- quos(gender, species) map_df(vars, function(x){ starwars %&gt;% group_by(!! x) %&gt;% summarise(mean(height, na.rm = TRUE)) }) ## # A tibble: 41 √ó 3 ## gender `mean(height, na.rm = TRUE)` species ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 feminine 165. &lt;NA&gt; ## 2 masculine 177. &lt;NA&gt; ## 3 &lt;NA&gt; 181. &lt;NA&gt; ## 4 &lt;NA&gt; 79 Aleena ## 5 &lt;NA&gt; 198 Besalisk ## 6 &lt;NA&gt; 198 Cerean ## 7 &lt;NA&gt; 196 Chagrian ## 8 &lt;NA&gt; 168 Clawdite ## 9 &lt;NA&gt; 131. Droid ## 10 &lt;NA&gt; 112 Dug ## # ‚Ä¶ with 31 more rows I‚Äôm not sure why this doesn‚Äôt work: # vars &lt;- quos(gender, species) # # map_df(vars, ~ { # starwars %&gt;% # group_by(!! .) %&gt;% # summarise(mean(height, na.rm = TRUE)) # }) The answer is to use ‚Äú.x‚Äù instead of ‚Äú.‚Äù: vars &lt;- quos(gender, species) map_df(vars, ~ { starwars %&gt;% group_by(!! .x) %&gt;% summarise(mean(height, na.rm = TRUE)) }) ## # A tibble: 41 √ó 3 ## gender `mean(height, na.rm = TRUE)` species ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 feminine 165. &lt;NA&gt; ## 2 masculine 177. &lt;NA&gt; ## 3 &lt;NA&gt; 181. &lt;NA&gt; ## 4 &lt;NA&gt; 79 Aleena ## 5 &lt;NA&gt; 198 Besalisk ## 6 &lt;NA&gt; 198 Cerean ## 7 &lt;NA&gt; 196 Chagrian ## 8 &lt;NA&gt; 168 Clawdite ## 9 &lt;NA&gt; 131. Droid ## 10 &lt;NA&gt; 112 Dug ## # ‚Ä¶ with 31 more rows However, I‚Äôm not entirely sure why. When I have more time, I‚Äôd like to figure this out. vars &lt;- quos(gender, species) map(vars, function(x) { x }) ## [[1]] ## &lt;quosure&gt; ## expr: ^gender ## env: global ## ## [[2]] ## &lt;quosure&gt; ## expr: ^species ## env: global 3.10 Other Quirks and Lessons Learned 3.10.1 When !! doesn‚Äôt work I‚Äôve noticed that using !! doesn‚Äôt always work. At this point, I‚Äôm not exactly sure the rules related to when it works and when it doesn‚Äôt work, but I do want to write down some examples and fixes. Sometimes it‚Äôs my fault: example &lt;- function(df, var, ...) { x &lt;- enquo(var) print(!!x) # This doesn&#39;t work - need to associate the quoture variable with its data frame } starwars %&gt;% example(hair_color) ## Error: Quosures can only be unquoted within a quasiquotation context. ## ## # Bad: ## list(!!myquosure) ## ## # Good: ## dplyr::mutate(data, !!myquosure) Fix: example &lt;- function(df, var, ...) { x &lt;- enquo(var) df %&gt;% select(!!x) %&gt;% print() } starwars %&gt;% example(hair_color) ## # A tibble: 87 √ó 1 ## hair_color ## &lt;chr&gt; ## 1 blond ## 2 &lt;NA&gt; ## 3 &lt;NA&gt; ## 4 none ## 5 brown ## 6 brown, grey ## 7 brown ## 8 &lt;NA&gt; ## 9 black ## 10 auburn, white ## # ‚Ä¶ with 77 more rows 3.10.2 Unquoting inside non-dplyr functions I‚Äôve notice some weirdness when trying to unquote quotures inside functions that are inside dplyr functions. For example, if_else inside of mutate. example &lt;- function(df, var) { x &lt;- enquo(var) df %&gt;% mutate(hair_color = if_else(!!x == &quot;yellow&quot;, &quot;blond&quot;, !!x)) } starwars %&gt;% example(hair_color) ## # A tibble: 87 √ó 15 ## name height mass hair_color skin_color eye_color birth_year sex gender ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Luke S‚Ä¶ 172 77 blond fair blue 19 male mascu‚Ä¶ ## 2 C-3PO 167 75 &lt;NA&gt; gold yellow 112 none mascu‚Ä¶ ## 3 R2-D2 96 32 &lt;NA&gt; white, bl‚Ä¶ red 33 none mascu‚Ä¶ ## 4 Darth ‚Ä¶ 202 136 none white yellow 41.9 male mascu‚Ä¶ ## 5 Leia O‚Ä¶ 150 49 brown light brown 19 fema‚Ä¶ femin‚Ä¶ ## 6 Owen L‚Ä¶ 178 120 brown, grey light blue 52 male mascu‚Ä¶ ## 7 Beru W‚Ä¶ 165 75 brown light blue 47 fema‚Ä¶ femin‚Ä¶ ## 8 R5-D4 97 32 &lt;NA&gt; white, red red NA none mascu‚Ä¶ ## 9 Biggs ‚Ä¶ 183 84 black light brown 24 male mascu‚Ä¶ ## 10 Obi-Wa‚Ä¶ 182 77 auburn, wh‚Ä¶ fair blue-gray 57 male mascu‚Ä¶ ## # ‚Ä¶ with 77 more rows, and 6 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, ## # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;, human &lt;chr&gt; Fix: example &lt;- function(df, var) { x &lt;- enquo(var) df %&gt;% mutate(hair_color = if_else(rlang::UQ(x) == &quot;yellow&quot;, &quot;blond&quot;, rlang::UQ(x))) } starwars %&gt;% example(hair_color) ## Warning: Prefixing `UQ()` with the rlang namespace is deprecated as of rlang 0.3.0. ## Please use the non-prefixed form or `!!` instead. ## ## # Bad: ## rlang::expr(mean(rlang::UQ(var) * 100)) ## ## # Ok: ## rlang::expr(mean(UQ(var) * 100)) ## ## # Good: ## rlang::expr(mean(!!var * 100)) ## ## This warning is displayed once per session. ## # A tibble: 87 √ó 15 ## name height mass hair_color skin_color eye_color birth_year sex gender ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Luke S‚Ä¶ 172 77 blond fair blue 19 male mascu‚Ä¶ ## 2 C-3PO 167 75 &lt;NA&gt; gold yellow 112 none mascu‚Ä¶ ## 3 R2-D2 96 32 &lt;NA&gt; white, bl‚Ä¶ red 33 none mascu‚Ä¶ ## 4 Darth ‚Ä¶ 202 136 none white yellow 41.9 male mascu‚Ä¶ ## 5 Leia O‚Ä¶ 150 49 brown light brown 19 fema‚Ä¶ femin‚Ä¶ ## 6 Owen L‚Ä¶ 178 120 brown, grey light blue 52 male mascu‚Ä¶ ## 7 Beru W‚Ä¶ 165 75 brown light blue 47 fema‚Ä¶ femin‚Ä¶ ## 8 R5-D4 97 32 &lt;NA&gt; white, red red NA none mascu‚Ä¶ ## 9 Biggs ‚Ä¶ 183 84 black light brown 24 male mascu‚Ä¶ ## 10 Obi-Wa‚Ä¶ 182 77 auburn, wh‚Ä¶ fair blue-gray 57 male mascu‚Ä¶ ## # ‚Ä¶ with 77 more rows, and 6 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, ## # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;, human &lt;chr&gt; 3.10.3 Using a quoture to create variable name in mutate Additionally, sometimes there is some trickiness to naming (or overwriting) a variable name inside of mutate. example &lt;- function(df, var) { x &lt;- enquo(var) df %&gt;% mutate(!!x = if_else(rlang::UQ(x) == &quot;yellow&quot;, &quot;blond&quot;, rlang::UQ(x))) } starwars %&gt;% example(hair_color) ## Error: &lt;text&gt;:5:16: unexpected &#39;=&#39; ## 4: df %&gt;% ## 5: mutate(!!x = ## ^ This doesn‚Äôt help either: example &lt;- function(df, var) { x &lt;- enquo(var) df %&gt;% mutate(!!x := if_else(rlang::UQ(x) == &quot;yellow&quot;, &quot;blond&quot;, rlang::UQ(x))) } starwars %&gt;% example(hair_color) ## # A tibble: 87 √ó 15 ## name height mass hair_color skin_color eye_color birth_year sex gender ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Luke S‚Ä¶ 172 77 blond fair blue 19 male mascu‚Ä¶ ## 2 C-3PO 167 75 &lt;NA&gt; gold yellow 112 none mascu‚Ä¶ ## 3 R2-D2 96 32 &lt;NA&gt; white, bl‚Ä¶ red 33 none mascu‚Ä¶ ## 4 Darth ‚Ä¶ 202 136 none white yellow 41.9 male mascu‚Ä¶ ## 5 Leia O‚Ä¶ 150 49 brown light brown 19 fema‚Ä¶ femin‚Ä¶ ## 6 Owen L‚Ä¶ 178 120 brown, grey light blue 52 male mascu‚Ä¶ ## 7 Beru W‚Ä¶ 165 75 brown light blue 47 fema‚Ä¶ femin‚Ä¶ ## 8 R5-D4 97 32 &lt;NA&gt; white, red red NA none mascu‚Ä¶ ## 9 Biggs ‚Ä¶ 183 84 black light brown 24 male mascu‚Ä¶ ## 10 Obi-Wa‚Ä¶ 182 77 auburn, wh‚Ä¶ fair blue-gray 57 male mascu‚Ä¶ ## # ‚Ä¶ with 77 more rows, and 6 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, ## # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;, human &lt;chr&gt; Fix: Must have !! in front of quo_name(). Must use := instead of =. example &lt;- function(df, var) { x &lt;- enquo(var) df %&gt;% mutate(!!quo_name(x) := if_else(rlang::UQ(x) == &quot;yellow&quot;, &quot;blond&quot;, rlang::UQ(x))) } starwars %&gt;% example(hair_color) ## # A tibble: 87 √ó 15 ## name height mass hair_color skin_color eye_color birth_year sex gender ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 Luke S‚Ä¶ 172 77 blond fair blue 19 male mascu‚Ä¶ ## 2 C-3PO 167 75 &lt;NA&gt; gold yellow 112 none mascu‚Ä¶ ## 3 R2-D2 96 32 &lt;NA&gt; white, bl‚Ä¶ red 33 none mascu‚Ä¶ ## 4 Darth ‚Ä¶ 202 136 none white yellow 41.9 male mascu‚Ä¶ ## 5 Leia O‚Ä¶ 150 49 brown light brown 19 fema‚Ä¶ femin‚Ä¶ ## 6 Owen L‚Ä¶ 178 120 brown, grey light blue 52 male mascu‚Ä¶ ## 7 Beru W‚Ä¶ 165 75 brown light blue 47 fema‚Ä¶ femin‚Ä¶ ## 8 R5-D4 97 32 &lt;NA&gt; white, red red NA none mascu‚Ä¶ ## 9 Biggs ‚Ä¶ 183 84 black light brown 24 male mascu‚Ä¶ ## 10 Obi-Wa‚Ä¶ 182 77 auburn, wh‚Ä¶ fair blue-gray 57 male mascu‚Ä¶ ## # ‚Ä¶ with 77 more rows, and 6 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, ## # films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;, human &lt;chr&gt; 3.10.4 Using a quoture to turn a variable name into a constant value When I‚Äôm looping over many variables, I often want to create a variable in my output called ‚Äúcharacteristic‚Äù or ‚Äúvariable‚Äù that captures the current variable name as a value. example &lt;- function(df, var) { x &lt;- enquo(var) # Make sure to use enquo here df %&gt;% summarise( Mean = mean(!!x, na.rm = TRUE) ) %&gt;% mutate(Characteristic = !!quo_name(x)) %&gt;% # Make sure to use !!quo_name() select(Characteristic, Mean) } starwars %&gt;% example(height) ## # A tibble: 1 √ó 2 ## Characteristic Mean ## &lt;chr&gt; &lt;dbl&gt; ## 1 height 174. 3.10.5 Convert a string to a quoture Here are some useful websites: https://github.com/tidyverse/rlang/issues/116 https://stackoverflow.com/questions/27975124/pass-arguments-to-dplyr-functions/44594223#44594223 https://stackoverflow.com/questions/44593596/how-to-pass-strings-denoting-expressions-to-dplyr-0-7-verbs/44593617#44593617 Sometimes, I want to pass a variable name as a string to a function. It then needs to be converted to a quoture for evaluation. 3.10.5.1 Simple example - Now this works my_col &lt;- names(starwars[2]) # Have a variable name as a quoted string my_col &lt;- &quot;mass&quot; starwars %&gt;% select(!!my_col) # Now this works ## # A tibble: 87 √ó 1 ## mass ## &lt;dbl&gt; ## 1 77 ## 2 75 ## 3 32 ## 4 136 ## 5 49 ## 6 120 ## 7 75 ## 8 32 ## 9 84 ## 10 77 ## # ‚Ä¶ with 77 more rows 3.10.5.2 When the string is created inside the function starwars$height_squared &lt;- starwars$height**2 example &lt;- function(df, var) { x &lt;- enquo(var) # First, turn var without the suffix into a quoture - must be first squared &lt;- paste(quo_name(x), &quot;squared&quot;, sep = &quot;_&quot;) # Must use quo_name() df %&gt;% summarise( Mean = mean(!!squared, na.rm = TRUE) ) } starwars %&gt;% example(height) ## Warning in mean.default(&quot;height_squared&quot;, na.rm = TRUE): argument is not numeric ## or logical: returning NA ## # A tibble: 1 √ó 1 ## Mean ## &lt;dbl&gt; ## 1 NA Fix (Method prefered by Hadley and Lionel): example &lt;- function(df, var) { x &lt;- enquo(var) # First, turn var without the suffix into a quoture - must be first squared &lt;- paste(quo_name(x), &quot;squared&quot;, sep = &quot;_&quot;) # Must use quo_name() squared &lt;- rlang::sym(squared) # Wrap with sym() df %&gt;% summarise( Mean = mean(!!squared, na.rm = TRUE) ) } starwars %&gt;% example(height) ## # A tibble: 1 √ó 1 ## Mean ## &lt;dbl&gt; ## 1 31595. Or: example &lt;- function(df, var) { x &lt;- enquo(var) # First, turn var without the suffix into a quoture - must be first squared &lt;- paste(quo_name(x), &quot;squared&quot;, sep = &quot;_&quot;) # Must use quo_name() squared &lt;- as.name(squared) # Wrap with as.name() df %&gt;% summarise( Mean = mean(!!squared, na.rm = TRUE) ) } starwars %&gt;% example(height) ## # A tibble: 1 √ó 1 ## Mean ## &lt;dbl&gt; ## 1 31595. Or: example &lt;- function(df, var) { x &lt;- enquo(var) # First, turn var without the suffix into a quoture - must be first squared &lt;- paste(quo_name(x), &quot;squared&quot;, sep = &quot;_&quot;) # Must use quo_name() squared &lt;- rlang::parse_quosure(squared) # Wrap with parse_quosure df %&gt;% summarise( Mean = mean(!!squared, na.rm = TRUE) ) } starwars %&gt;% example(height) ## Warning: `parse_quosure()` is deprecated as of rlang 0.2.0. ## Please use `parse_quo()` instead. ## This warning is displayed once per session. ## # A tibble: 1 √ó 1 ## Mean ## &lt;dbl&gt; ## 1 31595. 3.10.5.3 Grouping by all columns in the data frame Ran into this situation while checking for duplicate rows in APS data (DETECT pilot test) starwars_2 &lt;- starwars %&gt;% select(-films, -vehicles, -starships) # Remove list columns starwars_2 %&gt;% group_by(names(starwars)) %&gt;% filter(n() &gt; 1) %&gt;% count() %&gt;% ungroup() %&gt;% select(n) ## Error: Problem adding computed columns in `group_by()`. ## x Problem with `mutate()` input `..1`. ## ‚Ñπ `..1 = names(starwars)`. ## ‚Ñπ `..1` must be size 87 or 1, not 16. Fix: In this case, we could have used the built-in group_by_all starwars_2 &lt;- starwars %&gt;% select(-films, -vehicles, -starships) # Remove list columns starwars_2 %&gt;% group_by_all() %&gt;% filter(n() &gt; 1) %&gt;% count() %&gt;% ungroup() %&gt;% select(n) ## # A tibble: 0 √ó 1 ## # ‚Ä¶ with 1 variable: n &lt;int&gt; And, there are no duplicates. Another, more general solution for using all column names is: starwars_2 &lt;- starwars %&gt;% select(-films, -vehicles, -starships) # Remove list columns my_cols &lt;- starwars_2 %&gt;% names() %&gt;% rlang::syms() starwars_2 %&gt;% group_by(!!!my_cols) %&gt;% # Remember to use splice &#39;!!!&#39; filter(n() &gt; 1) %&gt;% count() %&gt;% ungroup() %&gt;% select(n) ## # A tibble: 0 √ó 1 ## # ‚Ä¶ with 1 variable: n &lt;int&gt; top 3.11 Example I created for Steph Yap Need to clean this up, but I don‚Äôt have time now. Here is a worked example using some toy data aps_cleaned &lt;- tibble( case_num = 1:3, valid_physical_neglect = c(0, 1, 0), valid_sexual_abuse = 0 ) discrepancies_valid_physical_neglect &lt;-tibble( case_num = 1, valid_physical_neglect = 1 ) discrepancies_valid_sexual_abuse &lt;- tibble( case_num = 3, valid_sexual_abuse = 1 ) Create the function Here is a refernce to help with the tidy evaluation stuff: https://dplyr.tidyverse.org/articles/programming.html join_aps &lt;- function(.data = aps_cleaned, join_df, valid_col) { # Create column names to use in the code below col_x &lt;- sym(paste0(quo_name(enquo(valid_col)), ‚Äú.x‚Äù)) col_y &lt;- sym(paste0(quo_name(enquo(valid_col)), ‚Äú.y‚Äù)) .data %&gt;% left_join(join_df, by = ‚Äúcase_num‚Äù) %&gt;% mutate( \"{{valid_col}}_cleaned\" := if_else( is.na({{ col_y }}), {{ col_x }}, {{ col_y }} ) ) } Test function aps_cleaned %&gt;% join_aps(discrepancies_valid_physical_neglect, valid_physical_neglect) 3.12 Other questions / notes / reminders Go back and add more basic information about rlang::sym() and some of the other rlang functions There is also some function to see what is going on ‚Äúunder the hood.‚Äù I don‚Äôt recall what it is right now, but I should probably discuss it as well. ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] purrr_0.3.4 tidyr_1.1.3 dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] rstudioapi_0.13 knitr_1.33 magrittr_2.0.1 tidyselect_1.1.1 ## [5] R6_2.5.1 rlang_0.4.12 fansi_0.5.0 stringr_1.4.0 ## [9] highr_0.9 tools_4.1.0 xfun_0.24 utf8_1.2.2 ## [13] cli_3.1.0 DBI_1.1.1 jquerylib_0.1.4 ellipsis_0.3.2 ## [17] htmltools_0.5.1.1 assertthat_0.2.1 yaml_2.2.1 digest_0.6.27 ## [21] tibble_3.1.6 lifecycle_1.0.1 crayon_1.4.2 bookdown_0.22 ## [25] sass_0.4.0 vctrs_0.3.8 glue_1.5.0 evaluate_0.14 ## [29] rmarkdown_2.9 stringi_1.7.3 compiler_4.1.0 bslib_0.2.5.1 ## [33] pillar_1.6.4 generics_0.1.1 jsonlite_1.7.2 pkgconfig_2.0.3 "],["arranging-columns-with-across.html", "4 Arranging Columns with Across 4.1 Solution by LMc:", " 4 Arranging Columns with Across I‚Äôm trying to arrange calculated columns immediately after source columns when using dplyr column-wise operations. https://stackoverflow.com/questions/67076974/arrange-calculated-columns-immediately-after-source-columns-when-using-dplyr-col/67077122#67077122 https://community.rstudio.com/t/arrange-calculated-columns-immediately-after-source-columns-when-using-dplyr-column-wise-operations/101726 library(dplyr) Example data df &lt;- tibble( id = c(1, 2, 2), id_row = c(1, 1, 2), name_first = c(&quot;John&quot;, &quot;Jane&quot;, &quot;Jane&quot;), city = c(&quot;NY&quot;, &quot;DAL&quot;, &quot;HOU&quot;), x = c(0, 1, 0) ) df ## # A tibble: 3 √ó 5 ## id id_row name_first city x ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 1 1 John NY 0 ## 2 2 1 Jane DAL 1 ## 3 2 2 Jane HOU 0 Within ID, the values of name_first and city should be constant. The values for id_row and x need not be constant. I want to test for and inspect differing values of name_first and city within-id. One convenient way to do this is with mutate() and across(). df %&gt;% group_by(id) %&gt;% mutate( across( .cols = c(name_first, city), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) ## # A tibble: 3 √ó 7 ## # Groups: id [2] ## id id_row name_first city x name_first_all_match city_all_match ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;lgl&gt; &lt;lgl&gt; ## 1 1 1 John NY 0 TRUE TRUE ## 2 2 1 Jane DAL 1 TRUE FALSE ## 3 2 2 Jane HOU 0 TRUE FALSE The issue is that the ‚Äúall_match‚Äù (calculated) columns are added to the far right of the data frame rather than immediately after their source column. This makes it difficult to visually inspect differing values for the columns of interest. Of course, in this small data frame, we could easily rearrange the columns using select(). df %&gt;% group_by(id) %&gt;% mutate( across( .cols = c(name_first, city), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) %&gt;% select(id, id_row, starts_with(&quot;name_first&quot;), starts_with(&quot;city&quot;), x) ## # A tibble: 3 √ó 7 ## # Groups: id [2] ## id id_row name_first name_first_all_match city city_all_match x ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 1 1 John TRUE NY TRUE 0 ## 2 2 1 Jane TRUE DAL FALSE 1 ## 3 2 2 Jane TRUE HOU FALSE 0 The issue with that approach is that it quickly becomes pretty cumbersome with more columns. A more tractable approach would be to sort the names alphabetically‚Ä¶ df %&gt;% group_by(id) %&gt;% mutate( across( .cols = c(name_first, city), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) %&gt;% select(sort(names(.))) ## # A tibble: 3 √ó 7 ## # Groups: id [2] ## city city_all_match id id_row name_first name_first_all_match x ## &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 NY TRUE 1 1 John TRUE 0 ## 2 DAL FALSE 2 1 Jane TRUE 1 ## 3 HOU FALSE 2 2 Jane TRUE 0 ‚Ä¶but in my situation I need to preserve the original column order. I‚Äôd also prefer to stick with Tidyverse solutions if possible. Any ideas are appreciated! 4.1 Solution by LMc: # Use select because it allows for more complex column selection when working # with more complex data frames. inspect_cols &lt;- df %&gt;% select(name_first, city) %&gt;% names() # Set column order ahead of time. This assumes that you know the names of each # of the columns you want to inspect col_order &lt;- purrr::map( names(df), function(x) { if (x %in% inspect_cols) { c(x, paste0(x, &quot;_all_match&quot;)) } else { x } } ) %&gt;% unlist() df %&gt;% group_by(id) %&gt;% mutate( across( .cols = all_of(inspect_cols), .fns = ~ length(unique(.x)) == 1, .names = &quot;{col}_all_match&quot; ) ) %&gt;% dplyr::select(all_of(col_order)) ## # A tibble: 3 √ó 7 ## # Groups: id [2] ## id id_row name_first name_first_all_match city city_all_match x ## &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt; ## 1 1 1 John TRUE NY TRUE 0 ## 2 2 1 Jane TRUE DAL FALSE 1 ## 3 2 2 Jane TRUE HOU FALSE 0 ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] purrr_0.3.4 tidyr_1.1.3 dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] rstudioapi_0.13 knitr_1.33 magrittr_2.0.1 tidyselect_1.1.1 ## [5] R6_2.5.1 rlang_0.4.12 fansi_0.5.0 stringr_1.4.0 ## [9] highr_0.9 tools_4.1.0 xfun_0.24 utf8_1.2.2 ## [13] cli_3.1.0 DBI_1.1.1 jquerylib_0.1.4 ellipsis_0.3.2 ## [17] htmltools_0.5.1.1 assertthat_0.2.1 yaml_2.2.1 digest_0.6.27 ## [21] tibble_3.1.6 lifecycle_1.0.1 crayon_1.4.2 bookdown_0.22 ## [25] sass_0.4.0 vctrs_0.3.8 glue_1.5.0 evaluate_0.14 ## [29] rmarkdown_2.9 stringi_1.7.3 compiler_4.1.0 bslib_0.2.5.1 ## [33] pillar_1.6.4 generics_0.1.1 jsonlite_1.7.2 pkgconfig_2.0.3 "],["column-names-prepping-many-for-merge.html", "5 Column Names: Prepping Many for Merge 5.1 ‚≠êÔ∏èOverview 5.2 üåéUseful websites 5.3 üì¶Load packages 5.4 üî¢Simulate data 5.5 Get the existing column names 5.6 Standardize new column names 5.7 Turn this into a function 5.8 Manual changes to column names 5.9 Have R write out the rename code 5.10 Rename the columns 5.11 Repeat the process for V2 5.12 Repeat the process for V3 5.13 Merge all 3 visits 5.14 Final data cleaning 5.15 üü£The dplyr way 5.16 üü¢ Making a key in Google Sheets", " 5 Column Names: Prepping Many for Merge 5.1 ‚≠êÔ∏èOverview The inspiration for this chapter came about when I was trying to merge the QDS visit 1 through visit 5 files that were part of the Link2Care project. All of the QDS files (plus some other files) needed to be merged together into a final analysis data set. However, not all questions were asked at all visits and column names were inconsistently used across visits. Even when the names were almost the same, a visit number was attached to the name (e.g., TODAY_V1, TODAY_V2, TODAY_V3, etc.). Finally, each data set contained 800+ columns, which made renaming them all manually tedious and error prone. So, I‚Äôm trying to come up with a better way. One method I came up with was reading in the variable names from the Word codebooks and then modifying them. Using this method required making some custom styles in Word and applying those styles to the column names. This seemed to work pretty well at first, but then Joe and James made some changes to QDS, which rendered the codebooks I‚Äôd made all the changes to obsolete. This left me with two options: Have some of the variable name adjustments pulled from the codebook and some of the variable name adjustments done manually in the R code (e.g., T26, visit type). Keep all of the adjustments in the codebook, which means converting the new codebooks to word documents, and going back through them to format all of the old column names again. Neither of these options seems very robust or future-proof. While it might be a lot of work upfront, I‚Äôm starting to think that just doing all of the variable renaming in the R code might be the way to go. Below, I‚Äôm going to play around with how to automate as much of this process as possible. 5.2 üåéUseful websites GitHub issue R4Epi rename_with exampe rename_with documentation Getting your data into R from Google Sheets RStudio Community: Rename with a named vector/list and contribution to the tidyverse 5.3 üì¶Load packages library(dplyr) library(stringr) library(testthat) library(tidyr) library(purrr) library(googlesheets4) 5.4 üî¢Simulate data Simulate 3 QDS data sets. Don‚Äôt worry about the values much. They really aren‚Äôt the issue for this example. SUBJECT: No change in column name across visits. TODAY_V and VISIT_V: The _V1, _V2, _V3 part changes. SQ_2: Only exists in v1, and the name is altered. GROUP: Only exists in v3. WEIGHT and WEIGHT3: Doesn‚Äôt exist in v2 and doesn‚Äôt follow any naming convention. DEMO16G and DEM14GV3: The variable was named incorrectly in v1. DS10A_V2: Only asked in v2 and doesn‚Äôt follow typical naming convention. DEM15V1: Only asked in v1 and I want to change the name completely. T26A_V1: Only exists in v1 and v3. Also, it needs to be renamed. T26A_V1A and T26A_V1B: Only exists in v1 and v3. Needs to be renamed, and it requires using the dummy variable naming convention. T31_V1B, T31_V3B, T31B_V1, and T31B_V3: Added these later. In v1, v3, v4, and v5 there is a column named T31B_V1 and a column named T31_V1B. The standardize_col_names() function converts both of these to t_31b, which causes rename_with() to throw an error. Further, I can‚Äôt just manually change it to t33 (what it will ultimately end up being named) before I run standardize_col_names() because then in conflicts with T33_V1. I need to find a solution inside of the standardize_col_names() function. Additionally, we want to convert all column names to lower case and follow these naming conventions: The typical way that variables are named in these data sets is: [optionally:dummy_variable_lettered] For example: BPM1_V1, LSN3_V1 _[optionally:dummy_variable_lettered] For example: Screening Question 2 is named: SQ_2 OR: The dummy variable for the ‚ÄúEMAIL‚Äù Response to Screening Question 18 is: SQ_18A Many questions also have the visit number embedded in the name. For example: Demographics question 1 is: DEM1V1. However, there are some exceptions to this rule - intentional or not. For example, the fifth MMSE question is: MMS4V In order to improve consistency in the variable names, we will adopt the following convention: _[optionally:dummy_variable_lettered] dummy variables will be numbered a-z For example, sq_12, t_14a We will drop visit number from the variable name an use an explicit visit variable. Exceptions: Demographic variables that almost anyone should be reasonably able to understand without the codebook will be given intuitive, descriptive names (e.g., age, race, gender, marital_status, etc.). I‚Äôm also going to change ‚ÄúSUBJECT‚Äù to ‚Äúid.‚Äù v1 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V1 = as.Date(c(&quot;2018-04-07&quot;, &quot;2018-05-03&quot;)), VISIT_V1 = 1, SQ_2 = c(1, 0), WEIGHT = c(179, 194), DEMO16G = c(0, 1), DEM15V1 = c(1, 0), T26A_V1 = c(2, 4), T26A_V1A = c(0, 0), T26A_V1B = c(1, 0), T31_V1B = c(0, 0), T31B_V1 = c(0, 0) ) v2 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V2 = as.Date(c(&quot;2018-04-30&quot;, &quot;2018-05-07&quot;)), VISIT_V2 = 2 ) v3 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V3 = as.Date(c(&quot;2018-05-31&quot;, &quot;2018-06-08&quot;)), VISIT_V3 = 3, GROUP = c(1, 2), WEIGHT3 = c(179, 194), DEM14GV3 = c(2, 3), T26A_V3 = c(2, 4), T26A_V3A = c(0, 0), T26A_V3B = c(1, 0), T31_V3B = c(0, 0), T31B_V3 = c(0, 0) ) 5.5 Get the existing column names v1_old_names &lt;- names(v1) v1_old_names ## [1] &quot;SUBJECT&quot; &quot;TODAY_V1&quot; &quot;VISIT_V1&quot; &quot;SQ_2&quot; &quot;WEIGHT&quot; &quot;DEMO16G&quot; ## [7] &quot;DEM15V1&quot; &quot;T26A_V1&quot; &quot;T26A_V1A&quot; &quot;T26A_V1B&quot; &quot;T31_V1B&quot; &quot;T31B_V1&quot; 5.6 Standardize new column names Remove _v{1, 2, 3} and v{1, 2, 3} from column names Replace spaces with underscores Convert to lower case Add underscore in-between the abbreviated tool name and question number This won‚Äôt be perfect, but it will drastically reduce the number of manual changes we have to make. # Remove _v1 from column name # Remove v1 at end of column name (e.g., DEM1v3) v1_new_names &lt;- stringr::str_replace(v1_old_names, &quot;_V1|V1&quot;, &quot;&quot;) # Replace spaces with underscores v1_new_names &lt;- stringr::str_replace_all(v1_new_names, &quot; &quot;, &quot;_&quot;) # Convert to lower case v1_new_names &lt;- stringr::str_to_lower(v1_new_names) # Add underscore in-between the abbreviated tool name and question number v1_new_names &lt;- stringr::str_replace(v1_new_names, &quot;([a-z])(\\\\d)&quot;, &quot;\\\\1_\\\\2&quot;) v1_new_names ## [1] &quot;subject&quot; &quot;today&quot; &quot;visit&quot; &quot;sq_2&quot; &quot;weight&quot; &quot;demo_16g&quot; ## [7] &quot;dem_15&quot; &quot;t_26a&quot; &quot;t_26aa&quot; &quot;t_26ab&quot; &quot;t_31b&quot; &quot;t_31b&quot; 5.7 Turn this into a function standardize_col_names &lt;- function(.data) { # Get the existing column names old_names &lt;- names(.data) # Create a string that contains _V1 through _V5 and V1 through V5 to pass to # the regular expression below v_num &lt;- paste0(&quot;_V&quot;, 1:5, collapse = &quot;|&quot;) vnum &lt;- paste0(&quot;V&quot;, 1:5, collapse = &quot;|&quot;) v_pattern &lt;- paste(paste(v_num, vnum, sep = &quot;|&quot;), collapse = &quot;|&quot;) # Remove _v{1, 2, 3} from column name # Remove v{1, 2, 3} at end of column name (e.g., DEM1v3) new_names &lt;- stringr::str_replace(old_names, v_pattern, &quot;&quot;) # Replace spaces with underscores new_names &lt;- stringr::str_replace_all(new_names, &quot; &quot;, &quot;_&quot;) # Convert to lower case new_names &lt;- stringr::str_to_lower(new_names) # Add underscore in-between the abbreviated tool name and question number new_names &lt;- stringr::str_replace(new_names, &quot;([a-z])(\\\\d)&quot;, &quot;\\\\1_\\\\2&quot;) # Return character vector of standardized column names new_names } # For testing # standardize_col_names(v1) 5.7.1 Make a unit test for the function test_that(&quot;standardize_col_names produces the expected column names.&quot;, { v1_test &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V1 = as.Date(c(&quot;2018-04-07&quot;, &quot;2018-05-03&quot;)), VISIT_V1 = 1, SQ_2 = c(1, 0), WEIGHT = c(179, 194), DEMO16G = c(0, 1), DEM15V1 = c(1, 0), T26A_V1 = c(2, 4), T26A_V1A = c(0, 0), T26A_V1B = c(1, 0), TEST_V8 = 0 ) new_names &lt;- standardize_col_names(v1_test) expceted_new_names &lt;- c( &quot;subject&quot;, &quot;today&quot;, &quot;visit&quot;, &quot;sq_2&quot;, &quot;weight&quot;, &quot;demo_16g&quot;, &quot;dem_15&quot;, &quot;t_26a&quot;, &quot;t_26aa&quot;, &quot;t_26ab&quot;, &quot;test_v_8&quot; ) expect_equal(new_names, expceted_new_names) }) ## Test passed ü•≥ new_names &lt;- standardize_col_names(v1) 5.8 Manual changes to column names The step above used to standardize column names fixes most of them, but some manual changes to variable names still need to be made. new_names[new_names == &quot;sq_2&quot;] &lt;- &quot;sq_hispanic&quot; # demo_16g was incorrectly numbered when the data was created new_names[new_names == &quot;demo_16g&quot;] &lt;- &quot;dem_14g&quot; new_names[new_names == &quot;dem_15&quot;] &lt;- &quot;dem_veteran&quot; # Take the extra &quot;a&quot; out of all the T26 col names new_names &lt;- str_replace(new_names, &quot;t_26a&quot;, &quot;t_26&quot;) # Change the second t_31b to t_33 new_names[new_names == &quot;t_31b&quot;][2] &lt;- &quot;t_33&quot; 5.9 Have R write out the rename code So that you don‚Äôt have to type it out by hand. Ideally, you only have to run this code once, copy and paste into the rename code chunk below, and then just make small updates to the rename code chunk if changes are made to QDS. # If needed, run the code below. Copy and paste the output into the rename() # code chunk. Make manual changes as needed. new_old_name_pairs &lt;- paste(new_names, names(v1), sep = &quot; = &quot;) new_old_name_pairs &lt;- paste(new_old_name_pairs, collapse = &quot;, \\n&quot;) cat(new_old_name_pairs) ## subject = SUBJECT, ## today = TODAY_V1, ## visit = VISIT_V1, ## sq_hispanic = SQ_2, ## weight = WEIGHT, ## dem_14g = DEMO16G, ## dem_veteran = DEM15V1, ## t_26 = T26A_V1, ## t_26a = T26A_V1A, ## t_26b = T26A_V1B, ## t_31b = T31_V1B, ## t_33 = T31B_V1 5.9.1 Make it a function write_rename &lt;- function(.data, .new_names) { new_old_name_pairs &lt;- paste(.new_names, names(.data), sep = &quot; = &quot;) new_old_name_pairs &lt;- paste(new_old_name_pairs, collapse = &quot;, \\n&quot;) cat(new_old_name_pairs) } # For testing write_rename(v1, new_names) ## subject = SUBJECT, ## today = TODAY_V1, ## visit = VISIT_V1, ## sq_hispanic = SQ_2, ## weight = WEIGHT, ## dem_14g = DEMO16G, ## dem_veteran = DEM15V1, ## t_26 = T26A_V1, ## t_26a = T26A_V1A, ## t_26b = T26A_V1B, ## t_31b = T31_V1B, ## t_33 = T31B_V1 5.10 Rename the columns v1 &lt;- v1 %&gt;% rename( subject = SUBJECT, today = TODAY_V1, visit = VISIT_V1, sq_hispanic = SQ_2, weight = WEIGHT, dem_14g = DEMO16G, dem_veteran = DEM15V1, t_26 = T26A_V1, t_26a = T26A_V1A, t_26b = T26A_V1B, t_31b = T31_V1B, t_33 = T31B_V1 ) 5.11 Repeat the process for V2 new_names &lt;- standardize_col_names(v2) write_rename(v2, new_names) ## subject = SUBJECT, ## today = TODAY_V2, ## visit = VISIT_V2 v2 &lt;- v2 %&gt;% rename( subject = SUBJECT, today = TODAY_V2, visit = VISIT_V2 ) 5.12 Repeat the process for V3 new_names &lt;- standardize_col_names(v3) new_names[new_names == &quot;weight_3&quot;] &lt;- &quot;weight&quot; new_names[new_names == &quot;dem_15&quot;] &lt;- &quot;dem_veteran&quot; # Take the extra &quot;a&quot; out of all the T26 col names new_names &lt;- str_replace(new_names, &quot;t_26a&quot;, &quot;t_26&quot;) # Change the second t_31b to t_33 new_names[new_names == &quot;t_31b&quot;][2] &lt;- &quot;t_33&quot; write_rename(v3, new_names) ## subject = SUBJECT, ## today = TODAY_V3, ## visit = VISIT_V3, ## group = GROUP, ## weight = WEIGHT3, ## dem_14g = DEM14GV3, ## t_26 = T26A_V3, ## t_26a = T26A_V3A, ## t_26b = T26A_V3B, ## t_31b = T31_V3B, ## t_33 = T31B_V3 v3 &lt;- v3 %&gt;% rename( subject = SUBJECT, today = TODAY_V3, visit = VISIT_V3, group = GROUP, weight = WEIGHT3, dem_14g = DEM14GV3, t_26 = T26A_V3, t_26a = T26A_V3A, t_26b = T26A_V3B, t_31b = T31_V3B, t_33 = T31B_V3 ) 5.13 Merge all 3 visits Merge all 3 visits into a single data frame qds_all_visits &lt;- v1 %&gt;% bind_rows(v2) %&gt;% bind_rows(v3) %&gt;% arrange(subject, visit) qds_all_visits ## # A tibble: 6 √ó 13 ## subject today visit sq_hispanic weight dem_14g dem_veteran t_26 t_26a ## &lt;dbl&gt; &lt;date&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2001 2018-04-07 1 1 179 0 1 2 0 ## 2 2001 2018-04-30 2 NA NA NA NA NA NA ## 3 2001 2018-05-31 3 NA 179 2 NA 2 0 ## 4 2002 2018-05-03 1 0 194 1 0 4 0 ## 5 2002 2018-05-07 2 NA NA NA NA NA NA ## 6 2002 2018-06-08 3 NA 194 3 NA 4 0 ## # ‚Ä¶ with 4 more variables: t_26b &lt;dbl&gt;, t_31b &lt;dbl&gt;, t_33 &lt;dbl&gt;, group &lt;dbl&gt; 5.14 Final data cleaning Make a couple more column name changes Carry forward time-invariant variables qds_all_visits %&gt;% rename(id = subject, date_visit = today) %&gt;% # Carry forward time-invariant variables group_by(id) %&gt;% fill(sq_hispanic, dem_veteran, group, .direction = &quot;downup&quot;) %&gt;% ungroup %&gt;% DT::datatable(options = list(scrollX = TRUE)) 5.15 üü£The dplyr way Try getting the same result as above using dplyr (rename_with) functions instead of creating and manipulating separate column name vectors. # Clean up environment first rm(list = ls()) v1 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V1 = as.Date(c(&quot;2018-04-07&quot;, &quot;2018-05-03&quot;)), VISIT_V1 = 1, SQ_2 = c(1, 0), WEIGHT = c(179, 194), DEMO16G = c(0, 1), DEM15V1 = c(1, 0), T26A_V1 = c(2, 4), T26A_V1A = c(0, 0), T26A_V1B = c(1, 0), T31_V1B = c(0, 0), T31B_V1 = c(0, 0), # Making these up to test standardize_col_names when more than one duplicate # column name would be created. T32_V1B = c(1, 1), T32B_V1 = c(1, 1) ) v2 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V2 = as.Date(c(&quot;2018-04-30&quot;, &quot;2018-05-07&quot;)), VISIT_V2 = 2 ) v3 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V3 = as.Date(c(&quot;2018-05-31&quot;, &quot;2018-06-08&quot;)), VISIT_V3 = 3, GROUP = c(1, 2), WEIGHT3 = c(179, 194), DEM14GV3 = c(2, 3), T26A_V3 = c(2, 4), T26A_V3A = c(0, 0), T26A_V3B = c(1, 0), T31_V3B = c(0, 0), T31B_V3 = c(0, 0), # Making these up to test standardize_col_names when more than one duplicate T32_V3B = c(1, 1), T32B_V3 = c(1, 1) ) 5.15.1 Standardize new column names Remove _v{1, 2, 3} and v{1, 2, 3} from column names Replace spaces with underscores Convert to lower case Add underscore in-between the abbreviated tool name and question number This won‚Äôt be perfect, but it will drastically reduce the number of manual changes we have to make. standardize_col_names &lt;- function(.data) { # Get the existing column names # When used inside of rename_with(), the column names are automatically # passed into the function with/as .data. There is no need for names(.data). old_names &lt;- .data # Create a string that contains _V1 through _V5 and V1 through V5 to pass to # the regular expression below v_num &lt;- paste0(&quot;_V&quot;, 1:5, collapse = &quot;|&quot;) vnum &lt;- paste0(&quot;V&quot;, 1:5, collapse = &quot;|&quot;) v_pattern &lt;- paste(paste(v_num, vnum, sep = &quot;|&quot;), collapse = &quot;|&quot;) # Remove _v{1, 2, 3} from column name # Remove v{1, 2, 3} at end of column name (e.g., DEM1v3) new_names &lt;- stringr::str_replace(old_names, v_pattern, &quot;&quot;) # Replace spaces with underscores new_names &lt;- stringr::str_replace_all(new_names, &quot; &quot;, &quot;_&quot;) # Convert to lower case new_names &lt;- stringr::str_to_lower(new_names) # Add underscore in-between the abbreviated tool name and question number new_names &lt;- stringr::str_replace(new_names, &quot;([a-z])(\\\\d)&quot;, &quot;\\\\1_\\\\2&quot;) # Check for duplicate names if (!length(new_names) == length(unique(new_names))) { name_counts &lt;- table(new_names) dup_names &lt;- name_counts[name_counts &gt; 1] dup_names &lt;- names(dup_names) # Set the second instance of the duplicate name back to its original name for (i in seq_along(dup_names)) { index &lt;- which(new_names == dup_names[[i]]) new_names[index][2] &lt;- old_names[index][2] # Print a message letting the user know what happened warning( &quot;Warning: &quot;, old_names[index][2], &quot; Could not be standardized because it would have created a duplicate column name. \\n&quot; ) } } # Return character vector of standardized column names new_names } # For testing # standardize_col_names(names(v1)) # rename_with(v1, standardize_col_names) Standardize all 3 data frames in one step purrr::walk( .x = paste0(&quot;v&quot;, 1:3), .f = function(df_name) { df &lt;- get(df_name, envir = .GlobalEnv) df &lt;- rename_with(df, standardize_col_names) assign(df_name, df, envir = .GlobalEnv) } ) ## Warning in .fn(names[cols], ...): Warning: T31B_V1 Could not be standardized because it would have created a duplicate column name. ## Warning in .fn(names[cols], ...): Warning: T32B_V1 Could not be standardized because it would have created a duplicate column name. ## Warning in .fn(names[cols], ...): Warning: T31B_V3 Could not be standardized because it would have created a duplicate column name. ## Warning in .fn(names[cols], ...): Warning: T32B_V3 Could not be standardized because it would have created a duplicate column name. 5.15.2 Manual changes to column names 1 The step above used to standardize column names fixes most of them, but some manual changes to variable names still need to be made. First, only make the changes to the individual data frames that will affect the merge (e.g., weight and weight_3). After the merge, we will make changes to column names that need to be changed in multiple data frames (e.g., t_26a). By doing this after the merge, it reduces code repetition and reduces the risk of typos in the column names. # demo_16g was incorrectly numbered when the data was created v1 &lt;- rename(v1, dem_14g = demo_16g) # weight_3 was missing a &quot;v&quot; when it was created in the data frame v3 &lt;- rename(v3, weight = weight_3) 5.15.3 Merge all 3 visits Merge all 3 visits into a single data frame qds_all_visits &lt;- v1 %&gt;% bind_rows(v2) %&gt;% bind_rows(v3) %&gt;% arrange(subject, visit) DT::datatable(qds_all_visits, options = list(scrollX = TRUE)) 5.15.4 Manual changes to column names 2 We already made changes to the individual data frames that would have affected the merge (e.g., weight and weight_3). Now, we will make changes to column names that need to be changed in multiple data frames (e.g., t_26a). qds_all_visits &lt;- qds_all_visits %&gt;% rename( id = subject, date_visit = today, sq_hispanic = sq_2, dem_veteran = dem_15 ) %&gt;% # Take the extra &quot;a&quot; out of all the T26 col names rename_with( ~ str_replace(.x, &quot;t_26a&quot;, &quot;t_26&quot;) ) %&gt;% # Combine T31B_V1 and T31B_V3 as t_33 # Combine T32B_V1 and T32B_V3 as t_34 mutate( t_33 = if_else(is.na(T31B_V1), T31B_V3, T31B_V1), t_34 = if_else(is.na(T32B_V1), T32B_V3, T32B_V1) ) %&gt;% select(-T31B_V1, -T31B_V3, -T32B_V1, -T32B_V3) DT::datatable(qds_all_visits, options = list(scrollX = TRUE)) 5.15.5 Final data cleaning Carry forward time-invariant variables qds_all_visits %&gt;% # Carry forward time-invariant variables group_by(id) %&gt;% fill(sq_hispanic, dem_veteran, group, .direction = &quot;downup&quot;) %&gt;% ungroup %&gt;% DT::datatable(options = list(scrollX = TRUE)) 5.16 üü¢ Making a key in Google Sheets Why might I want to do this in the first place? Pros: Everyone can use Excel. Not everyone is comfortable using RStudio. So, people other than me may be intimidated if they need to look up the changes to the column names by opening an Rmd file in RStudio. If I need to look up changes to column names, it may be faster to do so in Excel. Cons: Creating the Excel sheet may be an additional layer of work. This process creates additional documents (i.e., other than the Rmd files) to keep track of and update. However, if ALL of the updates to column names go in this spreadsheet, then it should really be the only one that requires tracking and updating. Hard to use versioning for Excel. Why use Google Sheets instead of Excel? It has all of the pros above, plus versioning. Also, Google Sheets makes it easy to use regular expressions, which I‚Äôve found useful in the past. # Clean up environment first rm(list = ls()) v1 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V1 = as.Date(c(&quot;2018-04-07&quot;, &quot;2018-05-03&quot;)), VISIT_V1 = 1, SQ_2 = c(1, 0), WEIGHT = c(179, 194), DEMO16G = c(0, 1), DEM15V1 = c(1, 0), T26A_V1 = c(2, 4), T26A_V1A = c(0, 0), T26A_V1B = c(1, 0), T31_V1B = c(0, 0), T31B_V1 = c(0, 0), # Making these up to test standardize_col_names when more than one duplicate # column name would be created. T32_V1B = c(1, 1), T32B_V1 = c(1, 1) ) v2 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V2 = as.Date(c(&quot;2018-04-30&quot;, &quot;2018-05-07&quot;)), VISIT_V2 = 2 ) v3 &lt;- tibble( SUBJECT = c(2001, 2002), TODAY_V3 = as.Date(c(&quot;2018-05-31&quot;, &quot;2018-06-08&quot;)), VISIT_V3 = 3, GROUP = c(1, 2), WEIGHT3 = c(179, 194), DEM14GV3 = c(2, 3), T26A_V3 = c(2, 4), T26A_V3A = c(0, 0), T26A_V3B = c(1, 0), T31_V3B = c(0, 0), T31B_V3 = c(0, 0), # Making these up to test standardize_col_names when more than one duplicate T32_V3B = c(1, 1), T32B_V3 = c(1, 1) ) 5.16.1 Create the Google Sheet column name key NOTE: You should only have to do this once. After you create the initial spreadsheet, all future changes to column names should occur directly in the spreadsheet. Create a new Google sheet. Name it. Rename the first sheet ‚Äúvisit1.‚Äù Name column A old_name and column B new_name. Create a character string of existing column names that you can copy and paste into the old_name column of the Google Sheet. names(v1) %&gt;% paste(collapse = &quot;\\n&quot;) %&gt;% cat() ## SUBJECT ## TODAY_V1 ## VISIT_V1 ## SQ_2 ## WEIGHT ## DEMO16G ## DEM15V1 ## T26A_V1 ## T26A_V1A ## T26A_V1B ## T31_V1B ## T31B_V1 ## T32_V1B ## T32B_V1 You can directly type new names into the new_name column. Or, you can use regular expressions in steps similar to what the standardize_col_names() function we created above does: Move new_name to column E Name column B lower and type the following function into B2: =LOWER(A2). Paste the formula down. Name column C remove_v1 and type the following function into C2: =REGEXREPLACE(B2, \"v1|_v1\", \"\"). Paste the formula down. Name column D add_underscore and type the following function into D2: =REGEXREPLACE(C2,\"([a-z])(\\d)\", \"$1_$2\"). Paste the formula down. Notice that Google Sheets uses $1 instead of \\\\1 for replacing with a capture group. Make final edits in the new_name column. 5.16.2 Import the Google Sheet column name key The first time you attempt to read-in a Google Sheet you will need to authenticate your Google user name and password. Make sure to click the check box next to ‚ÄúGrant Tidyverse API Packages permission to See, edit, create, delete, spreadsheets in Google Drive.‚Äù gs_col_name_key &lt;- read_sheet( &quot;https://docs.google.com/spreadsheets/d/1cnoOvVdblnKarVf_WQIyWtJDIOumI9VSP1WK2gTy0gU/edit?usp=sharing&quot;, sheet = &quot;visit1&quot; ) ## ! Using an auto-discovered, cached token. ## To suppress this message, modify your code or options to clearly consent to ## the use of a cached token. ## See gargle&#39;s &quot;Non-interactive auth&quot; vignette for more details: ## &lt;https://gargle.r-lib.org/articles/non-interactive-auth.html&gt; ## ‚Ñπ The googlesheets4 package is using a cached token for ## &#39;brad.cannell@gmail.com&#39;. ## ‚úì Reading from &quot;Google Sheet for column_names_prepping_many_for_merge.Rmd&quot;. ## ‚úì Range &#39;&#39;visit1&#39;&#39;. 5.16.3 Reorder and rename the current data frame You might be tempted to just rename the columns by doing something like this: names(v1) &lt;- gs_col_name_key$new_name That will work as long as there are the exact same number of columns in v1 as there are in are in gs_col_name_key$new_name, and the order of the columns in v1 perfectly matches the order of gs_col_name_key$new_name. A slightly more complex, but safer, way to do this is with rename(). Using new_name = old_name inside the rename function make it less likely to accidentally assign the wrong new_name to a column. 5.16.3.1 Create a named vector Create a named vector of old names and new names that you can pass to select() or rename(). rename_vector &lt;- gs_col_name_key$old_name names(rename_vector) &lt;- gs_col_name_key$new_name rename_vector ## id date_visit visit sq_hispanic weight dem_14g ## &quot;SUBJECT&quot; &quot;TODAY_V1&quot; &quot;VISIT_V1&quot; &quot;SQ_2&quot; &quot;WEIGHT&quot; &quot;DEMO16G&quot; ## dem_veteran t_26 t_26a t_26b t_31b t_33 ## &quot;DEM15V1&quot; &quot;T26A_V1&quot; &quot;T26A_V1A&quot; &quot;T26A_V1B&quot; &quot;T31_V1B&quot; &quot;T31B_V1&quot; ## t_32b t_34 ## &quot;T32_V1B&quot; &quot;T32B_V1&quot; 5.16.3.2 Reorder and rename the current data frame Reorder and rename the current data frame using rename_vector. v1 %&gt;% select(!!! rename_vector) %&gt;% DT::datatable(options = list(scrollX = TRUE)) 5.16.3.3 More columns in df than Sheet What if there are columns in the data frame that haven‚Äôt yet been added to the Google Sheet? v1 %&gt;% rowwise() %&gt;% mutate(T_Total = sum(c_across(T26A_V1:T32B_V1))) %&gt;% ungroup() %&gt;% rename(!!! rename_vector) %&gt;% DT::datatable(options = list(scrollX = TRUE)) It just leaves the extra column‚Äôs name unchanged, which is exactly what we want. 5.16.3.4 More columns in Sheet and df What if there are columns in the Google Sheet that aren‚Äôt in the data frame? rename_vector_2 &lt;- c(rename_vector, &quot;mms_1&quot; = &quot;MMS1&quot;) v1 %&gt;% rename(!!! rename_vector_2) %&gt;% DT::datatable(options = list(scrollX = TRUE)) ## Error: Can&#39;t rename columns that don&#39;t exist. ## x Column `MMS1` doesn&#39;t exist. R gives us a warning that we can work out. ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] googlesheets4_1.0.0 testthat_3.0.4 stringr_1.4.0 ## [4] purrr_0.3.4 tidyr_1.1.3 dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] cellranger_1.1.0 pillar_1.6.4 bslib_0.2.5.1 compiler_4.1.0 ## [5] jquerylib_0.1.4 highr_0.9 tools_4.1.0 pkgload_1.2.1 ## [9] digest_0.6.27 googledrive_2.0.0 gargle_1.2.0 jsonlite_1.7.2 ## [13] evaluate_0.14 lifecycle_1.0.1 tibble_3.1.6 pkgconfig_2.0.3 ## [17] rlang_0.4.12 DBI_1.1.1 cli_3.1.0 rstudioapi_0.13 ## [21] crosstalk_1.1.1 curl_4.3.2 yaml_2.2.1 xfun_0.24 ## [25] httr_1.4.2 withr_2.4.2 knitr_1.33 askpass_1.1 ## [29] rappdirs_0.3.3 htmlwidgets_1.5.3 desc_1.3.0 fs_1.5.0 ## [33] generics_0.1.1 vctrs_0.3.8 sass_0.4.0 DT_0.18 ## [37] rprojroot_2.0.2 tidyselect_1.1.1 glue_1.5.0 R6_2.5.1 ## [41] fansi_0.5.0 rmarkdown_2.9 bookdown_0.22 magrittr_2.0.1 ## [45] htmltools_0.5.1.1 ellipsis_0.3.2 assertthat_0.2.1 utf8_1.2.2 ## [49] stringi_1.7.3 openssl_1.4.4 crayon_1.4.2 "],["contingency-tables.html", "6 Contingency Tables 6.1 ‚≠êÔ∏èOverview 6.2 üåéUseful websites 6.3 üì¶Load packages 6.4 Scenario 6.5 Manually create data 6.6 Matrix 6.7 Table 6.8 Base R data frame with rownames 6.9 Tibble", " 6 Contingency Tables 6.1 ‚≠êÔ∏èOverview In Epi III (and epidemiology in general) we use a lot of contingency tables - especially 2x2 contingency tables. In this note, we play around with several different ways of creating contingency tables and explore the pros and cons of each. 6.2 üåéUseful websites Boston University Tables in R ‚Äì A quick practical overview. By Andri Signorell. Stack Overflow: Repeat each row of data.frame the number of times specified in a column Cookbook for R 6.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) 6.4 Scenario This scenario is borrowed from the Boston University website. Data Summary Consider the following example regarding the management of Hodgkin lymphoma, a cancer of the lymphatic system. Years ago when a patient was diagnosed with Hodgkin Disease, they would frequently undergo a surgical procedure called a ‚Äústaging laparotomy.‚Äù The purpose of the staging laparotomy was to determine the extent to which the cancer had spread, because this was important information for determining the patient‚Äôs prognosis and optimizing treatment. At times, the surgeons performing this procedure would also remove the patient‚Äôs appendix, not because it was inflamed; it was done ‚Äúincidentally‚Äù in order to ensure that the patient never had to worry about getting appendicitis. However, performing an appendectomy requires transecting it, and this has the potential to contaminate the abdomen and the wound edges with bacteria normally contained inside the appendix. Some surgeons felt that doing this ‚Äúincidental appendectomy‚Äù did the patient a favor by ensuring that they would never get appendicitis, but others felt that it meant unnecessarily increasing the patient‚Äôs risk of getting a post-operative wound infection by spreading around the bacteria that was once inside the appendix. To address this, the surgeons at a large hospital performed a retrospective cohort study. They began by going through the hospital‚Äôs medical records to identify all subjects who had had a ‚Äústaging laparotomy performed for Hodgkin.‚Äù They then reviewed the medical record and looked at the operative report to determine whether the patient had an incidental appendectomy or not. They then reviewed the progress notes, the laboratory reports, the nurses notes, and the discharge summary to determine whether the patient had developed a wound infection during the week after surgery. The investigators reviewed the records of 210 patients who had undergone the staging procedure and found that 131 had also had an incidental appendectomy, while the other 79 had not. The data from that study are summarized in the table below. The numbers in the second and third columns indicate the number of subjects who did or did not develop a post-operative wound infection among those who had the incidental appendectomy (in the ‚ÄúYes‚Äù row) and those who did not have the incidental appendectomy (in the ‚ÄúNo‚Äù row). For example, the upper left cell indicates that seven of the subjects who had an incidental appendectomy (the exposure of interest) subsequently developed a wound infection. The upper right cell indicates that the other 124 subjects who had an incidental appendectomy did NOT develop a wound infection. Had incidental appendectomy? Wound infection No wound infection Total Yes 7 124 131 No 1 78 79 Total 8 202 210 6.5 Manually create data First, we can manually create tibble with one row for each person represented in the data above. Ordinarily, this is how the data would come to us. Then, we can use various different techniques ‚Äì some of which are demonstrated below ‚Äì to summarize the data as a 2x2 contingency table. In this case, we are working backwards from the data summary to the raw data just to show one way that it can be done. This isn‚Äôt necessarily a good way to do it, however. Later, we will demonstrate more efficient and less error-prone ways to create raw data from summary tables. df &lt;- tibble( appendectomy = factor(c(rep(&quot;Yes&quot;, 7), rep(&quot;Yes&quot;, 124), &quot;No&quot;, rep(&quot;No&quot;, 78))), infection = factor(c(rep(&quot;Yes&quot;, 7), rep(&quot;No&quot;, 124), &quot;Yes&quot;, rep(&quot;No&quot;, 78))) ) df ## # A tibble: 210 √ó 2 ## appendectomy infection ## &lt;fct&gt; &lt;fct&gt; ## 1 Yes Yes ## 2 Yes Yes ## 3 Yes Yes ## 4 Yes Yes ## 5 Yes Yes ## 6 Yes Yes ## 7 Yes Yes ## 8 Yes No ## 9 Yes No ## 10 Yes No ## # ‚Ä¶ with 200 more rows 6.6 Matrix Create a contingency table using a matrix object. matrix &lt;- matrix( c(a = 7, b = 124, c = 1, d = 78), ncol = 2, byrow = TRUE ) # Add names to make the matrix more readable rownames(matrix) &lt;- c(&quot;Appendectomy&quot;, &quot;No Appendectomy&quot;) colnames(matrix) &lt;- c(&quot;Infection&quot;, &quot;No Infection&quot;) matrix ## Infection No Infection ## Appendectomy 7 124 ## No Appendectomy 1 78 Adding summary rows/columns to the matrix. matrix_w_margins &lt;- cbind(matrix, rowsum = rowSums(matrix)) matrix_w_margins &lt;- rbind(matrix_w_margins, colsum = colSums(matrix_w_margins)) matrix_w_margins ## Infection No Infection rowsum ## Appendectomy 7 124 131 ## No Appendectomy 1 78 79 ## colsum 8 202 210 6.7 Table You can coerce a matrix object into a table object. I haven‚Äôt found a way to create a table object from scratch (i.e., without making a matrix or data frame first). table &lt;- as.table(matrix) table ## Infection No Infection ## Appendectomy 7 124 ## No Appendectomy 1 78 # Add margins table_w_margins &lt;- addmargins(table) table_w_margins ## Infection No Infection Sum ## Appendectomy 7 124 131 ## No Appendectomy 1 78 79 ## Sum 8 202 210 Aside from adding margins in one step, it isn‚Äôt clear what the advantage of coercing the matrix to a table is at this point. However, there may be advantages later when we calculate incidence and other measures of occurrence and association. 6.8 Base R data frame with rownames Create from scratch: df &lt;- data.frame( Infection = c(7, 1), `No Infection` = c(124, 78) ) # Add row names rownames(df) &lt;- c(&quot;Appendectomy&quot;, &quot;No Appendectomy&quot;) df ## Infection No.Infection ## Appendectomy 7 124 ## No Appendectomy 1 78 Add margins: df_w_margins &lt;- df df_w_margins &lt;- cbind(df_w_margins, rowsum = rowSums(df_w_margins)) df_w_margins &lt;- rbind(df_w_margins, colsum = colSums(df_w_margins)) df_w_margins ## Infection No.Infection rowsum ## Appendectomy 7 124 131 ## No Appendectomy 1 78 79 ## colsum 8 202 210 As far as I can tell, there doesn‚Äôt seem to be an advantage to creating a df from scratch over creating a matrix from scratch. Create a base R data frame by coercing the matrix object to a data frame: df_w_margins &lt;- as.data.frame(matrix_w_margins) df_w_margins ## Infection No Infection rowsum ## Appendectomy 7 124 131 ## No Appendectomy 1 78 79 ## colsum 8 202 210 Coercing the table object to a data frame gives a different result: as.data.frame(table) ## Var1 Var2 Freq ## 1 Appendectomy Infection 7 ## 2 No Appendectomy Infection 1 ## 3 Appendectomy No Infection 124 ## 4 No Appendectomy No Infection 78 At this point, I think it still makes sense to start with a matrix. You can easily convert a matrix to a data frame later if you need to. 6.9 Tibble Unlike the other objects, this object won‚Äôt have the standard contingency table layout. tbl &lt;- tribble( ~appendectomy, ~infection, ~count, &quot;Yes&quot;, &quot;Yes&quot;, 7, &quot;Yes&quot;, &quot;No&quot;, 124, &quot;No&quot;, &quot;Yes&quot;, 1, &quot;No&quot;, &quot;No&quot;, 78 ) # Add margins tbl %&gt;% group_by(appendectomy) %&gt;% mutate(appendectomy_totals = sum(count)) %&gt;% group_by(infection) %&gt;% mutate(infection_totals = sum(count)) %&gt;% ungroup() %&gt;% mutate(margin_total = sum(count)) ## # A tibble: 4 √ó 6 ## appendectomy infection count appendectomy_totals infection_totals margin_total ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Yes Yes 7 131 8 210 ## 2 Yes No 124 131 202 210 ## 3 No Yes 1 79 8 210 ## 4 No No 78 79 202 210 This layout can be useful, but this note is really about working with a contingency table layout. ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] googlesheets4_1.0.0 testthat_3.0.4 stringr_1.4.0 ## [4] purrr_0.3.4 tidyr_1.1.3 dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] cellranger_1.1.0 pillar_1.6.4 bslib_0.2.5.1 compiler_4.1.0 ## [5] jquerylib_0.1.4 highr_0.9 tools_4.1.0 pkgload_1.2.1 ## [9] digest_0.6.27 googledrive_2.0.0 gargle_1.2.0 jsonlite_1.7.2 ## [13] evaluate_0.14 lifecycle_1.0.1 tibble_3.1.6 pkgconfig_2.0.3 ## [17] rlang_0.4.12 DBI_1.1.1 cli_3.1.0 rstudioapi_0.13 ## [21] crosstalk_1.1.1 curl_4.3.2 yaml_2.2.1 xfun_0.24 ## [25] httr_1.4.2 withr_2.4.2 knitr_1.33 askpass_1.1 ## [29] rappdirs_0.3.3 htmlwidgets_1.5.3 desc_1.3.0 fs_1.5.0 ## [33] generics_0.1.1 vctrs_0.3.8 sass_0.4.0 DT_0.18 ## [37] rprojroot_2.0.2 tidyselect_1.1.1 glue_1.5.0 R6_2.5.1 ## [41] fansi_0.5.0 rmarkdown_2.9 bookdown_0.22 magrittr_2.0.1 ## [45] htmltools_0.5.1.1 ellipsis_0.3.2 assertthat_0.2.1 utf8_1.2.2 ## [49] stringi_1.7.3 openssl_1.4.4 crayon_1.4.2 "],["effect-measure-modification.html", "7 Effect-measure modification 7.1 ‚≠êÔ∏èOverview 7.2 üåéUseful websites 7.3 üì¶Load packages 7.4 üî¢Simulate data", " 7 Effect-measure modification 7.1 ‚≠êÔ∏èOverview This chapter is about effect-measure modification and interaction. Add some notes about terminology: effect-measure modification vs effect modification vs statistical interaction vs biological interaction. 7.2 üåéUseful websites Modern Epidemiology 7.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) Modern Epidemiology, 4th edition, page 91-92: Suppose we divide our population into two or more categories or strata, defined by categories of a covariate that is a potential modifier. In each stratum, we can compare the exposed with the unexposed by calculating an effect measure of our choosing.20, 48 Often we would have no reason to suppose that these stratum-specific effect measures would equal one another. If they are not equal, we say that the effect measure is heterogeneous or modified or varies across strata of the modifier. If they are equal, we say that the measure is homogeneous, constant, or uniform across strata of the modifier. Note that what is in view here is how the effect of the exposure varies across strata of the modifier; these variations in the exposure effect may not reflect the effect of the modifier itself but possibly only that of some other variables related to the modifier.49, 50 See Chapter 26 for more complete descriptions of effect modification and effect-measure modification. A major point about effect-measure modification is that, if effects are present, it will usually be the case that no more than one of the effect measures discussed above will be uniform across strata of the modifier.20 In fact, if both the exposure and the modifier have an effect on the outcome, then at most one of the risk ratio or risk difference measures of the effect of the exposure can be uniform across strata of the modifier; in such cases, there will thus always be effect-measure modification for either the difference or the ratio scale. As an example, suppose that, among men, the average risk would be 0.50 if exposed but 0.20 if unexposed, whereas among women the average risk would be 0.10 if exposed but 0.04 if unexposed. Then the causal risk difference for men is 0.50 ‚àí 0.20 = 0.30, five times the difference for women of 0.10 ‚àí 0.04 = 0.06. In contrast, for both men and women, the causal risk ratio is 0.50 / 0.20 = 0.10 / 0.04 = 2.5. Now suppose we change this example to make the risk differences uniform, say, by making the exposed male risk 0.26 instead of 0.50. Then, both risk differences would be 0.06, but the male risk ratio would be 0.26 / 0.20 = 1.3, much less than the female risk ratio of 2.5. Finally, if we change the example by making the exposed male risk 0.32 instead of 0.50, the male risk difference would be 0.12, double the female risk difference of 0.06, but the male ratio would be 1.6 with relative excess ratio of 0.6, which is less than half the relative excess ratio of 1.5 computed from the female ratio of 2.5. Thus, the presence, direction, and size of effect-measure modification can be dependent on the choice of measure. Simulate this below‚Ä¶ 7.4 üî¢Simulate data set.seed(123) df &lt;- tibble( x = rnorm(26), y = letters ) ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] googlesheets4_1.0.0 testthat_3.0.4 stringr_1.4.0 ## [4] purrr_0.3.4 tidyr_1.1.3 dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] cellranger_1.1.0 pillar_1.6.4 bslib_0.2.5.1 compiler_4.1.0 ## [5] jquerylib_0.1.4 highr_0.9 tools_4.1.0 pkgload_1.2.1 ## [9] digest_0.6.27 googledrive_2.0.0 gargle_1.2.0 jsonlite_1.7.2 ## [13] evaluate_0.14 lifecycle_1.0.1 tibble_3.1.6 pkgconfig_2.0.3 ## [17] rlang_0.4.12 DBI_1.1.1 cli_3.1.0 rstudioapi_0.13 ## [21] crosstalk_1.1.1 curl_4.3.2 yaml_2.2.1 xfun_0.24 ## [25] httr_1.4.2 withr_2.4.2 knitr_1.33 askpass_1.1 ## [29] rappdirs_0.3.3 htmlwidgets_1.5.3 desc_1.3.0 fs_1.5.0 ## [33] generics_0.1.1 vctrs_0.3.8 sass_0.4.0 DT_0.18 ## [37] rprojroot_2.0.2 tidyselect_1.1.1 glue_1.5.0 R6_2.5.1 ## [41] fansi_0.5.0 rmarkdown_2.9 bookdown_0.22 magrittr_2.0.1 ## [45] htmltools_0.5.1.1 ellipsis_0.3.2 assertthat_0.2.1 utf8_1.2.2 ## [49] stringi_1.7.3 openssl_1.4.4 crayon_1.4.2 "],["risk-difference.html", "8 Risk Difference 8.1 ‚≠êÔ∏èOverview 8.2 üåéUseful websites 8.3 üì¶Load packages 8.4 Data Summary 8.5 üî¢Simulate data 8.6 üìàAnalysis", " 8 Risk Difference üóíSide Note: Risk difference may be too narrow for a chapter. At some point, I will probably change this note to measures of disease occurrence. I just don‚Äôt have time to do it tonight. 8.1 ‚≠êÔ∏èOverview This chapter is about calculating and interpreting risk differences. Are a risk difference in an attributable risk the same thing? Yes, but attributable risk is an older term and it‚Äôs use is discouraged. https://sphweb.bumc.bu.edu/otlt/mph-modules/ep/ep713_association/ep713_association_print.html How do you interpret an attributable risk? https://sphweb.bumc.bu.edu/otlt/mph-modules/ep/ep713_association/ep713_association_print.html 8.2 üåéUseful websites Then note on Contingency Tables Boston University 8.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) library(ggplot2) Using an example from the Boston University website: 8.4 Data Summary Consider the following example regarding the management of Hodgkin lymphoma, a cancer of the lymphatic system. Years ago when a patient was diagnosed with Hodgkin Disease, they would frequently undergo a surgical procedure called a ‚Äústaging laparotomy.‚Äù The purpose of the staging laparotomy was to determine the extent to which the cancer had spread, because this was important information for determining the patient‚Äôs prognosis and optimizing treatment. At times, the surgeons performing this procedure would also remove the patient‚Äôs appendix, not because it was inflamed; it was done ‚Äúincidentally‚Äù in order to ensure that the patient never had to worry about getting appendicitis. However, performing an appendectomy requires transecting it, and this has the potential to contaminate the abdomen and the wound edges with bacteria normally contained inside the appendix. Some surgeons felt that doing this ‚Äúincidental appendectomy‚Äù did the patient a favor by ensuring that they would never get appendicitis, but others felt that it meant unnecessarily increasing the patient‚Äôs risk of getting a post-operative wound infection by spreading around the bacteria that was once inside the appendix. To address this, the surgeons at a large hospital performed a retrospective cohort study. They began by going through the hospital‚Äôs medical records to identify all subjects who had had a ‚Äústaging laparotomy performed for Hodgkin.‚Äù They then reviewed the medical record and looked at the operative report to determine whether the patient had an incidental appendectomy or not. They then reviewed the progress notes, the laboratory reports, the nurses notes, and the discharge summary to determine whether the patient had developed a wound infection during the week after surgery. The investigators reviewed the records of 210 patients who had undergone the staging procedure and found that 131 had also had an incidental appendectomy, while the other 79 had not. The data from that study are summarized in the table below. The numbers in the second and third columns indicate the number of subjects who did or did not develop a post-operative wound infection among those who had the incidental appendectomy (in the ‚ÄúYes‚Äù row) and those who did not have the incidental appendectomy (in the ‚ÄúNo‚Äù row). For example, the upper left cell indicates that seven of the subjects who had an incidental appendectomy (the exposure of interest) subsequently developed a wound infection. The upper right cell indicates that the other 124 subjects who had an incidental appendectomy did NOT develop a wound infection. Had incidental appendectomy? Wound infection No wound infection Total Yes 7 124 131 No 1 78 79 Total 8 202 210 8.5 üî¢Simulate data First, simulate the data as a 2x2 contingency table. Here, we will experiment with structuring the contingency table in a few different ways. 8.5.1 Simulate a matrix object Create a contingency table using a matrix object. matrix &lt;- matrix( c(a = 7, b = 124, c = 1, d = 78), ncol = 2, byrow = TRUE ) # Add names to make the matrix more readable rownames(matrix) &lt;- c(&quot;Appendectomy&quot;, &quot;No Appendectomy&quot;) colnames(matrix) &lt;- c(&quot;Infection&quot;, &quot;No Infection&quot;) matrix ## Infection No Infection ## Appendectomy 7 124 ## No Appendectomy 1 78 8.6 üìàAnalysis 8.6.1 Incidence proportion Before calculating any other measures of occurrence, we first need to calculate the incidence proportion in each exposure group. crosstab_mat &lt;- cbind(matrix, rowsum = rowSums(matrix)) crosstab_mat ## Infection No Infection rowsum ## Appendectomy 7 124 131 ## No Appendectomy 1 78 79 ip &lt;- crosstab_mat[, &quot;Infection&quot;] / crosstab_mat[, &quot;rowsum&quot;] crosstab_mat &lt;- cbind(crosstab_mat, ip) crosstab_mat ## Infection No Infection rowsum ip ## Appendectomy 7 124 131 0.05343511 ## No Appendectomy 1 78 79 0.01265823 8.6.2 Risk Differences Instead of comparing two measures of disease frequency by calculating their ratio, one can compare them in terms of their absolute difference. The risk difference is calculated by subtracting the cumulative incidence in the unexposed group (or least exposed group) from the cumulative incidence in the group with the exposure. \\[ \\text{Risk Difference (RD)} = CI_e - CI_u \\] where (\\(CI_e\\)) = cumulative incidence among the exposed subjects, and (\\(CI_u\\)) is the cumulative incidence among unexposed subjects. The risk difference focuses on absolute effect of the risk factor, or the excess risk of disease in those who have the factor compared with those who don‚Äôt. Recall that in the wound infection study, the cumulative incidence of infection was 5.3% in the incidental appendectomy group, and only 1.3% in the group without appendectomies. The risk ratio was 4.2, but we can also compute the absolute difference, which is 5.3 / 100 - 1.3 / 100 = 4 per 100 excess wound infections among those who had the incidental appendectomy. \\(CI_\\)u provides an estimate of the baseline risk (i.e., in the absence of the exposure), and the exposure factor imposes an additional (excess) risk on top of that. üóíSide Note: Modern Epidemiology 4th edition uses the term incidence proportion instead of cumulative incidence.1 ip_exposed &lt;- crosstab_mat[&quot;Appendectomy&quot;, &quot;ip&quot;] ip_unexposed &lt;- crosstab_mat[&quot;No Appendectomy&quot;, &quot;ip&quot;] risk_difference &lt;- ip_exposed - ip_unexposed risk_difference ## [1] 0.04077689 risk_difference * 100 ## [1] 4.077689 8.6.2.1 Interpretation Subjects who had an incidental appendectomy had 4 additional cases of wound infection per 100 people compared to subjects who did not have an incidental appendectomy. Tip 1: If you have cumulative incidence expressed as percentage, convert % to convenient fractions so that you can express it as the excess risk in a group of people who have the risk factor. Tip 2: Focus your interpretation on the excess risk in the exposed group. Example: ‚ÄúThere were 4 excess wound infections per 100 subjects in the group that had incidental appendectomies, compared to the group without incidental appendectomy.‚Äù Tip 3: Don‚Äôt forget to specify the time interval when using cumulative incidence. This was not a problem in the appendectomy study because the time interval was so short and the time frame was implicit (in the postoperative period), but in most studies you need to describe the time interval for the cumulative incidence in words. Example: ‚ÄúIn the group that failed to adhere closely to the Mediterranean diet there were 120 excess deaths per 1,000 men during the two year period of observation compared to the group that did adhere to the Mediterranean diet.‚Äù 8.6.2.2 Graph tibble( appendectomy = factor(c(&quot;No&quot;, &quot;No&quot;, &quot;Yes&quot;, &quot;Yes&quot;)), base_rate = c(&quot;Yes&quot;, &quot;No&quot;, &quot;Yes&quot;, &quot;No&quot;), incidence = c(1.3, 0.0, 1.3, 4.0) ) %&gt;% ggplot() + geom_col(aes(x = appendectomy, y = incidence, fill = base_rate)) + scale_fill_manual(values = c(&quot;red&quot;, &quot;gray&quot;)) + labs( x = &quot;Had Incidental Appendectomy&quot;, y = &quot;Wound Infection Incidence per 100&quot; ) + theme_classic() + theme(legend.position = &quot;none&quot;) üóíSide Note: At some point, come back and annotate this to match the figure here. You may also want to add this to the data visualization note. ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggplot2_3.3.5 googlesheets4_1.0.0 testthat_3.0.4 ## [4] stringr_1.4.0 purrr_0.3.4 tidyr_1.1.3 ## [7] dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] tidyselect_1.1.1 xfun_0.24 bslib_0.2.5.1 gargle_1.2.0 ## [5] colorspace_2.0-2 vctrs_0.3.8 generics_0.1.1 htmltools_0.5.1.1 ## [9] yaml_2.2.1 utf8_1.2.2 rlang_0.4.12 jquerylib_0.1.4 ## [13] pillar_1.6.4 glue_1.5.0 withr_2.4.2 DBI_1.1.1 ## [17] rappdirs_0.3.3 lifecycle_1.0.1 munsell_0.5.0 gtable_0.3.0 ## [21] cellranger_1.1.0 htmlwidgets_1.5.3 evaluate_0.14 labeling_0.4.2 ## [25] knitr_1.33 crosstalk_1.1.1 curl_4.3.2 fansi_0.5.0 ## [29] highr_0.9 openssl_1.4.4 scales_1.1.1 DT_0.18 ## [33] desc_1.3.0 pkgload_1.2.1 jsonlite_1.7.2 farver_2.1.0 ## [37] fs_1.5.0 askpass_1.1 digest_0.6.27 stringi_1.7.3 ## [41] bookdown_0.22 rprojroot_2.0.2 grid_4.1.0 cli_3.1.0 ## [45] tools_4.1.0 magrittr_2.0.1 sass_0.4.0 tibble_3.1.6 ## [49] crayon_1.4.2 pkgconfig_2.0.3 ellipsis_0.3.2 googledrive_2.0.0 ## [53] assertthat_0.2.1 rmarkdown_2.9 httr_1.4.2 rstudioapi_0.13 ## [57] R6_2.5.1 compiler_4.1.0 References "],["book-chapters.html", "9 Bookdown: Creating Book Chapters 9.1 Chapter overview 9.2 Motivating example 9.3 Body 9.4 Cross-references 9.5 Citations 9.6 Previewing the chapter 9.7 Additional resources: function to check 9.8 Key terms : function to add to appendix 9.9 Final example code : function to add to appendix", " 9 Bookdown: Creating Book Chapters Chapters should pretty much just be about one distinct idea. Give some more thought to defining this more clearly. I think it will be important as I start incorporating the epidemiology stuff. Also, it should help with making things easier to find. Heading guidelines: * Useful for finding what you are looking for. 9.1 Chapter overview Very brief description of what they can expect. By the end of this chapter, we will be able to: 1. Placeholder 2. Placeholder Awesome if you can start with a funny picture or a cool quote. 9.2 Motivating example Recall that one of my [goals][Goals] is ‚ÄúTo start each concept with the end result and then deconstruct how we arrived at that result, where possible. I find that it is easier for me to understand new concepts when learning them as a component of a final product.‚Äù We won‚Äôt necessarily do this for every chapter (e.g., installing R and RStudio) if doing so doesn‚Äôt make sense. 9.3 Body 9.3.1 Language Use ‚Äúwe‚Äù and ‚Äúour‚Äù language. Make it friendly and informal. 9.3.2 Text conventions Bold text is used to highlight important terms, file names, and file extensions. Not every bolded term needs to go in the glossary. Use your best judgment. Highlighted inline code is used to emphasize small sections of R code and program elements such as variable or function names. 9.3.3 Special sections üóíSide Note: This is an example note. ‚ö†Ô∏èWarning: This is an example warning 9.3.4 Images Don‚Äôt forget to add ‚Äúecho=FALSE‚Äù to the code chunk. Details on cross-referencing figures are given below. Every figure doesn‚Äôt need a caption. It can actually make things look sloppy. The only figures that NEED a caption are those figures that are cross-referenced. Because of the way the files are structured, You won‚Äôt be able to see pictures directly in the Rmd files without including ‚Äú../../‚Äù on the front the file paths. However, having ‚Äú../../‚Äù on the front of the file paths prevents the book from building appropriately. 9.3.5 Code blocks üëÜHere‚Äôs what we did above: Use unordered lists for these sections. It allows for nested lists and code. Add line breaks in between the bullets. &lt;ul&gt; &lt;li&gt;You can type `?mutate` into your R console to view the help documentation for this function and follow along with the explanation below./li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;/ul&gt; 9.4 Cross-references 9.4.1 Cross-referencing figures To cross-reference figures: Label the code chunk that contains the figure (e.g., {r label, echo=FALSE}). Give the code chunk that contains the figure a caption (e.g., {r label, echo=FALSE, fig.cap=\"Some text.\"})) Then add \\@ref(fig:exampe-bookdown-img) to the text where you want to cross-reference the figure. ‚ö†Ô∏èWarning: The figure reference must go outside of punctuation. With a space. ‚ö†Ô∏èWarning: If you want to cross-reference figures or tables generated from a code chunk, please make sure the chunk label only contains alphanumeric characters (a-z, A-Z, 0-9), slashes (/), or dashes (-). ‚ö†Ô∏èWarning: If you want to cross-reference figures or tables generated from a code chunk, you must give the code chunk a caption. Example: The sentence below is written as ‚ÄúAs seen in the figure below. \\@ref(fig:paperpile)‚Äù As seen in the figure below. 9.1 9.4.2 Cross-referencing chapters There are a couple different ways you can cross-reference other chapters or other sections of the book. This is adapted from Jenny Bryan‚Äôs Happy Git and GitHub for the useR book. 9.4.2.1 Method 1. You can add a CSS id the behind the header using a hashtag inside curly braces (i.e., {#id}). Later, you can reference that section by writing the hash id inside parentheses (i.e., [some text to link](#id)). Method 1 is a good method when the section name is difficult or unwieldy to write out. It may also just be a good idea when you know ahead of time that you will want to cross-reference a section. Example: I added the CSS id {#cr-figs} to the section above called ‚ÄúCross-referencing figures.‚Äù The sentence below is written as ‚ÄúSee the section above on [cross-referencing figures](#cr-figs).‚Äù See the section above on cross-referencing figures. 9.4.2.2 Method 2 You can add a CSS id the behind the header using a hashtag inside curly braces (i.e., {#id}). Later, you can use the \\@ref(#id) format to make the cross-reference appear as a linked chapter/section number rather than linked text. Method 1 &amp; 2 are good methods when the section name is difficult or unwieldy to write out. They may also just be a good idea when you know ahead of time that you will want to cross-reference a section. The difference is really just a matter of style. Example: I added the CSS id {#cr-figs} to the section above called ‚ÄúCross-referencing figures.‚Äù The sentence below is written as ‚ÄúSee the section \\@ref(cr-figs) above about cross-referencing figures.‚Äù See the section 9.4.1 above about cross-referencing figures. Notice that I did NOT include the hashtag symbol when referencing the section. 9.4.2.3 Method 3 Simply write out the chapter/section header name inside square brackets (i.e., [Section header name] to create a text link to the chapter/section header. Example: This section is titled ‚ÄúCross-references.‚Äù The sentence below is written as ‚ÄúSee the [cross-references] section above.‚Äù See the cross-references section above. ‚ö†Ô∏èWarning: When using the chapter/section name inside square brackets, make sure to replace spaces with dashes (-). 9.4.2.4 Method 4 Write out some text that you want linked to the chapter/section header inside of square brackets, then immediately follow it with the chapter/section header name inside square brackets (i.e., [linked text][Section header name] to create a text link to the chapter/section header. Example: This section is titled ‚ÄúCross-references.‚Äù The sentence below is written as ‚ÄúSee the [section above on cross-referencing][Cross-references].‚Äù See the section above on cross-referencing. 9.5 Citations For more details, see Yihui Xie‚Äôs Bookdown book. Add whatever you want to cite to Paperpile. Navigate to Paperpile. Click on the document/article you want to cite. Click the drop-down arrow next to the ‚ÄúCite‚Äù button. Click the BibTeX option. This will copy a BibTeX citation to your clipboard. Figure 9.1: A screenshot of selecting BibTex in PaperPile. In RStudio, open book.bib, which should be in your book‚Äôs root directory. Paste the BibTeX citation into book.bib. Order the citations alphabetically by author‚Äôs last name. Save. For example, here is the book.bib entry for the Yihui Xie‚Äôs bookdown book: Then, to cite that book, type @key where you want the citation to appear ‚Äì the key part of @key is marked in the example above. So, I‚Äôm citing Yihui Xie‚Äôs bookdown book at the end of this sentence by typing @Xie2021-pn after the period with a space in between.2 üóíSide Note: You can change the citation style using the csl: parameter in index.Rmd. I typically use csl: ama.csl, but you can download other formats from https://github.com/citation-style-language/styles. 9.6 Previewing the chapter Supposed to use ‚Äúbookdown::preview_chapter(‚Äù03_what_is_r.Rmd‚Äú)‚Äù to preview chapters. I can‚Äôt get this to work for some reason. I created a new project that I can use a test environment. It‚Äôs in ‚ÄúR4Epi chapters in progress/bookdown_test_environment.‚Äù You have to build the whole book, but it should go fast because I don‚Äôt have all the chapters. 9.6.1 Miscelaneous Make liberal use of emojis. Start making videos to supplement content. 9.7 Additional resources: function to check Links to cheat sheets, websites, and videos. 9.8 Key terms : function to add to appendix Key terms covered in this chapter. 9.9 Final example code : function to add to appendix Succinct recap of the code used in this chapter without any explanation of how it works. You can use this as a quick reference later. We won‚Äôt necessarily do this for every chapter (e.g., installing R and RStudio) if doing so doesn‚Äôt make sense. ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggplot2_3.3.5 googlesheets4_1.0.0 testthat_3.0.4 ## [4] stringr_1.4.0 purrr_0.3.4 tidyr_1.1.3 ## [7] dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] tidyselect_1.1.1 xfun_0.24 bslib_0.2.5.1 gargle_1.2.0 ## [5] colorspace_2.0-2 vctrs_0.3.8 generics_0.1.1 htmltools_0.5.1.1 ## [9] yaml_2.2.1 utf8_1.2.2 rlang_0.4.12 jquerylib_0.1.4 ## [13] pillar_1.6.4 glue_1.5.0 withr_2.4.2 DBI_1.1.1 ## [17] rappdirs_0.3.3 lifecycle_1.0.1 munsell_0.5.0 gtable_0.3.0 ## [21] cellranger_1.1.0 htmlwidgets_1.5.3 evaluate_0.14 labeling_0.4.2 ## [25] knitr_1.33 crosstalk_1.1.1 curl_4.3.2 fansi_0.5.0 ## [29] highr_0.9 openssl_1.4.4 scales_1.1.1 DT_0.18 ## [33] desc_1.3.0 pkgload_1.2.1 jsonlite_1.7.2 farver_2.1.0 ## [37] fs_1.5.0 askpass_1.1 digest_0.6.27 stringi_1.7.3 ## [41] bookdown_0.22 rprojroot_2.0.2 grid_4.1.0 cli_3.1.0 ## [45] tools_4.1.0 magrittr_2.0.1 sass_0.4.0 tibble_3.1.6 ## [49] crayon_1.4.2 pkgconfig_2.0.3 ellipsis_0.3.2 googledrive_2.0.0 ## [53] assertthat_0.2.1 rmarkdown_2.9 httr_1.4.2 rstudioapi_0.13 ## [57] R6_2.5.1 compiler_4.1.0 References "],["bookdown-quick-start.html", "10 Bookdown: Quick Start 10.1 ‚≠êÔ∏èOverview 10.2 üåéUseful websites 10.3 Creating the bookdown project locally 10.4 Initiate a git repository 10.5 Create a github repository for the book 10.6 Configuring a publishing source for the GitHub Pages site 10.7 Modify _bookdown.yml 10.8 Modify _output.yml 10.9 Modify style.css 10.10 Modify index.Rmd 10.11 Creating bookdown chapters 10.12 Knitting the book 10.13 Errors and warnings", " 10 Bookdown: Quick Start 10.1 ‚≠êÔ∏èOverview Document the process of creating a bookdown book. Think of it as a quick start guide. Complete documentation at: https://bookdown.org/yihui/bookdown/ 10.2 üåéUseful websites Yihui Xie‚Äôs Bookdown book 10.3 Creating the bookdown project locally Start by clicking New Project -&gt; New Directory -&gt; Book project using Bookdown. Add a NOTES file and add it to .gitignore and .Rbuildignore using usethis: usethis::use_build_ignore(\"NOTES\") usethis::use_git_ignore(\"NOTES\") Delete all Rmd files except index.Rmd Create a folder named chapters. Edit the README file. It can say whatever you want it to. For examples, see here: https://github.com/brad-cannell/r4epi https://github.com/brad-cannell/r_notes Use this website to create a creative commons license Add a license file to the project‚Äôs root directory. Here is an example. This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/4.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA. 10.4 Initiate a git repository You need to do this in order to connect to GitHub, and you need to connect to GitHub before editing some of the books configuration files because you will need to add links to the repository. Type ‚Äúusethis::use_git(message =‚ÄùInitial commit‚Äú)‚Äù in the R console. 10.5 Create a github repository for the book Go to: https://github.com/orgs/brad-cannell/dashboard Click New Name the repository. For example, ‚Äúr_notes‚Äù Optionally, type in a description. For example, ‚ÄúThis is the repository for my R notes bookdown project.‚Äù Make the repository public Don‚Äôt check the boxes for README, .gitignore, or license Click create repository Follow GitHub‚Äôs instructions for pushing the repository to GitHub. At this point, the GitHub repository should be set up. 10.6 Configuring a publishing source for the GitHub Pages site Useful websites: * https://bookdown.org/yihui/bookdown/github.html * https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site In the repository, click on Settings, then pages (on the left sidebar). Change the source to Branch:master, folder = docs 10.7 Modify _bookdown.yml Start with this example and modify as needed book_filename: &quot;R 4 Epidemiology&quot; repo: https://github.com/brad-cannell/r4epi output_dir: docs delete_merged_file: true language: ui: chapter_name: &quot;&quot; new_session: no rmd_subdir: [&quot;chapters&quot;] 10.8 Modify _output.yml Start with this example and modify as needed bookdown::gitbook: css: style.css config: toc: collapse: section scroll_highlight: yes before: | &lt;li&gt;&lt;a href=&quot;./&quot;&gt;R for Epidemiology&lt;/a&gt;&lt;/li&gt; after: | &lt;li&gt;&lt;a href=&quot;https://github.com/rstudio/bookdown&quot; target=&quot;blank&quot;&gt;Published with bookdown&lt;/a&gt;&lt;/li&gt; 10.9 Modify style.css /****************************************************************************** CSS for the R4Epi textbook ******************************************************************************/ /* CSS that came with bookdown */ p.caption { color: #777; margin-top: 10px; } p code { white-space: inherit; } pre { word-break: normal; word-wrap: normal; } pre code { white-space: inherit; } /* Font Styles */ .large-bold { font-size: 2em; font-weight: bold; } .underline { text-decoration: underline; } .red-text { color: red; } .code { color: #0365C0; font-family: &quot;Courier New&quot;, Courier, monospace; } /* Note styles */ .note { -moz-border-radius: 6px; -webkit-border-radius: 6px; background-color: #f0f7fb; border: solid 1px #3498db; border-radius: 6px; line-height: 18px; overflow: hidden; padding: 15px 15px; } .warning { -moz-border-radius: 6px; -webkit-border-radius: 6px; background-color: #FEFBEA; border: solid 1px #F2E394; border-radius: 6px; line-height: 18px; overflow: hidden; padding: 15px 15px; } 10.10 Modify index.Rmd Delete all the example text. Modify the YAML header. Here is an example: --- title: &quot;R for Epidemiology&quot; author: &quot;Brad Cannell&quot; date: &quot;2021-11-12&quot; site: bookdown::bookdown_site documentclass: book bibliography: [book.bib, packages.bib] link-citations: yes csl: ama.csl github-repo: brad-cannell/r4epi url: &#39;https://brad-cannell.github.io/r4epi/&#39; description: &quot;This is the textbook for Brad Cannell&#39;s Introduction to R Programming for Epidemiologic Research course.&quot; --- The csl: ama.csl part of the YAML header allows you to change the bibliography style. You can find a list of styles here: https://github.com/citation-style-language/styles For AMA, which I frequently want, you can just copy and paste from your templates folder. First-level headers become chapters. Use {-} at the end of the header if you don‚Äôt want the chapter to be numbered. For example # Welcome {-} 10.11 Creating bookdown chapters Each Rmd file is a chapter. Chapters can be broken up into parts. To do so, create a subdirectory for each part inside the chapters folder. The individual Rmd files (i.e.¬†chapters) go inside these folders. I typically prefix each folder name that aligns with the order the parts should appear in. For example 01_getting_started, 02_best_practices, etc. The first Rmd file in each part folder should have only this content: # (PART) Getting Started {-} &lt;!-- This Rmd just creates a part heading in the table of contents --&gt; Name the file 00_part_&lt;part_name&gt; All subsequent content chapters should start with a first level heading only ‚Äì No YAML. For example, # R scripts. For more on chapter content, see Bookdown template chapter 10.12 Knitting the book Click on the build tab, then click ‚ÄúBuild Book.‚Äù Commit the changes and push to GitHub. After a few minutes, you should see the GitHub pages version working. 10.13 Errors and warnings Output created: docs/index.html Warning message: In split_chapters(output, gitbook_page, number_sections, split_by, : You have 3 Rmd input file(s) but only 2 first-level heading(s). Did you forget first-level headings in certain Rmd files? Solution: Just ignore this. tlmgr: Local TeX Live (2019) is older than remote repository (2020). Solution: Run tinytex::reinstall_tinytex() ! LaTeX Error: Cannot determine size of graphic in img/getting_started/01_install_r/download_r_mac.gif (no BoundingBox). Solution: This is from trying to make a pdf document with a gif in it. LaTeX doesn‚Äôt support gifs. Just make a just build the book in gitbook format. 2: The label(s) fig:source1 not found. Solution: Figures must have a caption in order to cross reference them. [WARNING] Citeproc: citation examples not found Solution: I haven‚Äôt found a solution yet, but so far the warning seems ignorable. ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] ggplot2_3.3.5 googlesheets4_1.0.0 testthat_3.0.4 ## [4] stringr_1.4.0 purrr_0.3.4 tidyr_1.1.3 ## [7] dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] tidyselect_1.1.1 xfun_0.24 bslib_0.2.5.1 gargle_1.2.0 ## [5] colorspace_2.0-2 vctrs_0.3.8 generics_0.1.1 htmltools_0.5.1.1 ## [9] yaml_2.2.1 utf8_1.2.2 rlang_0.4.12 jquerylib_0.1.4 ## [13] pillar_1.6.4 glue_1.5.0 withr_2.4.2 DBI_1.1.1 ## [17] rappdirs_0.3.3 lifecycle_1.0.1 munsell_0.5.0 gtable_0.3.0 ## [21] cellranger_1.1.0 htmlwidgets_1.5.3 evaluate_0.14 labeling_0.4.2 ## [25] knitr_1.33 crosstalk_1.1.1 curl_4.3.2 fansi_0.5.0 ## [29] highr_0.9 openssl_1.4.4 scales_1.1.1 DT_0.18 ## [33] desc_1.3.0 pkgload_1.2.1 jsonlite_1.7.2 farver_2.1.0 ## [37] fs_1.5.0 askpass_1.1 digest_0.6.27 stringi_1.7.3 ## [41] bookdown_0.22 rprojroot_2.0.2 grid_4.1.0 cli_3.1.0 ## [45] tools_4.1.0 magrittr_2.0.1 sass_0.4.0 tibble_3.1.6 ## [49] crayon_1.4.2 pkgconfig_2.0.3 ellipsis_0.3.2 googledrive_2.0.0 ## [53] assertthat_0.2.1 rmarkdown_2.9 httr_1.4.2 rstudioapi_0.13 ## [57] R6_2.5.1 compiler_4.1.0 "],["flexdashboard.html", "11 Flexdashboard 11.1 ‚≠êÔ∏èOverview 11.2 üåéUseful websites 11.3 üì¶Load packages 11.4 Tips 11.5 üî¢Simulate data", " 11 Flexdashboard 11.1 ‚≠êÔ∏èOverview This chapter is about using the flexdashboard package to create static dashboards with R. 11.2 üåéUseful websites https://pkgs.rstudio.com/flexdashboard/ 11.3 üì¶Load packages library(dplyr) library(flexdashboard) 11.4 Tips Think about coaching Steph with with DETECT dashboard: Don‚Äôt start with a dashboard. Start by creating the tables/graphs you want. Don‚Äôt clean the data in the dashboard Rmd file. 11.5 üî¢Simulate data set.seed(123) df &lt;- tibble( x = rnorm(26), y = letters ) ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] flexdashboard_0.5.2 ggplot2_3.3.5 googlesheets4_1.0.0 ## [4] testthat_3.0.4 stringr_1.4.0 purrr_0.3.4 ## [7] tidyr_1.1.3 dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] tidyselect_1.1.1 xfun_0.24 bslib_0.2.5.1 gargle_1.2.0 ## [5] colorspace_2.0-2 vctrs_0.3.8 generics_0.1.1 htmltools_0.5.1.1 ## [9] yaml_2.2.1 utf8_1.2.2 rlang_0.4.12 jquerylib_0.1.4 ## [13] pillar_1.6.4 glue_1.5.0 withr_2.4.2 DBI_1.1.1 ## [17] rappdirs_0.3.3 lifecycle_1.0.1 munsell_0.5.0 gtable_0.3.0 ## [21] cellranger_1.1.0 htmlwidgets_1.5.3 evaluate_0.14 labeling_0.4.2 ## [25] knitr_1.33 crosstalk_1.1.1 curl_4.3.2 fansi_0.5.0 ## [29] highr_0.9 openssl_1.4.4 scales_1.1.1 DT_0.18 ## [33] desc_1.3.0 pkgload_1.2.1 jsonlite_1.7.2 farver_2.1.0 ## [37] fs_1.5.0 askpass_1.1 digest_0.6.27 stringi_1.7.3 ## [41] bookdown_0.22 rprojroot_2.0.2 grid_4.1.0 cli_3.1.0 ## [45] tools_4.1.0 magrittr_2.0.1 sass_0.4.0 tibble_3.1.6 ## [49] crayon_1.4.2 pkgconfig_2.0.3 ellipsis_0.3.2 googledrive_2.0.0 ## [53] assertthat_0.2.1 rmarkdown_2.9 httr_1.4.2 rstudioapi_0.13 ## [57] R6_2.5.1 compiler_4.1.0 "],["flextable.html", "12 Flextable 12.1 ‚≠êÔ∏èOverview 12.2 Need to add 12.3 üåéUseful websites 12.4 üì¶Load packages 12.5 üî¢Simulate data 12.6 Adding blank rows 12.7 Autofit to window 12.8 Change font to TNR 12.9 Bold part of the table title 12.10 Conditional formatting", " 12 Flextable 12.1 ‚≠êÔ∏èOverview Using the Flextable package Some overlap with: officer.Rmd descriptive_notes.Rmd tables_descriptive.Rmd Good examples to check out: LEAD panel monthly report. Sun Study report. stroke study -&gt; table_characteristics_by_network.Rmd. L2C quarterly reports. 12.2 Need to add There is lots of good stuff in the L2C paper_smartphone_app folder. There are useful functions for flextable themes and there and table_use_app.Rmd has good examples. 12.3 üåéUseful websites Using the flextable R package Flextable R package 12.4 üì¶Load packages library(dplyr, warn.conflicts = FALSE) library(officer, warn.conflicts = FALSE) library(flextable, warn.conflicts = FALSE) 12.5 üî¢Simulate data data(&quot;mtcars&quot;) 12.6 Adding blank rows Actually, might just create this in Word and post on StackOverflow. When creating tables in Word reports, I often want to add blank rows in between variables. As a trivial toy example: doc &lt;- read_docx() table_no_breaks &lt;- mtcars %&gt;% count(cyl) table_no_breaks ## cyl n ## 1 4 11 ## 2 6 7 ## 3 8 14 table_no_breaks_ft &lt;- flextable(table_no_breaks) table_no_breaks_ft .tabwid table{ border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-spacing: 0; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-c23a57e8{border-collapse:collapse;}.cl-c234b25c{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-c234d50c{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-c234fe10{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-c234fe24{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-c234fe2e{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} cyln41167814 doc &lt;- doc %&gt;% body_add_flextable(table_no_breaks_ft) %&gt;% body_add_par(&quot;&quot;) print( doc, &quot;examples/flextable_no_blank_rows.docx&quot; ) Results in a table that looks like this: flextable_no_blank_rows.docx I can add line breaks directly to the data frame like this: table_breaks &lt;- table_no_breaks %&gt;% mutate( across( everything(), as.character ) ) %&gt;% add_row(cyl = NA, n = NA, .after = 1) %&gt;% add_row(cyl = NA, n = NA, .after = 3) %&gt;% add_row(cyl = NA, n = NA, .after = 5) table_breaks ## cyl n ## 1 4 11 ## 2 &lt;NA&gt; &lt;NA&gt; ## 3 6 7 ## 4 &lt;NA&gt; &lt;NA&gt; ## 5 8 14 ## 6 &lt;NA&gt; &lt;NA&gt; table_breaks_ft &lt;- flextable(table_breaks) table_breaks_ft .tabwid table{ border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-spacing: 0; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-c2551934{border-collapse:collapse;}.cl-c2501718{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-c2502550{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-c2504a94{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-c2504aa8{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-c2504ab2{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} cyln41167814 doc &lt;- doc %&gt;% body_add_flextable(table_breaks_ft) print( doc, &quot;examples/flextable_blank_rows.docx&quot; ) Which results in the Word table that I want: flextable_blank_rows.docx However, I would prefer to be able to add the blank rows directly to the flextable rather than the data frame the flextable is built from. To me, this is a formatting issue rather than a data issue, and I prefer to keep data issues (manipulation of data frames) and formatting issues (manipulation of Word tables) separate. Any advice is greatly appreciated! 12.7 Autofit to window table_breaks_ft %&gt;% set_table_properties(layout = &quot;autofit&quot;) .tabwid table{ border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-spacing: 0; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-c26ab384{table-layout:auto;border-collapse:collapse;width:100%;}.cl-c26539cc{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-c26547fa{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-c2656d3e{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-c2656d5c{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-c2656d5d{background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} cyln41167814 12.8 Change font to TNR table_breaks_ft %&gt;% font(fontname = &quot;Times New Roman&quot;, part = &quot;all&quot;) .tabwid table{ border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-spacing: 0; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-c2749368{border-collapse:collapse;}.cl-c26f3544{font-family:'Times New Roman';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-c26f4354{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-c26f68fc{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-c26f6910{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-c26f691a{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} cyln41167814 12.9 Bold part of the table title From SO 2020-08-23: https://stackoverflow.com/questions/63530204/is-there-a-way-to-bold-part-of-a-character-string-being-passed-to-add-header-lin?noredirect=1#comment112346997_63530204 mtcars_ft &lt;- flextable(head(mtcars)) %&gt;% # Add a blank title line to top of table add_header_lines(&quot;&quot;) %&gt;% # Use compose to bold &quot;Table #.&quot; compose( i = 1, part = &quot;header&quot;, value = as_paragraph( as_chunk(&quot;Table 1. &quot;, props = fp_text(bold = TRUE)), &quot;Here is my example mtcars ft.&quot; ), ) mtcars_ft .tabwid table{ border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-spacing: 0; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-c28f7f52{border-collapse:collapse;}.cl-c289fc58{font-family:'Arial';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-c289fc6c{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-c28a0932{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-c28a0946{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-c28a4564{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-c28a4578{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-c28a4582{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-c28a458c{width:54pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} Table 1. Here is my example mtcars ft.mpgcyldisphpdratwtqsecvsamgearcarb21.061601103.902.62016.46014421.061601103.902.87517.02014422.84108933.852.32018.61114121.462581103.083.21519.44103118.783601753.153.44017.02003218.162251052.763.46020.221031 12.10 Conditional formatting From LEAD panel summarize votes ‚Äì Doesn‚Äôt work here. Need to turn this into a working example at some point. title &lt;- &quot;Table 2. Presence/absence of unanimous agreement for each abuse type by case number.&quot; summary_agreement_ad_abuse_type_ft &lt;- flextable( # Remove unneeded columns summary_agreement_ad_abuse_type %&gt;% select( CaseID, physical, sexual, emotional, neglect, abandonment, financial, selfneglect ) ) %&gt;% # Column width: Trial and error # Make a table and play with properties width( j = c(1:8), width = c(0.98, 0.66, 0.56, 0.78, 0.71, 1.01, 0.71, 0.90) ) %&gt;% # Improve readability of column headers set_header_labels(CaseID = &quot;Case Number&quot;, selfneglect = &quot;Self Neglect&quot;) %&gt;% # Add title to top of table add_header_lines(title) %&gt;% # Change font to times new roman font(fontname = &quot;Times New Roman&quot;, part = &quot;all&quot;) %&gt;% # Change background color of first column bg(j = 1, bg = &quot;#E5E8E8&quot;, part = &quot;body&quot;) %&gt;% # Center column headings align(i = 2, align = &quot;center&quot;, part = &quot;header&quot;) %&gt;% # Center body text align(align = &quot;center&quot;, part = &quot;body&quot;) %&gt;% # Conditionally format disagree to red color(i = ~ physical == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;physical&quot;), color = &quot;red&quot;) %&gt;% color(i = ~ sexual == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;sexual&quot;), color = &quot;red&quot;) %&gt;% color(i = ~ emotional == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;emotional&quot;), color = &quot;red&quot;) %&gt;% color(i = ~ neglect == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;neglect&quot;), color = &quot;red&quot;) %&gt;% color(i = ~ abandonment == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;abandonment&quot;), color = &quot;red&quot;) %&gt;% color(i = ~ financial == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;financial&quot;), color = &quot;red&quot;) %&gt;% color(i = ~ selfneglect == &quot;Disagree&quot;, j = c(&quot;CaseID&quot;, &quot;selfneglect&quot;), color = &quot;red&quot;) # For checking # summary_agreement_ad_abuse_type_ft ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] flextable_0.6.7 officer_0.3.19 flexdashboard_0.5.2 ## [4] ggplot2_3.3.5 googlesheets4_1.0.0 testthat_3.0.4 ## [7] stringr_1.4.0 purrr_0.3.4 tidyr_1.1.3 ## [10] dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] Rcpp_1.0.7 assertthat_0.2.1 rprojroot_2.0.2 digest_0.6.27 ## [5] utf8_1.2.2 R6_2.5.1 cellranger_1.1.0 evaluate_0.14 ## [9] httr_1.4.2 highr_0.9 pillar_1.6.4 gdtools_0.2.3 ## [13] rlang_0.4.12 curl_4.3.2 uuid_0.1-4 data.table_1.14.0 ## [17] rstudioapi_0.13 jquerylib_0.1.4 DT_0.18 rmarkdown_2.9 ## [21] desc_1.3.0 labeling_0.4.2 googledrive_2.0.0 htmlwidgets_1.5.3 ## [25] munsell_0.5.0 compiler_4.1.0 xfun_0.24 systemfonts_1.0.2 ## [29] base64enc_0.1-3 pkgconfig_2.0.3 askpass_1.1 htmltools_0.5.1.1 ## [33] openssl_1.4.4 tidyselect_1.1.1 tibble_3.1.6 bookdown_0.22 ## [37] fansi_0.5.0 crayon_1.4.2 withr_2.4.2 rappdirs_0.3.3 ## [41] grid_4.1.0 jsonlite_1.7.2 gtable_0.3.0 lifecycle_1.0.1 ## [45] DBI_1.1.1 magrittr_2.0.1 scales_1.1.1 zip_2.2.0 ## [49] cli_3.1.0 stringi_1.7.3 farver_2.1.0 fs_1.5.0 ## [53] xml2_1.3.2 bslib_0.2.5.1 ellipsis_0.3.2 generics_0.1.1 ## [57] vctrs_0.3.8 tools_4.1.0 glue_1.5.0 crosstalk_1.1.1 ## [61] pkgload_1.2.1 yaml_2.2.1 colorspace_2.0-2 gargle_1.2.0 ## [65] knitr_1.33 sass_0.4.0 "],["language-for-publications.html", "13 Language for publications 13.1 ‚≠êÔ∏èOverview 13.2 üåéUseful websites 13.3 üì¶Load packages 13.4 Statistical software 13.5 IRB", " 13 Language for publications 13.1 ‚≠êÔ∏èOverview This chapter is about language I often need to use and adapt for peer reviewed publications. 13.2 üåéUseful websites R.Version Cite R and R packages 13.3 üì¶Load packages library(tidyverse, warn.conflicts = FALSE) library(freqtables) library(meantables) 13.4 Statistical software In manuscripts, I often want to say something about the software I used to conduct the statistical analyses. Here is an example. 13.4.1 R Statistical analyses were conducted using R version 4.1.0 (R Core Team, 2021) in RStudio version 1.4.1717 (RStudio Team, 2021) with the following packages: tidyverse (Wickham et al., 2019), freqtables (Cannell, 2020), meantables (Cannell, 2020). The functions below can be used to get citations and version numbers. citation() ## ## To cite R in publications use: ## ## R Core Team (2021). R: A language and environment for statistical ## computing. R Foundation for Statistical Computing, Vienna, Austria. ## URL https://www.R-project.org/. ## ## A BibTeX entry for LaTeX users is ## ## @Manual{, ## title = {R: A Language and Environment for Statistical Computing}, ## author = {{R Core Team}}, ## organization = {R Foundation for Statistical Computing}, ## address = {Vienna, Austria}, ## year = {2021}, ## url = {https://www.R-project.org/}, ## } ## ## We have invested a lot of time and effort in creating R, please cite it ## when using it for data analysis. See also &#39;citation(&quot;pkgname&quot;)&#39; for ## citing R packages. R.Version()$version.string ## [1] &quot;R version 4.1.0 (2021-05-18)&quot; # Won&#39;t run when I build book, but this is how you get the RStudio version number rstudioapi::versionInfo() ## Error: RStudio not running citation(&quot;tidyverse&quot;) ## ## Wickham et al., (2019). Welcome to the tidyverse. Journal of Open ## Source Software, 4(43), 1686, https://doi.org/10.21105/joss.01686 ## ## A BibTeX entry for LaTeX users is ## ## @Article{, ## title = {Welcome to the {tidyverse}}, ## author = {Hadley Wickham and Mara Averick and Jennifer Bryan and Winston Chang and Lucy D&#39;Agostino McGowan and Romain Fran√ßois and Garrett Grolemund and Alex Hayes and Lionel Henry and Jim Hester and Max Kuhn and Thomas Lin Pedersen and Evan Miller and Stephan Milton Bache and Kirill M√ºller and Jeroen Ooms and David Robinson and Dana Paige Seidel and Vitalie Spinu and Kohske Takahashi and Davis Vaughan and Claus Wilke and Kara Woo and Hiroaki Yutani}, ## year = {2019}, ## journal = {Journal of Open Source Software}, ## volume = {4}, ## number = {43}, ## pages = {1686}, ## doi = {10.21105/joss.01686}, ## } citation(&quot;freqtables&quot;) ## ## To cite package &#39;freqtables&#39; in publications use: ## ## Brad Cannell (2020). freqtables: Make Quick Descriptive Tables for ## Categorical Variables. R package version 0.1.0. ## https://CRAN.R-project.org/package=freqtables ## ## A BibTeX entry for LaTeX users is ## ## @Manual{, ## title = {freqtables: Make Quick Descriptive Tables for Categorical Variables}, ## author = {Brad Cannell}, ## year = {2020}, ## note = {R package version 0.1.0}, ## url = {https://CRAN.R-project.org/package=freqtables}, ## } 13.4.2 Stata All analyses were conducted using Stata 13 (StataCorp, 2013) 13.4.3 SAS All analyses were completed with SAS version 9.4 (SAS Institute, Cary, NC). 13.5 IRB The Committee for the Protection of Human Subjects at the University of Texas Health Science Center approved this project. The design and conduct of this study was reviewed and approved by the Committee for the Protection of Human Subjects at the University of Texas Health Science Center at Houston. The University of Florida‚Äôs IRB approved the use of de-identified data to conduct this analysis. ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] meantables_0.1.1 freqtables_0.1.0 forcats_0.5.1 ## [4] readr_2.0.0 tibble_3.1.6 tidyverse_1.3.1 ## [7] flextable_0.6.7 officer_0.3.19 flexdashboard_0.5.2 ## [10] ggplot2_3.3.5 googlesheets4_1.0.0 testthat_3.0.4 ## [13] stringr_1.4.0 purrr_0.3.4 tidyr_1.1.3 ## [16] dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] fs_1.5.0 lubridate_1.7.10 httr_1.4.2 rprojroot_2.0.2 ## [5] tools_4.1.0 backports_1.2.1 bslib_0.2.5.1 utf8_1.2.2 ## [9] R6_2.5.1 DT_0.18 DBI_1.1.1 colorspace_2.0-2 ## [13] withr_2.4.2 tidyselect_1.1.1 curl_4.3.2 compiler_4.1.0 ## [17] cli_3.1.0 rvest_1.0.0 xml2_1.3.2 desc_1.3.0 ## [21] labeling_0.4.2 bookdown_0.22 sass_0.4.0 scales_1.1.1 ## [25] askpass_1.1 rappdirs_0.3.3 systemfonts_1.0.2 digest_0.6.27 ## [29] rmarkdown_2.9 base64enc_0.1-3 pkgconfig_2.0.3 htmltools_0.5.1.1 ## [33] dbplyr_2.1.1 highr_0.9 htmlwidgets_1.5.3 rlang_0.4.12 ## [37] readxl_1.3.1 rstudioapi_0.13 jquerylib_0.1.4 farver_2.1.0 ## [41] generics_0.1.1 jsonlite_1.7.2 crosstalk_1.1.1 zip_2.2.0 ## [45] magrittr_2.0.1 Rcpp_1.0.7 munsell_0.5.0 fansi_0.5.0 ## [49] gdtools_0.2.3 lifecycle_1.0.1 stringi_1.7.3 yaml_2.2.1 ## [53] grid_4.1.0 crayon_1.4.2 haven_2.4.1 hms_1.1.0 ## [57] knitr_1.33 pillar_1.6.4 uuid_0.1-4 pkgload_1.2.1 ## [61] reprex_2.0.0 glue_1.5.0 evaluate_0.14 data.table_1.14.0 ## [65] modelr_0.1.8 vctrs_0.3.8 tzdb_0.1.2 cellranger_1.1.0 ## [69] gtable_0.3.0 openssl_1.4.4 assertthat_0.2.1 xfun_0.24 ## [73] broom_0.7.8 googledrive_2.0.0 gargle_1.2.0 ellipsis_0.3.2 "],["officer.html", "14 Officer 14.1 ‚≠êÔ∏èOverview 14.2 üåéUseful websites 14.3 üì¶Load packages 14.4 Formatted text 14.5 Bulleted list 14.6 Adding on to the end of a file. 14.7 Using bookmarks", " 14 Officer 14.1 ‚≠êÔ∏èOverview I don‚Äôt have time to do this right today, but I do make some good notes on using officer. Good examples to check out: LEAD panel monthly report. Sun Study report. stroke study -&gt; table_characteristics_by_network.Rmd. L2C quarterly reports. L2C Distress Tolerance Scale Paper At least until you figure out make files, I think the best thing to do is save tables and figures as files in the docs folder. Create a single R script to compile them all together and create the report. Use comments to specify what file the table/figure is created in. Still trying to figure out if it‚Äôs better to write text in Word and then add in tables and charts with bookmarks, or is it better to write everything in R? In general, it seems helpful/expedient to do as much of the prose and formatting as possible directly in the Word template. Then, just add numbers, tables, and graphs from R with bookmarks. ‚ö†Ô∏èWarning: When editing the code chunks below, you will need to add ‚Äú../../‚Äù in front of file paths that retrieve Word docs from or save word docs to the examples folder if you want them to work when you run them interactively. For example, ‚Äú../../examples/Word Template for Officer.docx.‚Äù However, you have to delete the ‚Äú../../‚Äù from the file paths in order for build book to work. 14.2 üåéUseful websites https://stackoverflow.com/ 14.3 üì¶Load packages library(dplyr, warn.conflicts = FALSE) library(officer, warn.conflicts = FALSE) library(flextable, warn.conflicts = FALSE) 14.4 Formatted text Can start with a template doc &lt;- read_docx(&quot;officer_word_template.docx&quot;) Or not doc &lt;- read_docx() %&gt;% body_add_par(&quot;DETECT LEAD Panel Initial Review Report&quot;, style = &quot;heading 1&quot;) %&gt;% body_add_par(paste(&quot;Updated: &quot;, Sys.Date())) %&gt;% body_add_par(&quot;&quot;) %&gt;% body_add_fpar( fpar( ftext( &quot;Total Initial Assessments:&quot;, prop = fp_text( font.family = &quot;Times New Roman&quot;, font.size = 11 ) ) ) ) print( doc, &quot;examples/officer_formatted_text.docx&quot; ) Link to Word Document on Dropbox # Output Word document # Update the year and month in the file name dynamically print( doc, paste(Sys.Date() %&gt;% format(&quot;%Y-%m&quot;), &quot; Initial Review Report.docx&quot;) ) 14.5 Bulleted list It‚Äôs possible to do. You need to make sure you create a bullet style in the template Word doc. See here: https://github.com/davidgohel/officer/issues/262 # Create Word doc ss_report &lt;- read_docx(&quot;examples/Word Template for Officer.docx&quot;) %&gt;% body_add_par(&quot;Sun Study Outcomes Report&quot;, style = &quot;heading 1&quot;) %&gt;% body_add_par(&quot;\\n&quot;) %&gt;% body_add_par(paste(&quot;Updated: &quot;, Sys.Date())) %&gt;% body_add_par(&quot;\\n&quot;) %&gt;% # Add bulleted list body_add_par(&quot;item 1&quot;, style = &quot;bullet&quot;) %&gt;% body_add_par(&quot;item 2&quot;, style = &quot;bullet&quot;) %&gt;% body_add_par(&quot;item 3&quot;, style = &quot;bullet&quot;) # Output Word document print( ss_report, &quot;examples/officer_bullets.docx&quot; ) Link to Word Document on Dropbox 14.6 Adding on to the end of a file. From the Sun Study. Need to clean up when I get time. Start with the same document we just made above. # Create Word doc ss_report &lt;- read_docx(&quot;examples/Word Template for Officer.docx&quot;) %&gt;% body_add_par(&quot;Sun Study Outcomes Report&quot;, style = &quot;heading 1&quot;) %&gt;% body_add_par(&quot;\\n&quot;) %&gt;% body_add_par(paste(&quot;Updated: &quot;, Sys.Date())) %&gt;% body_add_par(&quot;\\n&quot;) # Output Word document print( ss_report, &quot;examples/officer_bullets.docx&quot; ) Link to Word Document on Dropbox Now add a new section to the document. Section 1. Report on missing data # Load report and add to the end? ss_report &lt;- read_docx(&quot;examples/officer_bullets.docx&quot;) %&gt;% body_add_par(&quot;Test Text&quot;) # Output Word document print( ss_report, &quot;examples/officer_add_to_end.docx&quot; ) Link to Word Document on Dropbox This works. However, there was no advantage to doing it this way in the Sun Study example. In fact, what I‚Äôve found in general is that it typically works best to do as much adding text and formatting things as possible directly in the Word template. Then, just pretty much add flextables and plots to the Word template. 14.7 Using bookmarks Writing everything in an R script and then compiling to a Word document works alright, but wrapping everything in officer functions makes it hard to read. In this section, I‚Äôm seeing if I can type all the narrative in the Word template, then just add tables and figures into the Word template at bookmarks. Website about bookmarks: https://davidgohel.github.io/officer/reference/body_replace_text_at_bkm.html Have to create this with point and click in Word: http://howtomicrosoftofficetutorials.blogspot.com/2017/03/use-bookmarks-in-word-2016-for-mac.html Use Insert &gt; Links &gt; Bookmark If you don‚Äôt add other text around the bookmark, you will get this error: Error: bookmark ‚Äòexample_table‚Äô does not end in the same paragraph (or is on the whole paragraph) A hacky fix is to enclose bookmark text with bm text . Make sure only the ‚Äútext‚Äù part is the bookmark. I also found that you can‚Äôt continue piping the document after you‚Äôve added a flextable at a bookmark. You have to start overwriting the Word document object. See LEAD Panel Summary Report as an example. doc_w_bookmarks &lt;- read_docx(&quot;examples/Word Template for Officer Bookmarks.docx&quot;) %&gt;% body_replace_flextable_at_bkm( bookmark = &quot;example_table&quot;, value = flextable(head(mtcars)) ) print( doc_w_bookmarks, &quot;examples/officer_bookmarks.docx&quot; ) Link to Word Document on Dropbox After figuring this out, I think it makes more sense to write in Word and replace tables and figures with bookmarks. For ggplot graphs, it looks like you need to use ggsave to save the plot as an image file. Then, use the image file as the value to body_replace_img_at_bkm() Don‚Äôt forget to use external_img() Example from L2C quarterly report: doc &lt;- doc %&gt;% body_replace_text_at_bkm(&quot;n_phone_terminations&quot;, as.character(n_phone_terminations)) %&gt;% body_replace_img_at_bkm( &quot;fig_phone_terminations&quot;, external_img(&quot;fig_1.jpeg&quot;, width = 7, height = 4) ) For images, just add the bookmark to the end of the title without surrounding it with ‚Äúbm.‚Äù For example, ‚ÄúFigure 1. Overall trend in sunscreen application outcomes by study p_overall‚Äù Where ‚Äúp_overall is the bookmark. Otherwise, the‚Äùbm\" will still be there. For best results, the width and height used in ggsave() should match the width and height in external_img(). Deciding on the correct width and height might take some trial and error. To add an updated date, use this: doc_w_bookmarks &lt;- doc_w_bookmarks %&gt;% body_replace_text_at_bkm(&quot;date&quot;, as.character(Sys.Date())) ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] meantables_0.1.1 freqtables_0.1.0 forcats_0.5.1 ## [4] readr_2.0.0 tibble_3.1.6 tidyverse_1.3.1 ## [7] flextable_0.6.7 officer_0.3.19 flexdashboard_0.5.2 ## [10] ggplot2_3.3.5 googlesheets4_1.0.0 testthat_3.0.4 ## [13] stringr_1.4.0 purrr_0.3.4 tidyr_1.1.3 ## [16] dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] fs_1.5.0 lubridate_1.7.10 httr_1.4.2 rprojroot_2.0.2 ## [5] tools_4.1.0 backports_1.2.1 bslib_0.2.5.1 utf8_1.2.2 ## [9] R6_2.5.1 DT_0.18 DBI_1.1.1 colorspace_2.0-2 ## [13] withr_2.4.2 tidyselect_1.1.1 curl_4.3.2 compiler_4.1.0 ## [17] cli_3.1.0 rvest_1.0.0 xml2_1.3.2 desc_1.3.0 ## [21] labeling_0.4.2 bookdown_0.22 sass_0.4.0 scales_1.1.1 ## [25] askpass_1.1 rappdirs_0.3.3 systemfonts_1.0.2 digest_0.6.27 ## [29] rmarkdown_2.9 base64enc_0.1-3 pkgconfig_2.0.3 htmltools_0.5.1.1 ## [33] dbplyr_2.1.1 highr_0.9 htmlwidgets_1.5.3 rlang_0.4.12 ## [37] readxl_1.3.1 rstudioapi_0.13 jquerylib_0.1.4 farver_2.1.0 ## [41] generics_0.1.1 jsonlite_1.7.2 crosstalk_1.1.1 zip_2.2.0 ## [45] magrittr_2.0.1 Rcpp_1.0.7 munsell_0.5.0 fansi_0.5.0 ## [49] gdtools_0.2.3 lifecycle_1.0.1 stringi_1.7.3 yaml_2.2.1 ## [53] grid_4.1.0 crayon_1.4.2 haven_2.4.1 hms_1.1.0 ## [57] knitr_1.33 pillar_1.6.4 uuid_0.1-4 pkgload_1.2.1 ## [61] reprex_2.0.0 glue_1.5.0 evaluate_0.14 data.table_1.14.0 ## [65] modelr_0.1.8 vctrs_0.3.8 tzdb_0.1.2 cellranger_1.1.0 ## [69] gtable_0.3.0 openssl_1.4.4 assertthat_0.2.1 xfun_0.24 ## [73] broom_0.7.8 googledrive_2.0.0 gargle_1.2.0 ellipsis_0.3.2 "],["tables.html", "15 Tables 15.1 ‚≠êÔ∏èOverview 15.2 Projects to review and incorporate 15.3 üåéUseful websites 15.4 üì¶Load packages 15.5 üî¢Simulate data 15.6 Example: Table 1 15.7 üî¥ Come back and do this after the table is made in Word", " 15 Tables 15.1 ‚≠êÔ∏èOverview This chapter is about formatting and presenting statistical results in tables. The immediate results of statistical analyses are rarely fit for general consumption. This chapter walks through strategies and functions we can use to make our results ready for presentation/dissemination. Tables are one of the most popular ways to present information to our audience. When our goal is to show our readers precise numerical summaries of our data, the exact values that resulted from our analysis are important. However, the specific details that we may want to present from table to table, or the way in which we want to present them, can vary widely. For example, an initial table of descriptive information about our participants may or may not be stratified by subgroups of interest. Additionally, it may include variables of different types, and for any given type, it may include various different kinds of numerical summaries. Further, there are numerous types of inferential models that result in numerical summaries that we may want to present in a table. For these reasons, it is difficult to create a good one-size-fits-all approach to automating the process of making results ready for presentation and dissemination. Having said that, below we walk through some basic strategies for automating the processes of putting results into presentation-ready summary tables ‚Äì and in a way that makes updating them (which happens A LOT) as painless as possible. 15.2 Projects to review and incorporate stroke study -&gt; table_characteristics_by_network.Rmd to see an example of doing this with purrr::map. When you have time, you should add an example into this document. See Sun Study Report Template for a good example of automating this with Officer and Flextable. I used a little different method in Link2Care &gt; paper_smartphone_app &gt; table_use_app.Rmd. Try to work some of that in below. /Users/bradcannell/Dropbox/01 Research/Elder Abuse/DETECT NIH RFA-AG-18-010/LEAD Panel/summarise_lead_votes/report_filemaker.Rmd This chapter also kind of overlaps with the Flexdashboard and Officer chapters. At some point, I should think about the best way to link and organize the chapters. Another option is to put all the flextable stuff in this chapter. I might still want a separate chapter about officer. 15.3 üåéUseful websites Officer Word document generation Flextable Overview R gtsummary package 15.4 üì¶Load packages library(dplyr, warn.conflicts = FALSE) library(DT) library(freqtables) library(tidyr) library(purrr) 15.5 üî¢Simulate data Have you noticed how we will often calculate the same statistical measures for many different variables in our data? For example, let‚Äôs say that we have some pretty standard data about some study participants that looks like this: study &lt;- tibble( id = c(1:100), age = c(32, 30, 32, 29, 24, 38, 25, 24, 48, 29, 22, 29, 24, 28, 24, 25, 25, 22, 25, 24, 25, 24, 23, 24, 31, 24, 29, 24, 22, 23, 26, 23, 24, 25, 24, 33, 27, 25, 26, 26, 26, 26, 26, 27, 24, 43, 25, 24, 27, 28, 29, 24, 26, 28, 25, 24, 26, 24, 26, 31, 24, 26, 31, 34, 26, 25, 27, 40, 35, 43, 81, 18, 79, 45, 37, 66, 35, 81, 50, 54, 24, 47, 84, 38, 23, 74, 77, 65, 46, 55, 41, 84, 41, 29, 60, 60, 40, 53, 31, 77), age_group = c(2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2), gender = c(2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1), ht_in = c(70, 63, 62, 67, 67, 58, 64, 69, 65, 68, 63, 68, 69, 66, 67, 65, 64, 75, 67, 63, 60, 67, 64, 73, 62, 69, 67, 62, 68, 66, 66, 62, 64, 68, NA, 68, 70, 68, 68, 66, 71, 61, 62, 64, 64, 63, 67, 66, 69, 76, NA, 63, 64, 65, 65, 71, 66, 65, 65, 71, 64, 71, 60, 62, 61, 69, 66, NA, 73, 71, 72, 76, 74, 63, 65, 65, 73, 76, 66, 58, 65, 65, 65, 68, 71, 68, 60, 70, 68, 62, 74, 68, 76, 72, 59, 76, 61, 72, 69, 59), wt_lbs = c(216, 106, 145, 195, 143, 125, 138, 140, 158, 167, 145, 297, 146, 125, 111, 125, 130, 182, 170, 121, 98, 150, 132, 250, 137, 124, 186, 148, 134, 155, 122, 142, 110, 132, 188, 176, 188, 166, 136, 147, 178, 125, 102, 140, 139, 60, 147, 147, 141, 232, 186, 212, 110, 110, 115, 154, 140, 150, 130, NA, 171, 156, 92, 122, 102, 163, 141, NA, 106, 118, 205, 229, 198, 255, 268, 203, 269, 162, 115, 106, 139, 246, 147, 206, 202, 209, 123, 265, 119, 171, 195, 136, 208, 108, 201, 224, 261, 169, 295, 93) ) %&gt;% # Add calculated variables mutate( bmi = round(wt_lbs / ht_in^2 * 703, 2), bmi_4cat = case_when( is.na(bmi) ~ NA_real_, # Missing bmi &lt; 18.5 ~ 1, # Underweight bmi &lt; 25 ~ 2, # Normal weight bmi &lt; 30 ~ 3, # Overweight TRUE ~ 4 # Obese ) ) %&gt;% # Create exposure and outcome where, # Exposure is more likely in people over age 30 and # Outcome is more likely in peeople with exposure mutate( exposure = if_else( age_group == 1, sample(c(0,1), 100, TRUE, c(.9, .1)), sample(c(0,1), 100, TRUE, c(.7, .3)) ), outcome = if_else( exposure == 1, sample(c(0,1), 100, TRUE, c(.8, .2)), sample(c(0,1), 100, TRUE, c(.5, .5)) ) ) %&gt;% # Make factors mutate( age_group = factor(age_group, labels = c(&quot;Younger than 30&quot;, &quot;30 and Older&quot;)), gender = factor(gender, labels = c(&quot;Female&quot;, &quot;Male&quot;)), bmi_4cat = factor(bmi_4cat, labels = c(&quot;Underweight&quot;, &quot;Normal&quot;, &quot;Overweight&quot;, &quot;Obese&quot;)), exposure = factor(exposure, labels = c(&quot;No&quot;, &quot;Yes&quot;)), outcome = factor(outcome, labels = c(&quot;No&quot;, &quot;Yes&quot;)) ) datatable(study, options = list(scrollX = TRUE)) 15.6 Example: Table 1 This first example is perhaps the most common type of table we will create ‚Äì a Table 1 ‚Äì or basic descriptive table about our participants. 15.7 üî¥ Come back and do this after the table is made in Word Let‚Äôs start by looking at a complete example: [Create a table 1 from the study data and insert a screen shot here] After cleaning your data, which isn‚Äôt covered in this chapter, a typical workflow for creating a Table 1 like this may look like the following: 15.7.1 Outcome distribution First, we typically want to see how many people have each value for the outcome of interest. Later, we will want to add these values to our table header as (N = XX). n_outcome &lt;- study %&gt;% count(outcome) %&gt;% pull(n) %&gt;% set_names(levels(study$outcome)) n_outcome ## No Yes ## 51 49 15.7.2 Create helper functions For calculating statistics of interest. Note: This chapter isn‚Äôt about how to calculate or interpret all the various different statistics we may want to calculate from project to project. For more details on descriptve statistics see: R4Epi Descriptive Analysis meantables freqtables Of course, we don‚Äôt have to create helper functions ‚Äì this step is totally optional ‚Äì but, it will make our code easier to maintain. Typically, we will make one helper function for our continuous variables and one helper function for our categorical variables. We do this because the stats we want to calculate for continuous variables (e.g., mean) are almost always different than the stats we want to calculate for categorical variables (e.g., percentages). 15.7.2.1 Continuous stats function Before we make our function, let‚Äôs start by calculating our statistics of interest for a single variable. # For testing study %&gt;% # Remove missing here so we don&#39;t have to add na.rm below filter(!is.na(age)) %&gt;% group_by(outcome) %&gt;% summarise( var = &quot;age&quot;, mean = mean(age), sd = sd(age), ) %&gt;% freq_format(&quot;mean (sd)&quot;, digits = 1) %&gt;% # Currently, the first column is named with the group_by variable. # We are changing the column name to group_cat to make it easier to row bind # later. select(var, group_cat = 1, formatted_stats) %&gt;% tidyr::pivot_wider( names_from = &quot;group_cat&quot;, values_from = &quot;formatted_stats&quot; ) %&gt;% # Add blank row below add_row(var = &quot;&quot;, No = &quot;&quot;, Yes = &quot;&quot;) ## # A tibble: 2 √ó 3 ## var No Yes ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 &quot;age&quot; &quot;34.9 (15.2)&quot; &quot;35.3 (18.2)&quot; ## 2 &quot;&quot; &quot;&quot; &quot;&quot; "],["stuff-from.html", "16 Stuff from", " 16 Stuff from ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] DT_0.18 meantables_0.1.1 freqtables_0.1.0 ## [4] forcats_0.5.1 readr_2.0.0 tibble_3.1.6 ## [7] tidyverse_1.3.1 flextable_0.6.7 officer_0.3.19 ## [10] flexdashboard_0.5.2 ggplot2_3.3.5 googlesheets4_1.0.0 ## [13] testthat_3.0.4 stringr_1.4.0 purrr_0.3.4 ## [16] tidyr_1.1.3 dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] fs_1.5.0 lubridate_1.7.10 httr_1.4.2 rprojroot_2.0.2 ## [5] tools_4.1.0 backports_1.2.1 bslib_0.2.5.1 utf8_1.2.2 ## [9] R6_2.5.1 DBI_1.1.1 colorspace_2.0-2 withr_2.4.2 ## [13] tidyselect_1.1.1 curl_4.3.2 compiler_4.1.0 cli_3.1.0 ## [17] rvest_1.0.0 xml2_1.3.2 desc_1.3.0 labeling_0.4.2 ## [21] bookdown_0.22 sass_0.4.0 scales_1.1.1 askpass_1.1 ## [25] rappdirs_0.3.3 systemfonts_1.0.2 digest_0.6.27 rmarkdown_2.9 ## [29] base64enc_0.1-3 pkgconfig_2.0.3 htmltools_0.5.1.1 dbplyr_2.1.1 ## [33] highr_0.9 htmlwidgets_1.5.3 rlang_0.4.12 readxl_1.3.1 ## [37] rstudioapi_0.13 jquerylib_0.1.4 farver_2.1.0 generics_0.1.1 ## [41] jsonlite_1.7.2 crosstalk_1.1.1 zip_2.2.0 magrittr_2.0.1 ## [45] Rcpp_1.0.7 munsell_0.5.0 fansi_0.5.0 gdtools_0.2.3 ## [49] lifecycle_1.0.1 stringi_1.7.3 yaml_2.2.1 grid_4.1.0 ## [53] crayon_1.4.2 haven_2.4.1 hms_1.1.0 knitr_1.33 ## [57] pillar_1.6.4 uuid_0.1-4 pkgload_1.2.1 reprex_2.0.0 ## [61] glue_1.5.0 evaluate_0.14 data.table_1.14.0 modelr_0.1.8 ## [65] vctrs_0.3.8 tzdb_0.1.2 cellranger_1.1.0 gtable_0.3.0 ## [69] openssl_1.4.4 assertthat_0.2.1 xfun_0.24 broom_0.7.8 ## [73] googledrive_2.0.0 gargle_1.2.0 ellipsis_0.3.2 "],["git-and-github.html", "17 Git and GitHub 17.1 ‚≠êÔ∏èOverview 17.2 üåéUseful websites 17.3 Get rid of .DS_Store 17.4 Amend 17.5 Pull Requests 17.6 Branches", " 17 Git and GitHub 17.1 ‚≠êÔ∏èOverview This chapter is about using Git and GitHub to collaborate. The goal is not to make you a git expert ‚Äî I‚Äôm not a git expert myself. Instead, the goal is to teach you enough git to work with me and my team on research projects. I will also provide you with some additional resources in case you want to become an expert. 17.2 üåéUseful websites How to Use Git/GitHub with R Git Book Happy Git and GitHub for the useR GitHub Hello World tutorial 17.3 Get rid of .DS_Store The .DS_Store file can be an annoyance when working with Git on MacOS. Here is a link to instructions for removing .DS_Store from your repository. Do it early and never worry about it again. In the terminal, run the following code from the root directory: # Remove existing files from the repository: find . -name &quot;*.DS_Store&quot; -type f -exec git-rm {} \\; # Add .DS_Store to .gitignore echo .DS_Store &gt;&gt; .gitignore # Commit the file to the repo git add .gitignore git commit -m &#39;.DS_Store banished!&#39; 17.4 Amend Edit -&gt; commit -&gt; edit -&gt; amend -&gt; commit = no problem! Edit -&gt; commit -&gt; push -&gt; edit -&gt; amend -&gt; commit -&gt; push = problem! Short answer, don‚Äôt do it. Adding more chages to your last commit 17.5 Pull Requests Instructions for leaving comments Very simple merge conflicts can be resolved directly on GitHub.com Use command line instructions to try out the code to resolve more complex merge conflicts. Example command line pull request merge conflict If there are already changes on the branch (so you can‚Äôt pull), you need to either: Commit the changes on the branch (if you want to keep them) Throw away local changes with git checkout -f, and then remove untracked files with git clean -fd 17.6 Branches Naming convention: issue-#-short-description Basic workflow: Create new branch - never develop on Master Push new branch to remote Do some work - commit - amend - push along the way When work is done, create a pull request for Master Deal with merge conflicts if they exist, and merge into Master Delete development branch Merging specific files from another branch. Also, if you haven‚Äôt committed the files you don‚Äôt want to move over yet: Commit just the files you DO want to merge into master. Push Create a request to pull the changes you just committed into the master branch. Don‚Äôt delete the issue branch. Just continue working on the files you don‚Äôt commit and merge with the pull request. ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] DT_0.18 meantables_0.1.1 freqtables_0.1.0 ## [4] forcats_0.5.1 readr_2.0.0 tibble_3.1.6 ## [7] tidyverse_1.3.1 flextable_0.6.7 officer_0.3.19 ## [10] flexdashboard_0.5.2 ggplot2_3.3.5 googlesheets4_1.0.0 ## [13] testthat_3.0.4 stringr_1.4.0 purrr_0.3.4 ## [16] tidyr_1.1.3 dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] fs_1.5.0 lubridate_1.7.10 httr_1.4.2 rprojroot_2.0.2 ## [5] tools_4.1.0 backports_1.2.1 bslib_0.2.5.1 utf8_1.2.2 ## [9] R6_2.5.1 DBI_1.1.1 colorspace_2.0-2 withr_2.4.2 ## [13] tidyselect_1.1.1 curl_4.3.2 compiler_4.1.0 cli_3.1.0 ## [17] rvest_1.0.0 xml2_1.3.2 desc_1.3.0 labeling_0.4.2 ## [21] bookdown_0.22 sass_0.4.0 scales_1.1.1 askpass_1.1 ## [25] rappdirs_0.3.3 systemfonts_1.0.2 digest_0.6.27 rmarkdown_2.9 ## [29] base64enc_0.1-3 pkgconfig_2.0.3 htmltools_0.5.1.1 dbplyr_2.1.1 ## [33] highr_0.9 htmlwidgets_1.5.3 rlang_0.4.12 readxl_1.3.1 ## [37] rstudioapi_0.13 jquerylib_0.1.4 farver_2.1.0 generics_0.1.1 ## [41] jsonlite_1.7.2 crosstalk_1.1.1 zip_2.2.0 magrittr_2.0.1 ## [45] Rcpp_1.0.7 munsell_0.5.0 fansi_0.5.0 gdtools_0.2.3 ## [49] lifecycle_1.0.1 stringi_1.7.3 yaml_2.2.1 grid_4.1.0 ## [53] crayon_1.4.2 haven_2.4.1 hms_1.1.0 knitr_1.33 ## [57] pillar_1.6.4 uuid_0.1-4 pkgload_1.2.1 reprex_2.0.0 ## [61] glue_1.5.0 evaluate_0.14 data.table_1.14.0 modelr_0.1.8 ## [65] vctrs_0.3.8 tzdb_0.1.2 cellranger_1.1.0 gtable_0.3.0 ## [69] openssl_1.4.4 assertthat_0.2.1 xfun_0.24 broom_0.7.8 ## [73] googledrive_2.0.0 gargle_1.2.0 ellipsis_0.3.2 "],["appendix-a-terms-and-definitions.html", "18 Appendix A: Terms and Definitions 18.1 ‚≠êÔ∏èOverview 18.2 üåéUseful websites 18.3 üìñTerms", " 18 Appendix A: Terms and Definitions Need to sort and define: Terms to add to R Notes: * Probability. Look up * Risk. 57, but look up. * Incidence time. 58 * Censoring. 59 * Person time at risk. 60 * Incidence rate. 61 * Inverse time. I think it just means per year, per month, per week, etc. 61 18.1 ‚≠êÔ∏èOverview There are so many terms in epidemiology that are used inconsistently. This note is supposed to help keep track of them all. 18.2 üåéUseful websites https://stackoverflow.com/ 18.3 üìñTerms 18.3.1 General Terms üóíSide Note: At some point, you may want to improve the organization of this note and/or add some graphics. Cohort. A group of persons for whom membership is defined in a permanent fashion, or a population in which membership is determined by satisfying a set of defining events and so becomes permanent. An example of a cohort would be the members of the graduating class of a school in a given year‚Ä¶ With this definition, the members of any cohort constitute a closed population along the time axis in which the chronologically last defining event (e.g., birth with Down syndrome or study recruitment) is taken as the index time.1 Closed population. A closed population adds no new members over time and loses members only to death.1 Open population. Open populations may gain members over time, through immigration or birth, or lose members over time through emigration or death.1 Think of a population defined by a geographic area or political boundary. 18.3.2 General statistics terms Odds. Proportion. Percentage. Ratio. 18.3.3 Measures of occurence Incident. A single occurrence of an outcome of interest. We might also talk about the number of incident cases. Incidence. Incidence proportion. Prevalence. ## R version 4.1.0 (2021-05-18) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] DT_0.18 meantables_0.1.1 freqtables_0.1.0 ## [4] forcats_0.5.1 readr_2.0.0 tibble_3.1.6 ## [7] tidyverse_1.3.1 flextable_0.6.7 officer_0.3.19 ## [10] flexdashboard_0.5.2 ggplot2_3.3.5 googlesheets4_1.0.0 ## [13] testthat_3.0.4 stringr_1.4.0 purrr_0.3.4 ## [16] tidyr_1.1.3 dplyr_1.0.7 ## ## loaded via a namespace (and not attached): ## [1] fs_1.5.0 lubridate_1.7.10 httr_1.4.2 rprojroot_2.0.2 ## [5] tools_4.1.0 backports_1.2.1 bslib_0.2.5.1 utf8_1.2.2 ## [9] R6_2.5.1 DBI_1.1.1 colorspace_2.0-2 withr_2.4.2 ## [13] tidyselect_1.1.1 curl_4.3.2 compiler_4.1.0 cli_3.1.0 ## [17] rvest_1.0.0 xml2_1.3.2 desc_1.3.0 labeling_0.4.2 ## [21] bookdown_0.22 sass_0.4.0 scales_1.1.1 askpass_1.1 ## [25] rappdirs_0.3.3 systemfonts_1.0.2 digest_0.6.27 rmarkdown_2.9 ## [29] base64enc_0.1-3 pkgconfig_2.0.3 htmltools_0.5.1.1 dbplyr_2.1.1 ## [33] highr_0.9 htmlwidgets_1.5.3 rlang_0.4.12 readxl_1.3.1 ## [37] rstudioapi_0.13 jquerylib_0.1.4 farver_2.1.0 generics_0.1.1 ## [41] jsonlite_1.7.2 crosstalk_1.1.1 zip_2.2.0 magrittr_2.0.1 ## [45] Rcpp_1.0.7 munsell_0.5.0 fansi_0.5.0 gdtools_0.2.3 ## [49] lifecycle_1.0.1 stringi_1.7.3 yaml_2.2.1 grid_4.1.0 ## [53] crayon_1.4.2 haven_2.4.1 hms_1.1.0 knitr_1.33 ## [57] pillar_1.6.4 uuid_0.1-4 pkgload_1.2.1 reprex_2.0.0 ## [61] glue_1.5.0 evaluate_0.14 data.table_1.14.0 modelr_0.1.8 ## [65] vctrs_0.3.8 tzdb_0.1.2 cellranger_1.1.0 gtable_0.3.0 ## [69] openssl_1.4.4 assertthat_0.2.1 xfun_0.24 broom_0.7.8 ## [73] googledrive_2.0.0 gargle_1.2.0 ellipsis_0.3.2 "]]
